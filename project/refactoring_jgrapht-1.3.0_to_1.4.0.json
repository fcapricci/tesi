{
"commits": [
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "a2300e18b70dd08636fa8427b54dd95ad2a7cbf6",
	"url": "https://github.com/jgrapht/jgrapht/commit/a2300e18b70dd08636fa8427b54dd95ad2a7cbf6",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "a881dedb4e113f70cf4b6642341113cab16187ce",
	"url": "https://github.com/jgrapht/jgrapht/commit/a881dedb4e113f70cf4b6642341113cab16187ce",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "bf508ebdd03a9ecbe84e43e8780f7277eecee143",
	"url": "https://github.com/jgrapht/jgrapht/commit/bf508ebdd03a9ecbe84e43e8780f7277eecee143",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "e117c7b257ab42b6eee3d172f5cb7d6b2186a882",
	"url": "https://github.com/jgrapht/jgrapht/commit/e117c7b257ab42b6eee3d172f5cb7d6b2186a882",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "9d460d2389b2c0faa11da0e6e80b4564f4cd4144",
	"url": "https://github.com/jgrapht/jgrapht/commit/9d460d2389b2c0faa11da0e6e80b4564f4cd4144",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "082da1507692b20f6caeab16a763649c2c87c518",
	"url": "https://github.com/jgrapht/jgrapht/commit/082da1507692b20f6caeab16a763649c2c87c518",
	"refactorings": [{
	"type": "Rename Method",
	"description": "Rename Method public calculateMaximumFlow(source V, sink V) : double renamed to public getMaximumFlowValue(source V, sink V) : double in class org.jgrapht.alg.flow.GusfieldEquivalentFlowTree",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/GusfieldEquivalentFlowTree.java",
		"startLine": 194,
		"endLine": 213,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public calculateMaximumFlow(source V, sink V) : double"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/GusfieldEquivalentFlowTree.java",
		"startLine": 194,
		"endLine": 213,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "public getMaximumFlowValue(source V, sink V) : double"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method public calculateMaximumFlow(source V, sink V) : double renamed to public getMaximumFlowValue(source V, sink V) : double in class org.jgrapht.alg.flow.GusfieldGomoryHuCutTree",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/GusfieldGomoryHuCutTree.java",
		"startLine": 212,
		"endLine": 233,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public calculateMaximumFlow(source V, sink V) : double"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/GusfieldGomoryHuCutTree.java",
		"startLine": 212,
		"endLine": 233,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "public getMaximumFlowValue(source V, sink V) : double"
}]
},
{
	"type": "Move And Inline Method",
	"description": "Move And Inline Method public getFlow() : Map<E,Double> moved from class org.jgrapht.alg.interfaces.MaximumFlowAlgorithm.MaximumFlow to class org.jgrapht.alg.flow.MaximumFlowAlgorithmTest & inlined to package verifyDirected(source int, sink int, expectedResult double, network Graph<Integer,DefaultWeightedEdge>, maxFlow MaximumFlowAlgorithm.MaximumFlow<DefaultWeightedEdge>) : void",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/MaximumFlowAlgorithm.java",
		"startLine": 114,
		"endLine": 124,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "inlined method declaration",
		"codeElement": "public getFlow() : Map<E,Double>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/MaximumFlowAlgorithm.java",
		"startLine": 123,
		"endLine": 123,
		"startColumn": 13,
		"endColumn": 33,
		"codeElementType": "RETURN_STATEMENT",
		"description": "inlined code from inlined method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTest.java",
		"startLine": 57,
		"endLine": 98,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "target method declaration before inline",
		"codeElement": "package verifyDirected(source int, sink int, expectedResult double, network Graph<Integer,DefaultWeightedEdge>, maxFlow MaximumFlowAlgorithm.MaximumFlow<DefaultWeightedEdge>) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTest.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 49,
		"endColumn": 66,
		"codeElementType": "METHOD_INVOCATION",
		"description": "inlined method invocation",
		"codeElement": "maxFlow.getFlow()"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTest.java",
		"startLine": 57,
		"endLine": 98,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "target method declaration after inline",
		"codeElement": "package verifyDirected(source int, sink int, expectedResult double, network Graph<Integer,DefaultWeightedEdge>, maxFlow MaximumFlowAlgorithm.MaximumFlow<DefaultWeightedEdge>) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTest.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "inlined code in target method declaration",
		"codeElement": null
}]
},
{
	"type": "Move And Inline Method",
	"description": "Move And Inline Method public getFlow() : Map<E,Double> moved from class org.jgrapht.alg.interfaces.MaximumFlowAlgorithm.MaximumFlow to class org.jgrapht.alg.flow.MaximumFlowAlgorithmTest & inlined to package verifyUndirected(graph Graph<Integer,DefaultWeightedEdge>, source int, sink int, expectedResult int, solver MaximumFlowAlgorithm<Integer,DefaultWeightedEdge>) : void",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/MaximumFlowAlgorithm.java",
		"startLine": 114,
		"endLine": 124,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "inlined method declaration",
		"codeElement": "public getFlow() : Map<E,Double>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/MaximumFlowAlgorithm.java",
		"startLine": 123,
		"endLine": 123,
		"startColumn": 13,
		"endColumn": 33,
		"codeElementType": "RETURN_STATEMENT",
		"description": "inlined code from inlined method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTest.java",
		"startLine": 108,
		"endLine": 151,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "target method declaration before inline",
		"codeElement": "package verifyUndirected(graph Graph<Integer,DefaultWeightedEdge>, source int, sink int, expectedResult int, solver MaximumFlowAlgorithm<Integer,DefaultWeightedEdge>) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTest.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 49,
		"endColumn": 66,
		"codeElementType": "METHOD_INVOCATION",
		"description": "inlined method invocation",
		"codeElement": "maxFlow.getFlow()"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTest.java",
		"startLine": 108,
		"endLine": 151,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "target method declaration after inline",
		"codeElement": "package verifyUndirected(graph Graph<Integer,DefaultWeightedEdge>, source int, sink int, expectedResult int, solver MaximumFlowAlgorithm<Integer,DefaultWeightedEdge>) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/MaximumFlowAlgorithmTest.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "inlined code in target method declaration",
		"codeElement": null
}]
},
{
	"type": "Move And Inline Method",
	"description": "Move And Inline Method public getFlow() : Map<E,Double> moved from class org.jgrapht.alg.interfaces.MaximumFlowAlgorithm.MaximumFlow to class org.jgrapht.alg.flow.EdmondsKarpMFImplTest & inlined to public testCornerCases() : void",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/MaximumFlowAlgorithm.java",
		"startLine": 114,
		"endLine": 124,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "inlined method declaration",
		"codeElement": "public getFlow() : Map<E,Double>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/MaximumFlowAlgorithm.java",
		"startLine": 123,
		"endLine": 123,
		"startColumn": 13,
		"endColumn": 33,
		"codeElementType": "RETURN_STATEMENT",
		"description": "inlined code from inlined method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/EdmondsKarpMFImplTest.java",
		"startLine": 42,
		"endLine": 110,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "target method declaration before inline",
		"codeElement": "public testCornerCases() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/EdmondsKarpMFImplTest.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 53,
		"endColumn": 90,
		"codeElementType": "METHOD_INVOCATION",
		"description": "inlined method invocation",
		"codeElement": "solver.getMaximumFlow(0,1).getFlow()"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/EdmondsKarpMFImplTest.java",
		"startLine": 42,
		"endLine": 110,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "target method declaration after inline",
		"codeElement": "public testCornerCases() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/EdmondsKarpMFImplTest.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 13,
		"endColumn": 94,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "inlined code in target method declaration",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "2e0044ad47338d8717fa0c8d2db1801e6aed3285",
	"url": "https://github.com/jgrapht/jgrapht/commit/2e0044ad47338d8717fa0c8d2db1801e6aed3285",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "4c85856bd2306f1a47e9b293832fbc6182eaadd5",
	"url": "https://github.com/jgrapht/jgrapht/commit/4c85856bd2306f1a47e9b293832fbc6182eaadd5",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "d124b6a28ea1be46dadea4bda4b500139ba7a51f",
	"url": "https://github.com/jgrapht/jgrapht/commit/d124b6a28ea1be46dadea4bda4b500139ba7a51f",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "bb5730d7384ff09a208ac38e682e2758be11c42a",
	"url": "https://github.com/jgrapht/jgrapht/commit/bb5730d7384ff09a208ac38e682e2758be11c42a",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "b4a9401875039015e6b273ee9e1bdfda1ef0d10f",
	"url": "https://github.com/jgrapht/jgrapht/commit/b4a9401875039015e6b273ee9e1bdfda1ef0d10f",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "f97d693f498a93a88ae6ea3e63d8d4c985f2af55",
	"url": "https://github.com/jgrapht/jgrapht/commit/f97d693f498a93a88ae6ea3e63d8d4c985f2af55",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "df38daa2002df9837a6acc6abed6bf5bc7a6acb0",
	"url": "https://github.com/jgrapht/jgrapht/commit/df38daa2002df9837a6acc6abed6bf5bc7a6acb0",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "e1c2a4eb0b4f98f0bca788722bc3d3a96345dcc3",
	"url": "https://github.com/jgrapht/jgrapht/commit/e1c2a4eb0b4f98f0bca788722bc3d3a96345dcc3",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "1842ca364e554dec431d5c7da41ad386674e20bf",
	"url": "https://github.com/jgrapht/jgrapht/commit/1842ca364e554dec431d5c7da41ad386674e20bf",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "22d90ab077e7341cc33c7376f8bc9a288d6dfdda",
	"url": "https://github.com/jgrapht/jgrapht/commit/22d90ab077e7341cc33c7376f8bc9a288d6dfdda",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "f9c2bc014518e25fc9af83be5815806672bf1548",
	"url": "https://github.com/jgrapht/jgrapht/commit/f9c2bc014518e25fc9af83be5815806672bf1548",
	"refactorings": [{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected g : Graph<V,E> from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 54,
		"endLine": 54,
		"startColumn": 25,
		"endColumn": 26,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private g : Graph<V,E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 54,
		"endLine": 54,
		"startColumn": 27,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected g : Graph<V,E>"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected isDirected : boolean from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 58,
		"endLine": 58,
		"startColumn": 21,
		"endColumn": 31,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private isDirected : boolean"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 58,
		"endLine": 58,
		"startColumn": 23,
		"endColumn": 33,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected isDirected : boolean"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected verticesHead : VertexNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 24,
		"endColumn": 36,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private verticesHead : VertexNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 26,
		"endColumn": 38,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected verticesHead : VertexNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected eulerianHead : EdgeNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 66,
		"endLine": 66,
		"startColumn": 22,
		"endColumn": 34,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private eulerianHead : EdgeNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 66,
		"endLine": 66,
		"startColumn": 24,
		"endColumn": 36,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected eulerianHead : EdgeNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected startVertex : V from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 15,
		"endColumn": 26,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private startVertex : V"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 17,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected startVertex : V"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected initialize(g Graph<V,E>) : void from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 202,
		"endLine": 233,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private initialize(g Graph<V,E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 202,
		"endLine": 233,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected initialize(g Graph<V,E>) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected cleanup() : void from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 235,
		"endLine": 244,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private cleanup() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 235,
		"endLine": 244,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected cleanup() : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected computePartialCycle() : Pair<EdgeNode,EdgeNode> from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 246,
		"endLine": 275,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private computePartialCycle() : Pair<EdgeNode,EdgeNode>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 246,
		"endLine": 275,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected computePartialCycle() : Pair<EdgeNode,EdgeNode>"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected updateGraphAndInsertLocations(partialCycle Pair<EdgeNode,EdgeNode>, partialCycleSourceVertex VertexNode) : void from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 277,
		"endLine": 306,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private updateGraphAndInsertLocations(partialCycle Pair<EdgeNode,EdgeNode>, partialCycleSourceVertex VertexNode) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 277,
		"endLine": 306,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected updateGraphAndInsertLocations(partialCycle Pair<EdgeNode,EdgeNode>, partialCycleSourceVertex VertexNode) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected buildWalk() : GraphWalk<V,E> from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 308,
		"endLine": 325,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private buildWalk() : GraphWalk<V,E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 308,
		"endLine": 325,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected buildWalk() : GraphWalk<V,E>"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected addEdge(sNode VertexNode, tNode VertexNode, e E) : void from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 330,
		"endLine": 355,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private addEdge(sNode VertexNode, tNode VertexNode, e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 327,
		"endLine": 359,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected addEdge(sNode VertexNode, tNode VertexNode, e E) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected unlink(vNode VertexNode) : void from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 360,
		"endLine": 380,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unlink(vNode VertexNode) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 361,
		"endLine": 386,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected unlink(vNode VertexNode) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected moveToFront(vNode VertexNode) : void from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 385,
		"endLine": 397,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private moveToFront(vNode VertexNode) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 388,
		"endLine": 405,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected moveToFront(vNode VertexNode) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected unlink(eNode EdgeNode) : void from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 402,
		"endLine": 438,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unlink(eNode EdgeNode) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 407,
		"endLine": 448,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected unlink(eNode EdgeNode) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected getOppositeVertex(v VertexNode, e EdgeNode) : VertexNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 443,
		"endLine": 446,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private getOppositeVertex(v VertexNode, e EdgeNode) : VertexNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 450,
		"endLine": 460,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected getOppositeVertex(v VertexNode, e EdgeNode) : VertexNode"
}]
},
{
	"type": "Change Class Access Modifier",
	"description": "Change Class Access Modifier package to protected in class org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 507,
		"endLine": 562,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 528,
		"endLine": 593,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with changed access modifier",
		"codeElement": "org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public e : E from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 510,
		"endLine": 510,
		"startColumn": 11,
		"endColumn": 12,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package e : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 531,
		"endLine": 531,
		"startColumn": 18,
		"endColumn": 19,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public e : E"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public next : EdgeNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 513,
		"endLine": 513,
		"startColumn": 18,
		"endColumn": 22,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package next : EdgeNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 534,
		"endLine": 534,
		"startColumn": 25,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public next : EdgeNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public prev : EdgeNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 514,
		"endLine": 514,
		"startColumn": 18,
		"endColumn": 22,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package prev : EdgeNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 535,
		"endLine": 535,
		"startColumn": 25,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public prev : EdgeNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public reverse : EdgeNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 517,
		"endLine": 517,
		"startColumn": 18,
		"endColumn": 25,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package reverse : EdgeNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 538,
		"endLine": 538,
		"startColumn": 25,
		"endColumn": 32,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public reverse : EdgeNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public sourceNode : VertexNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 520,
		"endLine": 520,
		"startColumn": 20,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package sourceNode : VertexNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 541,
		"endLine": 541,
		"startColumn": 27,
		"endColumn": 37,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public sourceNode : VertexNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public targetNode : VertexNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 521,
		"endLine": 521,
		"startColumn": 20,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package targetNode : VertexNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 542,
		"endLine": 542,
		"startColumn": 27,
		"endColumn": 37,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public targetNode : VertexNode"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier package to public in method public EdgeNode(sourceNode VertexNode, targetNode VertexNode, prev EdgeNode, e E, reverse EdgeNode, next EdgeNode) from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.EdgeNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 523,
		"endLine": 533,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package EdgeNode(sourceNode VertexNode, targetNode VertexNode, prev EdgeNode, e E, reverse EdgeNode, next EdgeNode)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 544,
		"endLine": 564,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "public EdgeNode(sourceNode VertexNode, targetNode VertexNode, prev EdgeNode, e E, reverse EdgeNode, next EdgeNode)"
}]
},
{
	"type": "Change Class Access Modifier",
	"description": "Change Class Access Modifier package to protected in class org.jgrapht.alg.cycle.HierholzerEulerianCycle.VertexNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 451,
		"endLine": 502,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.cycle.HierholzerEulerianCycle.VertexNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 465,
		"endLine": 523,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with changed access modifier",
		"codeElement": "org.jgrapht.alg.cycle.HierholzerEulerianCycle.VertexNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public v : V from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.VertexNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 454,
		"endLine": 454,
		"startColumn": 11,
		"endColumn": 12,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package v : V"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 468,
		"endLine": 468,
		"startColumn": 18,
		"endColumn": 19,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public v : V"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public prev : VertexNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.VertexNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 457,
		"endLine": 457,
		"startColumn": 20,
		"endColumn": 24,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package prev : VertexNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 471,
		"endLine": 471,
		"startColumn": 27,
		"endColumn": 31,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public prev : VertexNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public next : VertexNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.VertexNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 458,
		"endLine": 458,
		"startColumn": 20,
		"endColumn": 24,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package next : VertexNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 472,
		"endLine": 472,
		"startColumn": 27,
		"endColumn": 31,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public next : VertexNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public insertLocation : EdgeNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.VertexNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 461,
		"endLine": 461,
		"startColumn": 18,
		"endColumn": 32,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package insertLocation : EdgeNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 475,
		"endLine": 475,
		"startColumn": 25,
		"endColumn": 39,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public insertLocation : EdgeNode"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to public in attribute public adjEdgesHead : EdgeNode from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.VertexNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 464,
		"endLine": 464,
		"startColumn": 18,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package adjEdgesHead : EdgeNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 478,
		"endLine": 478,
		"startColumn": 25,
		"endColumn": 37,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public adjEdgesHead : EdgeNode"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier package to public in method public VertexNode(prev VertexNode, v V, next VertexNode) from class org.jgrapht.alg.cycle.HierholzerEulerianCycle.VertexNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 466,
		"endLine": 473,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package VertexNode(prev VertexNode, v V, next VertexNode)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HierholzerEulerianCycle.java",
		"startLine": 480,
		"endLine": 494,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "public VertexNode(prev VertexNode, v V, next VertexNode)"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "853625813929a9b5f857cf6a400d1bc111e7f6e7",
	"url": "https://github.com/jgrapht/jgrapht/commit/853625813929a9b5f857cf6a400d1bc111e7f6e7",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "8289e935460a2aecd9287c038ef1c7aba18f0977",
	"url": "https://github.com/jgrapht/jgrapht/commit/8289e935460a2aecd9287c038ef1c7aba18f0977",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "d4fe83575c1f43b60110e96517574749573af6ef",
	"url": "https://github.com/jgrapht/jgrapht/commit/d4fe83575c1f43b60110e96517574749573af6ef",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "ccfa4c4ff3cc1bb7e72e91b08808ed71c3e11807",
	"url": "https://github.com/jgrapht/jgrapht/commit/ccfa4c4ff3cc1bb7e72e91b08808ed71c3e11807",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "1dccf118a9f1ed406099f8b64eb7b37cc3124d27",
	"url": "https://github.com/jgrapht/jgrapht/commit/1dccf118a9f1ed406099f8b64eb7b37cc3124d27",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "bd2661d286f4e02ce3d67cc24642835862c29f90",
	"url": "https://github.com/jgrapht/jgrapht/commit/bd2661d286f4e02ce3d67cc24642835862c29f90",
	"refactorings": [{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Deprecated in method public addEdgeToTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.DirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/DirectedSpecifics.java",
		"startLine": 136,
		"endLine": 147,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/DirectedSpecifics.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 5,
		"endColumn": 16,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/DirectedSpecifics.java",
		"startLine": 137,
		"endLine": 145,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Deprecated in method public removeEdgeFromTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.DirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/DirectedSpecifics.java",
		"startLine": 218,
		"endLine": 229,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/DirectedSpecifics.java",
		"startLine": 269,
		"endLine": 269,
		"startColumn": 5,
		"endColumn": 16,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/DirectedSpecifics.java",
		"startLine": 264,
		"endLine": 277,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method public addEdgeToTouchingVertices(e E) : void renamed to protected addToIndex(sourceVertex V, targetVertex V, e E) : void in class org.jgrapht.graph.specifics.FastLookupDirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 101,
		"endLine": 122,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 155,
		"endLine": 173,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "protected addToIndex(sourceVertex V, targetVertex V, e E) : void"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method protected removeFromIndex(sourceVertex V, targetVertex V, e E) : void extracted from public removeEdgeFromTouchingVertices(e E) : void in class org.jgrapht.graph.specifics.FastLookupDirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 124,
		"endLine": 148,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 9,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 9,
		"endColumn": 68,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 143,
		"endLine": 143,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 145,
		"endLine": 145,
		"startColumn": 17,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 144,
		"endLine": 146,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 142,
		"endLine": 147,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 144,
		"endLine": 146,
		"startColumn": 36,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 142,
		"endLine": 147,
		"startColumn": 30,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 175,
		"endLine": 192,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected removeFromIndex(sourceVertex V, targetVertex V, e E) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 185,
		"endLine": 185,
		"startColumn": 9,
		"endColumn": 68,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 17,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 188,
		"endLine": 190,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 186,
		"endLine": 191,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 188,
		"endLine": 190,
		"startColumn": 36,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 186,
		"endLine": 191,
		"startColumn": 30,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 136,
		"endLine": 145,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 144,
		"endLine": 144,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "removeFromIndex(source,target,e)"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable source : V to sourceVertex : V in method protected removeFromIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupDirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 130,
		"endLine": 130,
		"startColumn": 11,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "source : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 9,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 182,
		"endLine": 182,
		"startColumn": 36,
		"endColumn": 50,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "sourceVertex : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable target : V to targetVertex : V in method protected removeFromIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupDirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 131,
		"endLine": 131,
		"startColumn": 11,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "target : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 9,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 182,
		"endLine": 182,
		"startColumn": 52,
		"endColumn": 66,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "targetVertex : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Deprecated in method public removeEdgeFromTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.FastLookupDirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 124,
		"endLine": 148,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 5,
		"endColumn": 16,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 136,
		"endLine": 145,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable source : V to sourceVertex : V in method protected addToIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupDirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 107,
		"endLine": 107,
		"startColumn": 11,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "source : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 113,
		"endLine": 113,
		"startColumn": 9,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 13,
		"endColumn": 60,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 162,
		"endLine": 162,
		"startColumn": 31,
		"endColumn": 45,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "sourceVertex : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 164,
		"endLine": 164,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 169,
		"endLine": 169,
		"startColumn": 13,
		"endColumn": 66,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable target : V to targetVertex : V in method protected addToIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupDirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 108,
		"endLine": 108,
		"startColumn": 11,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "target : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 113,
		"endLine": 113,
		"startColumn": 9,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 162,
		"endLine": 162,
		"startColumn": 47,
		"endColumn": 61,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "targetVertex : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 164,
		"endLine": 164,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @Override in method public addEdgeToTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.FastLookupDirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 104,
		"endLine": 104,
		"startColumn": 5,
		"endColumn": 14,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 101,
		"endLine": 122,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 155,
		"endLine": 173,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "protected addToIndex(sourceVertex V, targetVertex V, e E) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier public to protected in method protected addToIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupDirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 101,
		"endLine": 122,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupDirectedSpecifics.java",
		"startLine": 155,
		"endLine": 173,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected addToIndex(sourceVertex V, targetVertex V, e E) : void"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method public addEdgeToTouchingVertices(e E) : void renamed to protected addToIndex(sourceVertex V, targetVertex V, e E) : void in class org.jgrapht.graph.specifics.FastLookupUndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 102,
		"endLine": 127,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 157,
		"endLine": 175,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "protected addToIndex(sourceVertex V, targetVertex V, e E) : void"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method protected removeFromIndex(sourceVertex V, targetVertex V, e E) : void extracted from public removeEdgeFromTouchingVertices(e E) : void in class org.jgrapht.graph.specifics.FastLookupUndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 129,
		"endLine": 154,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 147,
		"endLine": 147,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 9,
		"endColumn": 68,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 17,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 151,
		"endLine": 152,
		"startColumn": 13,
		"endColumn": 62,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 149,
		"endLine": 153,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 149,
		"endLine": 153,
		"startColumn": 30,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 177,
		"endLine": 193,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected removeFromIndex(sourceVertex V, targetVertex V, e E) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 186,
		"endLine": 186,
		"startColumn": 9,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 9,
		"endColumn": 68,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 191,
		"endLine": 191,
		"startColumn": 17,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 190,
		"endLine": 191,
		"startColumn": 13,
		"endColumn": 62,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 188,
		"endLine": 192,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 188,
		"endLine": 192,
		"startColumn": 30,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 138,
		"endLine": 147,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "removeFromIndex(source,target,e)"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable source : V to sourceVertex : V in method protected removeFromIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupUndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 11,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "source : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 147,
		"endLine": 147,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 36,
		"endColumn": 50,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "sourceVertex : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 186,
		"endLine": 186,
		"startColumn": 9,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable target : V to targetVertex : V in method protected removeFromIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupUndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 136,
		"endLine": 136,
		"startColumn": 11,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "target : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 147,
		"endLine": 147,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 52,
		"endColumn": 66,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "targetVertex : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 186,
		"endLine": 186,
		"startColumn": 9,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Deprecated in method public removeEdgeFromTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.FastLookupUndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 129,
		"endLine": 154,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 139,
		"endLine": 139,
		"startColumn": 5,
		"endColumn": 16,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 138,
		"endLine": 147,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable source : V to sourceVertex : V in method protected addToIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupUndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 108,
		"endLine": 108,
		"startColumn": 11,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "source : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 114,
		"endLine": 114,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 119,
		"endLine": 119,
		"startColumn": 13,
		"endColumn": 60,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 164,
		"endLine": 164,
		"startColumn": 31,
		"endColumn": 45,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "sourceVertex : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 166,
		"endLine": 166,
		"startColumn": 9,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 171,
		"endLine": 171,
		"startColumn": 13,
		"endColumn": 66,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable target : V to targetVertex : V in method protected addToIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupUndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 11,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "target : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 114,
		"endLine": 114,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 164,
		"endLine": 164,
		"startColumn": 47,
		"endColumn": 61,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "targetVertex : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 166,
		"endLine": 166,
		"startColumn": 9,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @Override in method public addEdgeToTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.FastLookupUndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 105,
		"endLine": 105,
		"startColumn": 5,
		"endColumn": 14,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 102,
		"endLine": 127,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 157,
		"endLine": 175,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "protected addToIndex(sourceVertex V, targetVertex V, e E) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier public to protected in method protected addToIndex(sourceVertex V, targetVertex V, e E) : void from class org.jgrapht.graph.specifics.FastLookupUndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 102,
		"endLine": 127,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/FastLookupUndirectedSpecifics.java",
		"startLine": 157,
		"endLine": 175,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected addToIndex(sourceVertex V, targetVertex V, e E) : void"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Deprecated in method public addEdgeToTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.Specifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/Specifics.java",
		"startLine": 77,
		"endLine": 82,
		"startColumn": 5,
		"endColumn": 41,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/Specifics.java",
		"startLine": 84,
		"endLine": 84,
		"startColumn": 5,
		"endColumn": 16,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/Specifics.java",
		"startLine": 78,
		"endLine": 85,
		"startColumn": 5,
		"endColumn": 41,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Deprecated in method public removeEdgeFromTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.Specifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/Specifics.java",
		"startLine": 136,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 46,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/Specifics.java",
		"startLine": 180,
		"endLine": 180,
		"startColumn": 5,
		"endColumn": 16,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/Specifics.java",
		"startLine": 174,
		"endLine": 181,
		"startColumn": 5,
		"endColumn": 46,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Deprecated in method public addEdgeToTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.UndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/UndirectedSpecifics.java",
		"startLine": 144,
		"endLine": 158,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/UndirectedSpecifics.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 5,
		"endColumn": 16,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/UndirectedSpecifics.java",
		"startLine": 145,
		"endLine": 156,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public addEdgeToTouchingVertices(e E) : void"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Deprecated in method public removeEdgeFromTouchingVertices(e E) : void from class org.jgrapht.graph.specifics.UndirectedSpecifics",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/UndirectedSpecifics.java",
		"startLine": 232,
		"endLine": 246,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/UndirectedSpecifics.java",
		"startLine": 283,
		"endLine": 283,
		"startColumn": 5,
		"endColumn": 16,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/specifics/UndirectedSpecifics.java",
		"startLine": 278,
		"endLine": 294,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public removeEdgeFromTouchingVertices(e E) : void"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "96b8768676f098515f2eb8fcf4bcf2f8fe2bcd5c",
	"url": "https://github.com/jgrapht/jgrapht/commit/96b8768676f098515f2eb8fcf4bcf2f8fe2bcd5c",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "9a2d416eb9ff7fd06d9f62a6638cfbbf92ba8718",
	"url": "https://github.com/jgrapht/jgrapht/commit/9a2d416eb9ff7fd06d9f62a6638cfbbf92ba8718",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "2bfd355b51ee68642eef39406489493129ee9b95",
	"url": "https://github.com/jgrapht/jgrapht/commit/2bfd355b51ee68642eef39406489493129ee9b95",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "a42c7c24d0da8f55336f06a356fd0edeb9691372",
	"url": "https://github.com/jgrapht/jgrapht/commit/a42c7c24d0da8f55336f06a356fd0edeb9691372",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "b5a65b2eda606788121fac0e17f0e328999d8415",
	"url": "https://github.com/jgrapht/jgrapht/commit/b5a65b2eda606788121fac0e17f0e328999d8415",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "1b0e142edce7f21e50194c2ed1eb8f4b13cf755b",
	"url": "https://github.com/jgrapht/jgrapht/commit/1b0e142edce7f21e50194c2ed1eb8f4b13cf755b",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "8dec53196763a200f3b423b5c08f07f5a5976454",
	"url": "https://github.com/jgrapht/jgrapht/commit/8dec53196763a200f3b423b5c08f07f5a5976454",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "176ac773a71133b927e714ecb2c8520ae3452cee",
	"url": "https://github.com/jgrapht/jgrapht/commit/176ac773a71133b927e714ecb2c8520ae3452cee",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "4f6ac9c88d81fe2610ff3fac64e31d5cf25eade3",
	"url": "https://github.com/jgrapht/jgrapht/commit/4f6ac9c88d81fe2610ff3fac64e31d5cf25eade3",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "73de8ef8030ae21b88d93adbfcbe4f5e2ace3106",
	"url": "https://github.com/jgrapht/jgrapht/commit/73de8ef8030ae21b88d93adbfcbe4f5e2ace3106",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "597297c0c57613c20f1f9755e2acc6713c502553",
	"url": "https://github.com/jgrapht/jgrapht/commit/597297c0c57613c20f1f9755e2acc6713c502553",
	"refactorings": [{
	"type": "Rename Variable",
	"description": "Rename Variable url : null to uri : null in method public main(args String[]) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 77,
		"endLine": 77,
		"startColumn": 42,
		"endColumn": 45,
		"codeElementType": "LAMBDA_EXPRESSION_PARAMETER",
		"description": "original variable declaration",
		"codeElement": "url : null"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 77,
		"endLine": 77,
		"startColumn": 49,
		"endColumn": 88,
		"codeElementType": "LAMBDA_EXPRESSION_BODY",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 77,
		"endLine": 77,
		"startColumn": 42,
		"endColumn": 45,
		"codeElementType": "LAMBDA_EXPRESSION_PARAMETER",
		"description": "renamed variable declaration",
		"codeElement": "uri : null"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 77,
		"endLine": 77,
		"startColumn": 49,
		"endColumn": 88,
		"codeElementType": "LAMBDA_EXPRESSION_BODY",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type hrefGraph : Graph<URL,DefaultEdge> to hrefGraph : Graph<URI,DefaultEdge> in method public main(args String[]) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 72,
		"endLine": 72,
		"startColumn": 33,
		"endColumn": 62,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "hrefGraph : Graph<URL,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 85,
		"endLine": 85,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 76,
		"endLine": 78,
		"startColumn": 9,
		"endColumn": 20,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 72,
		"endLine": 72,
		"startColumn": 33,
		"endColumn": 62,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hrefGraph : Graph<URI,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 85,
		"endLine": 85,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 76,
		"endLine": 78,
		"startColumn": 9,
		"endColumn": 20,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type start : URL to start : URI in method public main(args String[]) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 76,
		"endLine": 78,
		"startColumn": 13,
		"endColumn": 19,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "start : URL"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 85,
		"endLine": 85,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 76,
		"endLine": 78,
		"startColumn": 13,
		"endColumn": 19,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "start : URI"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 85,
		"endLine": 85,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Thrown Exception Type",
	"description": "Change Thrown Exception Type MalformedURLException to URISyntaxException in method public main(args String[]) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 57,
		"endLine": 57,
		"startColumn": 16,
		"endColumn": 37,
		"codeElementType": "TYPE",
		"description": "original exception type",
		"codeElement": "MalformedURLException"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 48,
		"endLine": 91,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public main(args String[]) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 57,
		"endLine": 57,
		"startColumn": 16,
		"endColumn": 34,
		"codeElementType": "TYPE",
		"description": "changed exception type",
		"codeElement": "URISyntaxException"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 48,
		"endLine": 91,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed thrown exception type",
		"codeElement": "public main(args String[]) : void"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type g : Graph<URL,DefaultEdge> to g : Graph<URI,DefaultEdge> in method private createHrefGraph() : Graph<URI,DefaultEdge> from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 103,
		"endLine": 103,
		"startColumn": 33,
		"endColumn": 82,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "g : Graph<URL,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 110,
		"endLine": 110,
		"startColumn": 9,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 112,
		"endLine": 112,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 116,
		"endLine": 116,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 117,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 9,
		"endColumn": 18,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 103,
		"endLine": 103,
		"startColumn": 33,
		"endColumn": 82,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "g : Graph<URI,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 110,
		"endLine": 110,
		"startColumn": 9,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 112,
		"endLine": 112,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 116,
		"endLine": 116,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 117,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 9,
		"endColumn": 18,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type google : URL to google : URI in method private createHrefGraph() : Graph<URI,DefaultEdge> from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 105,
		"endLine": 105,
		"startColumn": 13,
		"endColumn": 54,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "google : URL"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 110,
		"endLine": 110,
		"startColumn": 9,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 116,
		"endLine": 116,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 117,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 105,
		"endLine": 105,
		"startColumn": 13,
		"endColumn": 54,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "google : URI"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 110,
		"endLine": 110,
		"startColumn": 9,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 116,
		"endLine": 116,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 117,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type wikipedia : URL to wikipedia : URI in method private createHrefGraph() : Graph<URI,DefaultEdge> from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 106,
		"endLine": 106,
		"startColumn": 13,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "wikipedia : URL"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 117,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 106,
		"endLine": 106,
		"startColumn": 13,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "wikipedia : URI"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 117,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type jgrapht : URL to jgrapht : URI in method private createHrefGraph() : Graph<URI,DefaultEdge> from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 107,
		"endLine": 107,
		"startColumn": 13,
		"endColumn": 56,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "jgrapht : URL"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 112,
		"endLine": 112,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 116,
		"endLine": 116,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 107,
		"endLine": 107,
		"startColumn": 13,
		"endColumn": 56,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "jgrapht : URI"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 112,
		"endLine": 112,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 116,
		"endLine": 116,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type Graph<URL,DefaultEdge> to Graph<URI,DefaultEdge> in method private createHrefGraph() : Graph<URI,DefaultEdge> from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 98,
		"endLine": 98,
		"startColumn": 20,
		"endColumn": 43,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "Graph<URL,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 93,
		"endLine": 123,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private createHrefGraph() : Graph<URL,DefaultEdge>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 98,
		"endLine": 98,
		"startColumn": 20,
		"endColumn": 43,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "Graph<URI,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 93,
		"endLine": 123,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "private createHrefGraph() : Graph<URI,DefaultEdge>"
}]
},
{
	"type": "Change Thrown Exception Type",
	"description": "Change Thrown Exception Type MalformedURLException to URISyntaxException in method private createHrefGraph() : Graph<URI,DefaultEdge> from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 99,
		"endLine": 99,
		"startColumn": 16,
		"endColumn": 37,
		"codeElementType": "TYPE",
		"description": "original exception type",
		"codeElement": "MalformedURLException"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 93,
		"endLine": 123,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private createHrefGraph() : Graph<URL,DefaultEdge>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 99,
		"endLine": 99,
		"startColumn": 16,
		"endColumn": 34,
		"codeElementType": "TYPE",
		"description": "changed exception type",
		"codeElement": "URISyntaxException"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 93,
		"endLine": 123,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed thrown exception type",
		"codeElement": "private createHrefGraph() : Graph<URI,DefaultEdge>"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type url : URL to uri : URI in method private traverseHrefGraph(hrefGraph Graph<URI,DefaultEdge>, start URI) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 17,
		"endColumn": 38,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "url : URL"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 13,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 17,
		"endColumn": 38,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "uri : URI"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 13,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type iterator : Iterator<URL> to iterator : Iterator<URI> in method private traverseHrefGraph(hrefGraph Graph<URI,DefaultEdge>, start URI) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 23,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "iterator : Iterator<URL>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 136,
		"endLine": 139,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "WHILE_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 23,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "iterator : Iterator<URI>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 136,
		"endLine": 139,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "WHILE_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type hrefGraph : Graph<URL,DefaultEdge> to hrefGraph : Graph<URI,DefaultEdge> in method private traverseHrefGraph(hrefGraph Graph<URI,DefaultEdge>, start URI) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 43,
		"endColumn": 76,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "hrefGraph : Graph<URL,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 9,
		"endColumn": 77,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 43,
		"endColumn": 76,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "hrefGraph : Graph<URI,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 9,
		"endColumn": 77,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type start : URL to start : URI in method private traverseHrefGraph(hrefGraph Graph<URI,DefaultEdge>, start URI) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 78,
		"endColumn": 87,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "start : URL"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 9,
		"endColumn": 77,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 78,
		"endColumn": 87,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "start : URI"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 9,
		"endColumn": 77,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable url : URL to uri : URI in method private traverseHrefGraph(hrefGraph Graph<URI,DefaultEdge>, start URI) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 17,
		"endColumn": 38,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "url : URL"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 13,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 17,
		"endColumn": 38,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "uri : URI"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 13,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type exporter : GraphExporter<URL,DefaultEdge> to exporter : GraphExporter<URI,DefaultEdge> in method private renderHrefGraph(hrefGraph Graph<URI,DefaultEdge>) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 169,
		"endLine": 170,
		"startColumn": 41,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "exporter : GraphExporter<URL,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 169,
		"endLine": 170,
		"startColumn": 41,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "exporter : GraphExporter<URI,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type hrefGraph : Graph<URL,DefaultEdge> to hrefGraph : Graph<URI,DefaultEdge> in method private renderHrefGraph(hrefGraph Graph<URI,DefaultEdge>) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 41,
		"endColumn": 74,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "hrefGraph : Graph<URL,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 41,
		"endColumn": 74,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "hrefGraph : Graph<URI,DefaultEdge>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type vertexIdProvider : ComponentNameProvider<URL> to vertexIdProvider : ComponentNameProvider<URI> in method private renderHrefGraph(hrefGraph Graph<URI,DefaultEdge>) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 155,
		"endLine": 161,
		"startColumn": 36,
		"endColumn": 10,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "vertexIdProvider : ComponentNameProvider<URL>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 169,
		"endLine": 170,
		"startColumn": 9,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 155,
		"endLine": 161,
		"startColumn": 36,
		"endColumn": 10,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "vertexIdProvider : ComponentNameProvider<URI>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 169,
		"endLine": 170,
		"startColumn": 9,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type vertexLabelProvider : ComponentNameProvider<URL> to vertexLabelProvider : ComponentNameProvider<URI> in method private renderHrefGraph(hrefGraph Graph<URI,DefaultEdge>) : void from class org.jgrapht.demo.HelloJGraphT",
	"leftSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 162,
		"endLine": 168,
		"startColumn": 36,
		"endColumn": 10,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "vertexLabelProvider : ComponentNameProvider<URL>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 169,
		"endLine": 170,
		"startColumn": 9,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 162,
		"endLine": 168,
		"startColumn": 36,
		"endColumn": 10,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "vertexLabelProvider : ComponentNameProvider<URI>"
}, {
		"filePath": "jgrapht-demo/src/main/java/org/jgrapht/demo/HelloJGraphT.java",
		"startLine": 169,
		"endLine": 170,
		"startColumn": 9,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "bc587e1aa23039de2061ec692000d881e43e12c1",
	"url": "https://github.com/jgrapht/jgrapht/commit/bc587e1aa23039de2061ec692000d881e43e12c1",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "b2355ffff22a965864bcea56a40f46a65fd19903",
	"url": "https://github.com/jgrapht/jgrapht/commit/b2355ffff22a965864bcea56a40f46a65fd19903",
	"refactorings": [{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type delegate : FibonacciHeap<V> to delegate : AddressableHeap<Double,V> in class org.jgrapht.alg.scoring.BetweennessCentrality.WeightedQueue",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/BetweennessCentrality.java",
		"startLine": 230,
		"endLine": 230,
		"startColumn": 26,
		"endColumn": 58,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "delegate : FibonacciHeap<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/BetweennessCentrality.java",
		"startLine": 233,
		"endLine": 233,
		"startColumn": 36,
		"endColumn": 66,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "delegate : AddressableHeap<Double,V>"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type seen : Map<V,FibonacciHeapNode<V>> to seen : Map<V,AddressableHeap.Handle<Double,V>> in class org.jgrapht.alg.scoring.BetweennessCentrality.WeightedQueue",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/BetweennessCentrality.java",
		"startLine": 231,
		"endLine": 231,
		"startColumn": 38,
		"endColumn": 60,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "seen : Map<V,FibonacciHeapNode<V>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/BetweennessCentrality.java",
		"startLine": 234,
		"endLine": 234,
		"startColumn": 51,
		"endColumn": 73,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "seen : Map<V,AddressableHeap.Handle<Double,V>>"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<V> to node : AddressableHeap.Handle<Double,V> in method public insert(t V, d Double) : void from class org.jgrapht.alg.scoring.BetweennessCentrality.WeightedQueue",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/BetweennessCentrality.java",
		"startLine": 236,
		"endLine": 236,
		"startColumn": 34,
		"endColumn": 67,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/BetweennessCentrality.java",
		"startLine": 238,
		"endLine": 238,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/BetweennessCentrality.java",
		"startLine": 239,
		"endLine": 239,
		"startColumn": 47,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/BetweennessCentrality.java",
		"startLine": 240,
		"endLine": 240,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type openList : FibonacciHeap<V> to openList : AddressableHeap<Double,V> in class org.jgrapht.alg.shortestpath.AStarShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 64,
		"endLine": 64,
		"startColumn": 32,
		"endColumn": 40,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "openList : FibonacciHeap<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 42,
		"endColumn": 50,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "openList : AddressableHeap<Double,V>"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type vertexToHeapNodeMap : Map<V,FibonacciHeapNode<V>> to vertexToHeapNodeMap : Map<V,AddressableHeap.Handle<Double,V>> in class org.jgrapht.alg.shortestpath.AStarShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 65,
		"endLine": 65,
		"startColumn": 44,
		"endColumn": 63,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "vertexToHeapNodeMap : Map<V,FibonacciHeapNode<V>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 57,
		"endColumn": 76,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "vertexToHeapNodeMap : Map<V,AddressableHeap.Handle<Double,V>>"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public AStarShortestPath(graph Graph<V,E>, admissibleHeuristic AStarAdmissibleHeuristic<V>, heapSupplier Supplier<AddressableHeap<Double,V>>) extracted from public AStarShortestPath(graph Graph<V,E>, admissibleHeuristic AStarAdmissibleHeuristic<V>) in class org.jgrapht.alg.shortestpath.AStarShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 86,
		"endLine": 99,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public AStarShortestPath(graph Graph<V,E>, admissibleHeuristic AStarAdmissibleHeuristic<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 95,
		"endLine": 95,
		"startColumn": 9,
		"endColumn": 22,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 96,
		"endLine": 97,
		"startColumn": 9,
		"endColumn": 95,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 98,
		"endLine": 98,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 101,
		"endLine": 115,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public AStarShortestPath(graph Graph<V,E>, admissibleHeuristic AStarAdmissibleHeuristic<V>, heapSupplier Supplier<AddressableHeap<Double,V>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 110,
		"endLine": 110,
		"startColumn": 9,
		"endColumn": 22,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 111,
		"endLine": 112,
		"startColumn": 9,
		"endColumn": 99,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 113,
		"endLine": 113,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 90,
		"endLine": 99,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public AStarShortestPath(graph Graph<V,E>, admissibleHeuristic AStarAdmissibleHeuristic<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 98,
		"endLine": 98,
		"startColumn": 9,
		"endColumn": 60,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(graph,admissibleHeuristic,PairingHeap::new)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 114,
		"endLine": 114,
		"startColumn": 9,
		"endColumn": 99,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type currentNode : FibonacciHeapNode<V> to currentNode : AddressableHeap.Handle<Double,V> in method public getPath(sourceVertex V, targetVertex V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.AStarShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 144,
		"endLine": 144,
		"startColumn": 34,
		"endColumn": 68,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "currentNode : FibonacciHeapNode<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 149,
		"endLine": 149,
		"startColumn": 17,
		"endColumn": 94,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 13,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 13,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 147,
		"endLine": 150,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 157,
		"endLine": 157,
		"startColumn": 47,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "currentNode : AddressableHeap.Handle<Double,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 162,
		"endLine": 162,
		"startColumn": 17,
		"endColumn": 94,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 166,
		"endLine": 166,
		"startColumn": 13,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 167,
		"endLine": 167,
		"startColumn": 13,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 160,
		"endLine": 163,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type heapNode : FibonacciHeapNode<V> to heapNode : AddressableHeap.Handle<Double,V> in method public getPath(sourceVertex V, targetVertex V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.AStarShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 139,
		"endLine": 139,
		"startColumn": 30,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "heapNode : FibonacciHeapNode<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 9,
		"endColumn": 57,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 43,
		"endColumn": 88,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "heapNode : AddressableHeap.Handle<Double,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 9,
		"endColumn": 57,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type currentNode : FibonacciHeapNode<V> to currentNode : AddressableHeap.Handle<Double,V> in method private expandNode(currentNode AddressableHeap.Handle<Double,V>, endVertex V) : void from class org.jgrapht.alg.shortestpath.AStarShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 202,
		"endLine": 202,
		"startColumn": 29,
		"endColumn": 61,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "currentNode : FibonacciHeapNode<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 206,
		"endLine": 206,
		"startColumn": 9,
		"endColumn": 77,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 209,
		"endLine": 209,
		"startColumn": 13,
		"endColumn": 88,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 215,
		"endLine": 215,
		"startColumn": 13,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 211,
		"endLine": 213,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 213,
		"endLine": 213,
		"startColumn": 29,
		"endColumn": 74,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "currentNode : AddressableHeap.Handle<Double,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 216,
		"endLine": 216,
		"startColumn": 9,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 219,
		"endLine": 219,
		"startColumn": 13,
		"endColumn": 89,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 225,
		"endLine": 225,
		"startColumn": 13,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 221,
		"endLine": 223,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type heapNode : FibonacciHeapNode<V> to heapNode : AddressableHeap.Handle<Double,V> in method private expandNode(currentNode AddressableHeap.Handle<Double,V>, endVertex V) : void from class org.jgrapht.alg.shortestpath.AStarShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 240,
		"endLine": 240,
		"startColumn": 38,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "heapNode : FibonacciHeapNode<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 242,
		"endLine": 242,
		"startColumn": 17,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 250,
		"endLine": 250,
		"startColumn": 51,
		"endColumn": 96,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "heapNode : AddressableHeap.Handle<Double,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 251,
		"endLine": 251,
		"startColumn": 17,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public BidirectionalDijkstraShortestPath(graph Graph<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<V,E>>>) extracted from public BidirectionalDijkstraShortestPath(graph Graph<V,E>, radius double) in class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 59,
		"endLine": 72,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public BidirectionalDijkstraShortestPath(graph Graph<V,E>, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 67,
		"endLine": 67,
		"startColumn": 9,
		"endColumn": 22,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 68,
		"endLine": 70,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 68,
		"endLine": 70,
		"startColumn": 27,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 89,
		"endLine": 104,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public BidirectionalDijkstraShortestPath(graph Graph<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<V,E>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 98,
		"endLine": 98,
		"startColumn": 9,
		"endColumn": 22,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 100,
		"endLine": 100,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 103,
		"endLine": 103,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 99,
		"endLine": 101,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 99,
		"endLine": 101,
		"startColumn": 27,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 79,
		"endLine": 87,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public BidirectionalDijkstraShortestPath(graph Graph<V,E>, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 86,
		"endLine": 86,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(graph,radius,PairingHeap::new)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 102,
		"endLine": 102,
		"startColumn": 9,
		"endColumn": 98,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry> to node : AddressableHeap.Handle<Double,Pair<V,E>> in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 120,
		"endLine": 120,
		"startColumn": 43,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 13,
		"endColumn": 46,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 165,
		"endLine": 165,
		"startColumn": 56,
		"endColumn": 88,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,Pair<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 167,
		"endLine": 167,
		"startColumn": 13,
		"endColumn": 46,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type heap : FibonacciHeap<QueueEntry> to heap : AddressableHeap<Double,Pair<V,E>> in class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.SearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 223,
		"endLine": 223,
		"startColumn": 41,
		"endColumn": 45,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "heap : FibonacciHeap<QueueEntry>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 248,
		"endLine": 248,
		"startColumn": 51,
		"endColumn": 55,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "heap : AddressableHeap<Double,Pair<V,E>>"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type seen : Map<V,FibonacciHeapNode<QueueEntry>> to seen : Map<V,AddressableHeap.Handle<Double,Pair<V,E>>> in class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.SearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 224,
		"endLine": 224,
		"startColumn": 53,
		"endColumn": 57,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "seen : Map<V,FibonacciHeapNode<QueueEntry>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 66,
		"endColumn": 70,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "seen : Map<V,AddressableHeap.Handle<Double,Pair<V,E>>>"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry> to node : AddressableHeap.Handle<Double,Pair<V,E>> in method public updateDistance(v V, e E, distance double) : void from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.SearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 235,
		"endLine": 235,
		"startColumn": 43,
		"endColumn": 61,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 239,
		"endLine": 239,
		"startColumn": 17,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 241,
		"endLine": 244,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 236,
		"endLine": 245,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 258,
		"endLine": 258,
		"startColumn": 56,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,Pair<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 261,
		"endLine": 261,
		"startColumn": 17,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 263,
		"endLine": 266,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 259,
		"endLine": 267,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry> to node : AddressableHeap.Handle<Double,Pair<V,E>> in method public getDistance(v V) : double from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.SearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 250,
		"endLine": 250,
		"startColumn": 43,
		"endColumn": 61,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 254,
		"endLine": 254,
		"startColumn": 17,
		"endColumn": 38,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 251,
		"endLine": 255,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 271,
		"endLine": 271,
		"startColumn": 56,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,Pair<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 275,
		"endLine": 275,
		"startColumn": 17,
		"endColumn": 38,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 272,
		"endLine": 276,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry> to node : AddressableHeap.Handle<Double,Pair<V,E>> in method public getTreeEdge(v V) : E from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.SearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 260,
		"endLine": 260,
		"startColumn": 43,
		"endColumn": 61,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 264,
		"endLine": 264,
		"startColumn": 17,
		"endColumn": 41,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 261,
		"endLine": 265,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 280,
		"endLine": 280,
		"startColumn": 56,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,Pair<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 284,
		"endLine": 284,
		"startColumn": 17,
		"endColumn": 52,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 281,
		"endLine": 285,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type heap : FibonacciHeap<QueueEntry> to heap : AddressableHeap<Double,Pair<V,E>> in class org.jgrapht.alg.shortestpath.DijkstraClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 56,
		"endLine": 56,
		"startColumn": 45,
		"endColumn": 49,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "heap : FibonacciHeap<QueueEntry>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 59,
		"endLine": 59,
		"startColumn": 49,
		"endColumn": 53,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "heap : AddressableHeap<Double,Pair<V,E>>"
}]
},
{
	"type": "Remove Attribute Modifier",
	"description": "Remove Attribute Modifier final in attribute private heap : FibonacciHeap<QueueEntry> from class org.jgrapht.alg.shortestpath.DijkstraClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 56,
		"endLine": 56,
		"startColumn": 45,
		"endColumn": 49,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private heap : FibonacciHeap<QueueEntry>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 59,
		"endLine": 59,
		"startColumn": 49,
		"endColumn": 53,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with removed modifier",
		"codeElement": "private heap : AddressableHeap<Double,Pair<V,E>>"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type seen : Map<V,FibonacciHeapNode<QueueEntry>> to seen : Map<V,AddressableHeap.Handle<Double,Pair<V,E>>> in class org.jgrapht.alg.shortestpath.DijkstraClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 57,
		"endLine": 57,
		"startColumn": 57,
		"endColumn": 61,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "seen : Map<V,FibonacciHeapNode<QueueEntry>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 58,
		"endLine": 58,
		"startColumn": 70,
		"endColumn": 74,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "seen : Map<V,AddressableHeap.Handle<Double,Pair<V,E>>>"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public DijkstraClosestFirstIterator(graph Graph<V,E>, source V, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<V,E>>>) extracted from public DijkstraClosestFirstIterator(graph Graph<V,E>, source V, radius double) in class org.jgrapht.alg.shortestpath.DijkstraClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 71,
		"endLine": 94,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public DijkstraClosestFirstIterator(graph Graph<V,E>, source V, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 83,
		"endLine": 83,
		"startColumn": 9,
		"endColumn": 76,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 86,
		"endLine": 86,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 9,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 93,
		"endLine": 93,
		"startColumn": 9,
		"endColumn": 42,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 84,
		"endLine": 84,
		"startColumn": 9,
		"endColumn": 86,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 85,
		"endLine": 87,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 85,
		"endLine": 87,
		"startColumn": 27,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 100,
		"endLine": 123,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public DijkstraClosestFirstIterator(graph Graph<V,E>, source V, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<V,E>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 112,
		"endLine": 112,
		"startColumn": 9,
		"endColumn": 76,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 116,
		"endLine": 116,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 119,
		"endLine": 119,
		"startColumn": 9,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 9,
		"endColumn": 42,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 113,
		"endLine": 113,
		"startColumn": 9,
		"endColumn": 86,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 115,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 115,
		"endLine": 117,
		"startColumn": 27,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 73,
		"endLine": 85,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public DijkstraClosestFirstIterator(graph Graph<V,E>, source V, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 84,
		"endLine": 84,
		"startColumn": 9,
		"endColumn": 55,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(graph,source,radius,PairingHeap::new)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 114,
		"endLine": 114,
		"startColumn": 9,
		"endColumn": 78,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 120,
		"endLine": 120,
		"startColumn": 9,
		"endColumn": 40,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type vNode : FibonacciHeapNode<QueueEntry> to vNode : AddressableHeap.Handle<Double,Pair<V,E>> in method public hasNext() : boolean from class org.jgrapht.alg.shortestpath.DijkstraClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 105,
		"endLine": 105,
		"startColumn": 39,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "vNode : FibonacciHeapNode<QueueEntry>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 106,
		"endLine": 106,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 133,
		"endLine": 133,
		"startColumn": 52,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "vNode : AddressableHeap.Handle<Double,Pair<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type vNode : FibonacciHeapNode<QueueEntry> to vNode : AddressableHeap.Handle<Double,Pair<V,E>> in method public next() : V from class org.jgrapht.alg.shortestpath.DijkstraClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 39,
		"endColumn": 63,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "vNode : FibonacciHeapNode<QueueEntry>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 52,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "vNode : AddressableHeap.Handle<Double,Pair<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type vNode : FibonacciHeapNode<QueueEntry> to vNode : AddressableHeap.Handle<Double,Pair<V,E>> in method public getDistanceAndPredecessorMap() : Map<V,Pair<Double,E>> from class org.jgrapht.alg.shortestpath.DijkstraClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 14,
		"endColumn": 49,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "vNode : FibonacciHeapNode<QueueEntry>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 173,
		"endLine": 173,
		"startColumn": 13,
		"endColumn": 47,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 178,
		"endLine": 178,
		"startColumn": 13,
		"endColumn": 85,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 197,
		"endLine": 197,
		"startColumn": 14,
		"endColumn": 62,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "vNode : AddressableHeap.Handle<Double,Pair<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 198,
		"endLine": 198,
		"startColumn": 13,
		"endColumn": 47,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 203,
		"endLine": 203,
		"startColumn": 13,
		"endColumn": 96,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry> to node : AddressableHeap.Handle<Double,Pair<V,E>> in method private updateDistance(v V, e E, distance double) : void from class org.jgrapht.alg.shortestpath.DijkstraClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 186,
		"endLine": 186,
		"startColumn": 39,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 191,
		"endLine": 194,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 187,
		"endLine": 194,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 210,
		"endLine": 210,
		"startColumn": 52,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,Pair<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 213,
		"endLine": 213,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 214,
		"endLine": 217,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraClosestFirstIterator.java",
		"startLine": 211,
		"endLine": 217,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public DijkstraShortestPath(graph Graph<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<V,E>>>) extracted from public DijkstraShortestPath(graph Graph<V,E>, radius double) in class org.jgrapht.alg.shortestpath.DijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 47,
		"endLine": 60,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public DijkstraShortestPath(graph Graph<V,E>, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 55,
		"endLine": 55,
		"startColumn": 9,
		"endColumn": 22,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 57,
		"endLine": 57,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 59,
		"endLine": 59,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 56,
		"endLine": 58,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 56,
		"endLine": 58,
		"startColumn": 27,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 75,
		"endLine": 89,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public DijkstraShortestPath(graph Graph<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<V,E>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 83,
		"endLine": 83,
		"startColumn": 9,
		"endColumn": 22,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 85,
		"endLine": 85,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 84,
		"endLine": 86,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 84,
		"endLine": 86,
		"startColumn": 27,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 53,
		"endLine": 62,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public DijkstraShortestPath(graph Graph<V,E>, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 61,
		"endLine": 61,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(graph,radius,PairingHeap::new)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DijkstraShortestPath.java",
		"startLine": 87,
		"endLine": 87,
		"startColumn": 9,
		"endColumn": 42,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type heap : FibonacciHeap<V> to heap : AddressableHeap<Double,V> in class org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner.WeightedSpannerAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 36,
		"endColumn": 40,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "heap : FibonacciHeap<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 222,
		"endLine": 222,
		"startColumn": 46,
		"endColumn": 50,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "heap : AddressableHeap<Double,V>"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type nodes : Map<V,FibonacciHeapNode<V>> to nodes : Map<V,AddressableHeap.Handle<Double,V>> in class org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner.WeightedSpannerAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 221,
		"endLine": 221,
		"startColumn": 48,
		"endColumn": 53,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "nodes : Map<V,FibonacciHeapNode<V>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 223,
		"endLine": 223,
		"startColumn": 61,
		"endColumn": 66,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "nodes : Map<V,AddressableHeap.Handle<Double,V>>"
}]
},
{
	"type": "Replace Generic With Diamond",
	"description": "Replace Generic With Diamond FibonacciHeap<V> with PairingHeap<> in method public WeightedSpannerAlgorithm() from class org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner.WeightedSpannerAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 229,
		"endLine": 229,
		"startColumn": 25,
		"endColumn": 47,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "original creation",
		"codeElement": "FibonacciHeap<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 223,
		"endLine": 231,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public WeightedSpannerAlgorithm()"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 231,
		"endLine": 231,
		"startColumn": 25,
		"endColumn": 44,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "creation with diamond operator",
		"codeElement": "PairingHeap<>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 225,
		"endLine": 233,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with diamond operator",
		"codeElement": "public WeightedSpannerAlgorithm()"
}]
},
{
	"type": "Replace Generic With Diamond",
	"description": "Replace Generic With Diamond LinkedHashMap<V,FibonacciHeapNode<V>> with LinkedHashMap<> in method public WeightedSpannerAlgorithm() from class org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner.WeightedSpannerAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 230,
		"endLine": 230,
		"startColumn": 26,
		"endColumn": 70,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "original creation",
		"codeElement": "LinkedHashMap<V,FibonacciHeapNode<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 223,
		"endLine": 231,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public WeightedSpannerAlgorithm()"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 232,
		"endLine": 232,
		"startColumn": 26,
		"endColumn": 47,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "creation with diamond operator",
		"codeElement": "LinkedHashMap<>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 225,
		"endLine": 233,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with diamond operator",
		"codeElement": "public WeightedSpannerAlgorithm()"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type uNode : FibonacciHeapNode<V> to uNode : AddressableHeap.Handle<Double,V> in method public isSpannerReachable(s V, t V, distance double) : boolean from class org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner.WeightedSpannerAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 245,
		"endLine": 245,
		"startColumn": 38,
		"endColumn": 62,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "uNode : FibonacciHeapNode<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 246,
		"endLine": 246,
		"startColumn": 17,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 247,
		"endLine": 247,
		"startColumn": 17,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 246,
		"endLine": 246,
		"startColumn": 51,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "uNode : AddressableHeap.Handle<Double,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 247,
		"endLine": 247,
		"startColumn": 17,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 248,
		"endLine": 248,
		"startColumn": 17,
		"endColumn": 40,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type vNode : FibonacciHeapNode<V> to vNode : AddressableHeap.Handle<Double,V> in method public isSpannerReachable(s V, t V, distance double) : boolean from class org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner.WeightedSpannerAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 259,
		"endLine": 259,
		"startColumn": 42,
		"endColumn": 62,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "vNode : FibonacciHeapNode<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 264,
		"endLine": 264,
		"startColumn": 25,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 266,
		"endLine": 268,
		"startColumn": 28,
		"endColumn": 22,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 262,
		"endLine": 268,
		"startColumn": 21,
		"endColumn": 22,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 260,
		"endLine": 260,
		"startColumn": 55,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "vNode : AddressableHeap.Handle<Double,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 265,
		"endLine": 265,
		"startColumn": 25,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 266,
		"endLine": 268,
		"startColumn": 28,
		"endColumn": 22,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 263,
		"endLine": 268,
		"startColumn": 21,
		"endColumn": 22,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type sNode : FibonacciHeapNode<V> to sNode : AddressableHeap.Handle<Double,V> in method public isSpannerReachable(s V, t V, distance double) : boolean from class org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner.WeightedSpannerAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 240,
		"endLine": 240,
		"startColumn": 34,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "sNode : FibonacciHeapNode<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 241,
		"endLine": 241,
		"startColumn": 13,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 242,
		"endLine": 242,
		"startColumn": 47,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "sNode : AddressableHeap.Handle<Double,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 243,
		"endLine": 243,
		"startColumn": 13,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Replace Generic With Diamond",
	"description": "Replace Generic With Diamond ArrayList<String> with ArrayList<> in method public testMultipleStarts() : void from class org.jgrapht.traverse.ClosestFirstIteratorTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/ClosestFirstIteratorTest.java",
		"startLine": 94,
		"endLine": 94,
		"startColumn": 31,
		"endColumn": 54,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "original creation",
		"codeElement": "ArrayList<String>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/ClosestFirstIteratorTest.java",
		"startLine": 57,
		"endLine": 102,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testMultipleStarts() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/ClosestFirstIteratorTest.java",
		"startLine": 94,
		"endLine": 94,
		"startColumn": 31,
		"endColumn": 48,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "creation with diamond operator",
		"codeElement": "ArrayList<>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/ClosestFirstIteratorTest.java",
		"startLine": 57,
		"endLine": 102,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with diamond operator",
		"codeElement": "public testMultipleStarts() : void"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.util.FibonacciHeap",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/FibonacciHeap.java",
		"startLine": 22,
		"endLine": 606,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.util.FibonacciHeap"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/FibonacciHeap.java",
		"startLine": 48,
		"endLine": 48,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/FibonacciHeap.java",
		"startLine": 22,
		"endLine": 608,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.util.FibonacciHeap"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type heap : FibonacciHeap<QueueEntry<V,E>> to heap : AddressableHeap<Double,QueueEntry<V,E>> in class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 48,
		"endLine": 48,
		"startColumn": 45,
		"endColumn": 73,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "heap : FibonacciHeap<QueueEntry<V,E>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 52,
		"endLine": 52,
		"startColumn": 55,
		"endColumn": 59,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "heap : AddressableHeap<Double,QueueEntry<V,E>>"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public ClosestFirstIterator(g Graph<V,E>, startVertex V, radius double, heapSupplier Supplier<AddressableHeap<Double,QueueEntry<V,E>>>) extracted from public ClosestFirstIterator(g Graph<V,E>, startVertex V, radius double) in class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 87,
		"endLine": 102,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public ClosestFirstIterator(g Graph<V,E>, startVertex V, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 101,
		"endLine": 101,
		"startColumn": 9,
		"endColumn": 94,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 105,
		"endLine": 120,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public ClosestFirstIterator(g Graph<V,E>, startVertex V, radius double, heapSupplier Supplier<AddressableHeap<Double,QueueEntry<V,E>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 119,
		"endLine": 119,
		"startColumn": 9,
		"endColumn": 108,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 89,
		"endLine": 103,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public ClosestFirstIterator(g Graph<V,E>, startVertex V, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 102,
		"endLine": 102,
		"startColumn": 9,
		"endColumn": 112,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(g,startVertex == null ? null : Collections.singletonList(startVertex),radius,PairingHeap::new)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public ClosestFirstIterator(g Graph<V,E>, startVertices Iterable<V>, radius double, heapSupplier Supplier<AddressableHeap<Double,QueueEntry<V,E>>>) extracted from public ClosestFirstIterator(g Graph<V,E>, startVertices Iterable<V>, radius double) in class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 104,
		"endLine": 139,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public ClosestFirstIterator(g Graph<V,E>, startVertices Iterable<V>, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 120,
		"endLine": 120,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 123,
		"endLine": 123,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 13,
		"endColumn": 23,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 13,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 130,
		"endLine": 130,
		"startColumn": 17,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 21,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 21,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 133,
		"endLine": 136,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "WHILE_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 128,
		"endLine": 137,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 124,
		"endLine": 138,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 133,
		"endLine": 136,
		"startColumn": 40,
		"endColumn": 18,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 128,
		"endLine": 137,
		"startColumn": 33,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 124,
		"endLine": 138,
		"startColumn": 39,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 140,
		"endLine": 178,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public ClosestFirstIterator(g Graph<V,E>, startVertices Iterable<V>, radius double, heapSupplier Supplier<AddressableHeap<Double,QueueEntry<V,E>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 157,
		"endLine": 157,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 158,
		"endLine": 158,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 161,
		"endLine": 161,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 162,
		"endLine": 162,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 165,
		"endLine": 165,
		"startColumn": 13,
		"endColumn": 23,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 166,
		"endLine": 166,
		"startColumn": 13,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 169,
		"endLine": 169,
		"startColumn": 17,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 173,
		"endLine": 173,
		"startColumn": 21,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 174,
		"endLine": 174,
		"startColumn": 21,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 172,
		"endLine": 175,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "WHILE_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 167,
		"endLine": 176,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 163,
		"endLine": 177,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 172,
		"endLine": 175,
		"startColumn": 40,
		"endColumn": 18,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 167,
		"endLine": 176,
		"startColumn": 33,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 163,
		"endLine": 177,
		"startColumn": 39,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 122,
		"endLine": 138,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public ClosestFirstIterator(g Graph<V,E>, startVertices Iterable<V>, radius double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 9,
		"endColumn": 58,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(g,startVertices,radius,PairingHeap::new)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 9,
		"endColumn": 78,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 160,
		"endLine": 160,
		"startColumn": 9,
		"endColumn": 40,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry<V,E>> to node : AddressableHeap.Handle<Double,QueueEntry<V,E>> in method public getShortestPathLength(vertex V) : double from class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 163,
		"endLine": 163,
		"startColumn": 45,
		"endColumn": 71,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 169,
		"endLine": 169,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 165,
		"endLine": 167,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 199,
		"endLine": 199,
		"startColumn": 58,
		"endColumn": 84,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 205,
		"endLine": 205,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 201,
		"endLine": 203,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry<V,E>> to node : AddressableHeap.Handle<Double,QueueEntry<V,E>> in method public getSpanningTreeEdge(vertex V) : E from class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 185,
		"endLine": 185,
		"startColumn": 45,
		"endColumn": 71,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 191,
		"endLine": 191,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 187,
		"endLine": 189,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 219,
		"endLine": 219,
		"startColumn": 58,
		"endColumn": 84,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 225,
		"endLine": 225,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 221,
		"endLine": 223,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry<V,E>> to handle : AddressableHeap.Handle<Double,QueueEntry<V,E>> in method protected encounterVertex(vertex V, edge E) : void from class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 225,
		"endLine": 225,
		"startColumn": 45,
		"endColumn": 80,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 226,
		"endLine": 226,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 257,
		"endLine": 257,
		"startColumn": 58,
		"endColumn": 130,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "handle : AddressableHeap.Handle<Double,QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 258,
		"endLine": 258,
		"startColumn": 9,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable node : FibonacciHeapNode<QueueEntry<V,E>> to handle : AddressableHeap.Handle<Double,QueueEntry<V,E>> in method protected encounterVertex(vertex V, edge E) : void from class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 225,
		"endLine": 225,
		"startColumn": 45,
		"endColumn": 80,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 226,
		"endLine": 226,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 257,
		"endLine": 257,
		"startColumn": 58,
		"endColumn": 130,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "handle : AddressableHeap.Handle<Double,QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 258,
		"endLine": 258,
		"startColumn": 9,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry<V,E>> to node : AddressableHeap.Handle<Double,QueueEntry<V,E>> in method protected encounterVertexAgain(vertex V, edge E) : void from class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 240,
		"endLine": 240,
		"startColumn": 45,
		"endColumn": 71,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 250,
		"endLine": 250,
		"startColumn": 13,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 249,
		"endLine": 252,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 242,
		"endLine": 245,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 270,
		"endLine": 270,
		"startColumn": 58,
		"endColumn": 84,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 280,
		"endLine": 280,
		"startColumn": 13,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 279,
		"endLine": 282,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 272,
		"endLine": 275,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type node : FibonacciHeapNode<QueueEntry<V,E>> to node : AddressableHeap.Handle<Double,QueueEntry<V,E>> in method protected provideNextVertex() : V from class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 261,
		"endLine": 261,
		"startColumn": 45,
		"endColumn": 68,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "node : FibonacciHeapNode<QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 262,
		"endLine": 262,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 264,
		"endLine": 264,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 290,
		"endLine": 290,
		"startColumn": 58,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "node : AddressableHeap.Handle<Double,QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 291,
		"endLine": 291,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 293,
		"endLine": 293,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type otherEntry : FibonacciHeapNode<QueueEntry<V,E>> to otherEntry : AddressableHeap.Handle<Double,QueueEntry<V,E>> in method private calculatePathLength(vertex V, edge E) : double from class org.jgrapht.traverse.ClosestFirstIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 288,
		"endLine": 288,
		"startColumn": 45,
		"endColumn": 82,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "otherEntry : FibonacciHeapNode<QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 290,
		"endLine": 290,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 314,
		"endLine": 314,
		"startColumn": 58,
		"endColumn": 95,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "otherEntry : AddressableHeap.Handle<Double,QueueEntry<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/ClosestFirstIterator.java",
		"startLine": 316,
		"endLine": 316,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "bfbe4e91c4313b3507652749b9d383e14cac633f",
	"url": "https://github.com/jgrapht/jgrapht/commit/bfbe4e91c4313b3507652749b9d383e14cac633f",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "caf456d79a9eebe70b146317d8fb02fabc932870",
	"url": "https://github.com/jgrapht/jgrapht/commit/caf456d79a9eebe70b146317d8fb02fabc932870",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "81faebdbc9aebfbdb6c72974465ad2d9a4f469d1",
	"url": "https://github.com/jgrapht/jgrapht/commit/81faebdbc9aebfbdb6c72974465ad2d9a4f469d1",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "ce9280b81d14738fc2862f7e47c6423db75f42a0",
	"url": "https://github.com/jgrapht/jgrapht/commit/ce9280b81d14738fc2862f7e47c6423db75f42a0",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "1ec46bfc74ae5a3840c9ee1d6a686fa7b167ae6a",
	"url": "https://github.com/jgrapht/jgrapht/commit/1ec46bfc74ae5a3840c9ee1d6a686fa7b167ae6a",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c6ccb8ac37a79ed1a422574b8b31635658e13977",
	"url": "https://github.com/jgrapht/jgrapht/commit/c6ccb8ac37a79ed1a422574b8b31635658e13977",
	"refactorings": [{
	"type": "Encapsulate Attribute",
	"description": "Encapsulate Attribute protected first : A from class org.jgrapht.alg.util.Pair",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 43,
		"endLine": 43,
		"startColumn": 23,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "protected first : A"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 43,
		"endLine": 43,
		"startColumn": 17,
		"endColumn": 22,
		"codeElementType": "FIELD_DECLARATION",
		"description": "encapsulated attribute declaration",
		"codeElement": "protected first : A"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 82,
		"endLine": 91,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "added setter method",
		"codeElement": "public setFirst(f A) : void"
}]
},
{
	"type": "Remove Attribute Modifier",
	"description": "Remove Attribute Modifier final in attribute protected first : A from class org.jgrapht.alg.util.Pair",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 43,
		"endLine": 43,
		"startColumn": 23,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "protected first : A"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 43,
		"endLine": 43,
		"startColumn": 17,
		"endColumn": 22,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with removed modifier",
		"codeElement": "protected first : A"
}]
},
{
	"type": "Encapsulate Attribute",
	"description": "Encapsulate Attribute protected second : B from class org.jgrapht.alg.util.Pair",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 48,
		"endLine": 48,
		"startColumn": 23,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "protected second : B"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 48,
		"endLine": 48,
		"startColumn": 17,
		"endColumn": 23,
		"codeElementType": "FIELD_DECLARATION",
		"description": "encapsulated attribute declaration",
		"codeElement": "protected second : B"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 93,
		"endLine": 102,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "added setter method",
		"codeElement": "public setSecond(s B) : void"
}]
},
{
	"type": "Remove Attribute Modifier",
	"description": "Remove Attribute Modifier final in attribute protected second : B from class org.jgrapht.alg.util.Pair",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 48,
		"endLine": 48,
		"startColumn": 23,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "protected second : B"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 48,
		"endLine": 48,
		"startColumn": 17,
		"endColumn": 23,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with removed modifier",
		"codeElement": "protected second : B"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "1e854abe03fcaf445c4e44579d37a1a059c585ba",
	"url": "https://github.com/jgrapht/jgrapht/commit/1e854abe03fcaf445c4e44579d37a1a059c585ba",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "0030119103fa6e2ff4109bcdcad67d03e88785df",
	"url": "https://github.com/jgrapht/jgrapht/commit/0030119103fa6e2ff4109bcdcad67d03e88785df",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "e8fbd8ba19ada2dc4524ff3fa0f5ba39adc0bdf5",
	"url": "https://github.com/jgrapht/jgrapht/commit/e8fbd8ba19ada2dc4524ff3fa0f5ba39adc0bdf5",
	"refactorings": [{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.alg.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatching renamed to org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatching",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 29,
		"endLine": 939,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatching"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 32,
		"endLine": 1043,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatching"
}]
},
{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.alg.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatchingTest renamed to org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 34,
		"endLine": 2432,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatchingTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 43,
		"endLine": 2140,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest"
}]
},
{
	"type": "Extract Variable",
	"description": "Extract Variable primalUpdater : BlossomVPrimalUpdater<Integer,DefaultWeightedEdge> in method public testUpdateDuals1() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 52,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 82,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement with the initializer of the extracted variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 56,
		"endLine": 56,
		"startColumn": 61,
		"endColumn": 111,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted variable declaration",
		"codeElement": "primalUpdater : BlossomVPrimalUpdater<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 59,
		"endLine": 59,
		"startColumn": 9,
		"endColumn": 121,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement with the name of the extracted variable",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable edge : DefaultWeightedEdge to e34 : DefaultWeightedEdge in method public testUpdateDuals1() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 47,
		"endLine": 47,
		"startColumn": 29,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "edge : DefaultWeightedEdge"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 47,
		"endLine": 47,
		"startColumn": 9,
		"endColumn": 79,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 48,
		"endLine": 48,
		"startColumn": 29,
		"endColumn": 77,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "e34 : DefaultWeightedEdge"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 48,
		"endLine": 48,
		"startColumn": 9,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Extract Variable",
	"description": "Extract Variable primalUpdater : BlossomVPrimalUpdater<Integer,DefaultWeightedEdge> in method public testUpdateDuals2() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVDualUpdaterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 73,
		"endLine": 74,
		"startColumn": 9,
		"endColumn": 82,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement with the initializer of the extracted variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 80,
		"endLine": 80,
		"startColumn": 61,
		"endColumn": 111,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted variable declaration",
		"codeElement": "primalUpdater : BlossomVPrimalUpdater<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDualUpdaterTest.java",
		"startLine": 86,
		"endLine": 86,
		"startColumn": 9,
		"endColumn": 121,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement with the name of the extracted variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testFractionalInitialization1() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 208,
		"endLine": 209,
		"startColumn": 78,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 210,
		"endLine": 211,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 219,
		"endLine": 219,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 212,
		"endLine": 213,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 211,
		"endLine": 212,
		"startColumn": 73,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 213,
		"endLine": 214,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 222,
		"endLine": 222,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 215,
		"endLine": 216,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 223,
		"endLine": 223,
		"startColumn": 9,
		"endColumn": 93,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type statistics : KolmogorovMinimumWeightPerfectMatching.Statistics to statistics : KolmogorovWeightedPerfectMatching.Statistics in method public testFractionalInitialization1() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 212,
		"endLine": 213,
		"startColumn": 59,
		"endColumn": 44,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "statistics : KolmogorovMinimumWeightPerfectMatching.Statistics"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 216,
		"endLine": 216,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 217,
		"endLine": 217,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 218,
		"endLine": 218,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 215,
		"endLine": 216,
		"startColumn": 54,
		"endColumn": 44,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "statistics : KolmogorovWeightedPerfectMatching.Statistics"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 219,
		"endLine": 219,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 221,
		"endLine": 221,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testFractionalInitialization2() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 236,
		"endLine": 237,
		"startColumn": 78,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 238,
		"endLine": 239,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 247,
		"endLine": 247,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 240,
		"endLine": 241,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 248,
		"endLine": 248,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 239,
		"endLine": 240,
		"startColumn": 73,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 241,
		"endLine": 242,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 250,
		"endLine": 250,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 243,
		"endLine": 244,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 251,
		"endLine": 251,
		"startColumn": 9,
		"endColumn": 93,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type statistics : KolmogorovMinimumWeightPerfectMatching.Statistics to statistics : KolmogorovWeightedPerfectMatching.Statistics in method public testFractionalInitialization2() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 240,
		"endLine": 241,
		"startColumn": 59,
		"endColumn": 44,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "statistics : KolmogorovMinimumWeightPerfectMatching.Statistics"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 244,
		"endLine": 244,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 245,
		"endLine": 245,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 246,
		"endLine": 246,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 243,
		"endLine": 244,
		"startColumn": 54,
		"endColumn": 44,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "statistics : KolmogorovWeightedPerfectMatching.Statistics"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 247,
		"endLine": 247,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 248,
		"endLine": 248,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testFractionalInitialization3() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 265,
		"endLine": 266,
		"startColumn": 78,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 267,
		"endLine": 268,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 276,
		"endLine": 276,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 269,
		"endLine": 270,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 277,
		"endLine": 277,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 268,
		"endLine": 269,
		"startColumn": 73,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 270,
		"endLine": 271,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 279,
		"endLine": 279,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 272,
		"endLine": 273,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 280,
		"endLine": 280,
		"startColumn": 9,
		"endColumn": 93,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type statistics : KolmogorovMinimumWeightPerfectMatching.Statistics to statistics : KolmogorovWeightedPerfectMatching.Statistics in method public testFractionalInitialization3() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 269,
		"endLine": 270,
		"startColumn": 59,
		"endColumn": 44,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "statistics : KolmogorovMinimumWeightPerfectMatching.Statistics"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 273,
		"endLine": 273,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 274,
		"endLine": 274,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 275,
		"endLine": 275,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 272,
		"endLine": 273,
		"startColumn": 54,
		"endColumn": 44,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "statistics : KolmogorovWeightedPerfectMatching.Statistics"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 276,
		"endLine": 276,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 277,
		"endLine": 277,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 278,
		"endLine": 278,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testFractionalInitialization4() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 294,
		"endLine": 295,
		"startColumn": 78,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 296,
		"endLine": 297,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 305,
		"endLine": 305,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 298,
		"endLine": 299,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 306,
		"endLine": 306,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 297,
		"endLine": 298,
		"startColumn": 73,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 299,
		"endLine": 300,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 308,
		"endLine": 308,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 301,
		"endLine": 302,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 309,
		"endLine": 309,
		"startColumn": 9,
		"endColumn": 93,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type statistics : KolmogorovMinimumWeightPerfectMatching.Statistics to statistics : KolmogorovWeightedPerfectMatching.Statistics in method public testFractionalInitialization4() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 298,
		"endLine": 299,
		"startColumn": 59,
		"endColumn": 44,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "statistics : KolmogorovMinimumWeightPerfectMatching.Statistics"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 302,
		"endLine": 302,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 303,
		"endLine": 303,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 304,
		"endLine": 304,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 301,
		"endLine": 302,
		"startColumn": 54,
		"endColumn": 44,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "statistics : KolmogorovWeightedPerfectMatching.Statistics"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 305,
		"endLine": 305,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 306,
		"endLine": 306,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 307,
		"endLine": 307,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testFractionalInitialization5() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 323,
		"endLine": 324,
		"startColumn": 78,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 325,
		"endLine": 326,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 329,
		"endLine": 329,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 330,
		"endLine": 330,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 326,
		"endLine": 327,
		"startColumn": 73,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 328,
		"endLine": 329,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 332,
		"endLine": 332,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 333,
		"endLine": 333,
		"startColumn": 9,
		"endColumn": 93,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testFractionalInitialization6() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 347,
		"endLine": 348,
		"startColumn": 78,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 349,
		"endLine": 350,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 353,
		"endLine": 353,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 354,
		"endLine": 354,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 350,
		"endLine": 351,
		"startColumn": 73,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 352,
		"endLine": 353,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 356,
		"endLine": 356,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 357,
		"endLine": 357,
		"startColumn": 9,
		"endColumn": 93,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testFractionalInitialization7() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 373,
		"endLine": 374,
		"startColumn": 78,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 375,
		"endLine": 376,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 379,
		"endLine": 379,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 380,
		"endLine": 380,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 376,
		"endLine": 377,
		"startColumn": 73,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 378,
		"endLine": 379,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 382,
		"endLine": 382,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 383,
		"endLine": 383,
		"startColumn": 9,
		"endColumn": 93,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testFractionalInitialization8() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 397,
		"endLine": 398,
		"startColumn": 78,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 399,
		"endLine": 400,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 403,
		"endLine": 403,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 404,
		"endLine": 404,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 400,
		"endLine": 401,
		"startColumn": 73,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 402,
		"endLine": 403,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 406,
		"endLine": 406,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 407,
		"endLine": 407,
		"startColumn": 9,
		"endColumn": 93,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testFractionalInitialization9() : void from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializerTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 421,
		"endLine": 422,
		"startColumn": 78,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 423,
		"endLine": 424,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 427,
		"endLine": 427,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 428,
		"endLine": 428,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 424,
		"endLine": 425,
		"startColumn": 73,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 426,
		"endLine": 427,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 430,
		"endLine": 430,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializerTest.java",
		"startLine": 431,
		"endLine": 431,
		"startColumn": 9,
		"endColumn": 93,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type statistics : KolmogorovMinimumWeightPerfectMatching.Statistics to statistics : KolmogorovWeightedPerfectMatching.Statistics in class org.jgrapht.alg.matching.blossom.v5.BlossomVState",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVState.java",
		"startLine": 79,
		"endLine": 79,
		"startColumn": 55,
		"endColumn": 65,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "statistics : KolmogorovMinimumWeightPerfectMatching.Statistics"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVState.java",
		"startLine": 79,
		"endLine": 79,
		"startColumn": 50,
		"endColumn": 60,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "statistics : KolmogorovWeightedPerfectMatching.Statistics"
}]
},
{
	"type": "Add Parameter",
	"description": "Add Parameter minEdgeWeight : double in method public BlossomVState(graph Graph<V,E>, nodes BlossomVNode[], edges BlossomVEdge[], nodeNum int, edgeNum int, treeNum int, graphVertices List<V>, graphEdges List<E>, options BlossomVOptions, minEdgeWeight double) from class org.jgrapht.alg.matching.blossom.v5.BlossomVState",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVState.java",
		"startLine": 94,
		"endLine": 123,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public BlossomVState(graph Graph<V,E>, nodes BlossomVNode[], edges BlossomVEdge[], nodeNum int, edgeNum int, treeNum int, graphVertices List<V>, graphEdges List<E>, options BlossomVOptions)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVState.java",
		"startLine": 114,
		"endLine": 114,
		"startColumn": 90,
		"endColumn": 110,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "minEdgeWeight : double"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVState.java",
		"startLine": 97,
		"endLine": 127,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "public BlossomVState(graph Graph<V,E>, nodes BlossomVNode[], edges BlossomVEdge[], nodeNum int, edgeNum int, treeNum int, graphVertices List<V>, graphEdges List<E>, options BlossomVOptions, minEdgeWeight double)"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type void to double in method private initGraph() : double from class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializer",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializer.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 13,
		"endColumn": 17,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializer.java",
		"startLine": 191,
		"endLine": 225,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private initGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializer.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 13,
		"endColumn": 19,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "double"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializer.java",
		"startLine": 191,
		"endLine": 227,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "private initGraph() : double"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to matching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testBlossomV(data Data) : MatchingAlgorithm.Matching<Integer,DefaultWeightedEdge> from class org.jgrapht.perf.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatchingPerformanceTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingPerformanceTest.java",
		"startLine": 40,
		"endLine": 41,
		"startColumn": 78,
		"endColumn": 99,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingPerformanceTest.java",
		"startLine": 42,
		"endLine": 42,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingPerformanceTest.java",
		"startLine": 40,
		"endLine": 41,
		"startColumn": 73,
		"endColumn": 94,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingPerformanceTest.java",
		"startLine": 42,
		"endLine": 42,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method private lazyComputeMinimumWeightPerfectMatching() : void renamed to private lazyComputeWeightedPerfectMatching() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatching",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 259,
		"endLine": 376,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private lazyComputeMinimumWeightPerfectMatching() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 344,
		"endLine": 461,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "private lazyComputeWeightedPerfectMatching() : void"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to public in attribute public DEFAULT_OPTIONS : BlossomVOptions from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatching",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 42,
		"endColumn": 81,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private DEFAULT_OPTIONS : BlossomVOptions"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 157,
		"endLine": 157,
		"startColumn": 41,
		"endColumn": 80,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "public DEFAULT_OPTIONS : BlossomVOptions"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public KolmogorovWeightedPerfectMatching(graph Graph<V,E>, options BlossomVOptions, objectiveSense ObjectiveSense) extracted from public KolmogorovMinimumWeightPerfectMatching(graph Graph<V,E>, options BlossomVOptions) in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatching",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 155,
		"endLine": 171,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public KolmogorovMinimumWeightPerfectMatching(graph Graph<V,E>, options BlossomVOptions)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 164,
		"endLine": 164,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 166,
		"endLine": 166,
		"startColumn": 13,
		"endColumn": 69,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 13,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 170,
		"endLine": 170,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 165,
		"endLine": 169,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 165,
		"endLine": 167,
		"startColumn": 50,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 167,
		"endLine": 169,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 237,
		"endLine": 258,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public KolmogorovWeightedPerfectMatching(graph Graph<V,E>, options BlossomVOptions, objectiveSense ObjectiveSense)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 247,
		"endLine": 247,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 250,
		"endLine": 250,
		"startColumn": 13,
		"endColumn": 69,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 254,
		"endLine": 254,
		"startColumn": 13,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 257,
		"endLine": 257,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 249,
		"endLine": 255,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 249,
		"endLine": 251,
		"startColumn": 50,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 253,
		"endLine": 255,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 226,
		"endLine": 235,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public KolmogorovWeightedPerfectMatching(graph Graph<V,E>, options BlossomVOptions)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 234,
		"endLine": 234,
		"startColumn": 9,
		"endColumn": 40,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(graph,options,MINIMIZE)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 248,
		"endLine": 248,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 252,
		"endLine": 252,
		"startColumn": 13,
		"endColumn": 98,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 256,
		"endLine": 256,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 251,
		"endLine": 253,
		"startColumn": 48,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 251,
		"endLine": 255,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Extract Variable",
	"description": "Extract Variable dual : double in method private lazyComputeDualSolution() : DualSolution<V,E> from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatching",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 686,
		"endLine": 687,
		"startColumn": 25,
		"endColumn": 100,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the initializer of the extracted variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 689,
		"endLine": 691,
		"startColumn": 25,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the initializer of the extracted variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatching.java",
		"startLine": 684,
		"endLine": 693,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "statement with the initializer of the extracted variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 773,
		"endLine": 773,
		"startColumn": 24,
		"endColumn": 52,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted variable declaration",
		"codeElement": "dual : double"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 782,
		"endLine": 783,
		"startColumn": 25,
		"endColumn": 87,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the name of the extracted variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 785,
		"endLine": 786,
		"startColumn": 25,
		"endColumn": 105,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the name of the extracted variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatching.java",
		"startLine": 780,
		"endLine": 788,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "statement with the name of the extracted variable",
		"codeElement": null
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching0() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 76,
		"endLine": 87,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching0() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 86,
		"endLine": 86,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 173,
		"endLine": 185,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching0() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching2() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 107,
		"endLine": 115,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching2() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 114,
		"endLine": 114,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 201,
		"endLine": 210,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching2() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 209,
		"endLine": 209,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching3() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 117,
		"endLine": 126,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching3() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 212,
		"endLine": 221,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching3() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching4() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 128,
		"endLine": 136,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching4() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 223,
		"endLine": 232,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching4() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 231,
		"endLine": 231,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching5() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 138,
		"endLine": 147,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching5() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 234,
		"endLine": 244,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching5() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 243,
		"endLine": 243,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching6() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 149,
		"endLine": 158,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching6() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 157,
		"endLine": 157,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 246,
		"endLine": 256,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching6() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 255,
		"endLine": 255,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching7() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 160,
		"endLine": 169,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching7() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 258,
		"endLine": 267,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching7() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 266,
		"endLine": 266,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching8() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 171,
		"endLine": 181,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching8() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 180,
		"endLine": 180,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 269,
		"endLine": 279,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching8() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 278,
		"endLine": 278,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching9() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 183,
		"endLine": 193,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching9() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 281,
		"endLine": 291,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching9() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 290,
		"endLine": 290,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching10() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 195,
		"endLine": 205,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching10() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 204,
		"endLine": 204,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 293,
		"endLine": 303,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching10() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 302,
		"endLine": 302,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching11() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 207,
		"endLine": 217,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching11() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 216,
		"endLine": 216,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 305,
		"endLine": 315,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching11() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 314,
		"endLine": 314,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching12() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 219,
		"endLine": 229,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching12() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 317,
		"endLine": 327,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching12() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 326,
		"endLine": 326,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching13() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 231,
		"endLine": 241,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching13() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 240,
		"endLine": 240,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 329,
		"endLine": 339,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching13() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 338,
		"endLine": 338,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching14() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 243,
		"endLine": 253,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching14() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 252,
		"endLine": 252,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 341,
		"endLine": 351,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching14() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 350,
		"endLine": 350,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching15() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 255,
		"endLine": 265,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching15() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 264,
		"endLine": 264,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 353,
		"endLine": 363,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching15() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 362,
		"endLine": 362,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching16() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 267,
		"endLine": 277,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching16() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 276,
		"endLine": 276,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 365,
		"endLine": 375,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching16() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 374,
		"endLine": 374,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching17() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 279,
		"endLine": 289,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching17() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 288,
		"endLine": 288,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 377,
		"endLine": 387,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching17() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 386,
		"endLine": 386,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching18() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 291,
		"endLine": 302,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching18() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 301,
		"endLine": 301,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 389,
		"endLine": 400,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching18() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 399,
		"endLine": 399,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching19() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 304,
		"endLine": 316,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching19() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 315,
		"endLine": 315,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 402,
		"endLine": 414,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching19() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 413,
		"endLine": 413,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching20() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 318,
		"endLine": 330,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching20() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 329,
		"endLine": 329,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 416,
		"endLine": 428,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching20() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 427,
		"endLine": 427,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching21() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 332,
		"endLine": 344,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching21() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 343,
		"endLine": 343,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 430,
		"endLine": 442,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching21() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 441,
		"endLine": 441,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching22() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 346,
		"endLine": 358,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching22() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 357,
		"endLine": 357,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 444,
		"endLine": 456,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching22() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 455,
		"endLine": 455,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching23() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 360,
		"endLine": 372,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching23() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 371,
		"endLine": 371,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 458,
		"endLine": 470,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching23() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 469,
		"endLine": 469,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching24() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 374,
		"endLine": 386,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching24() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 385,
		"endLine": 385,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 472,
		"endLine": 484,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching24() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 483,
		"endLine": 483,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching25() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 388,
		"endLine": 400,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching25() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 399,
		"endLine": 399,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 486,
		"endLine": 498,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching25() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 497,
		"endLine": 497,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching26() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 402,
		"endLine": 413,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching26() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 412,
		"endLine": 412,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 500,
		"endLine": 511,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching26() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 510,
		"endLine": 510,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching27() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 415,
		"endLine": 427,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching27() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 426,
		"endLine": 426,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 513,
		"endLine": 525,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching27() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 524,
		"endLine": 524,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching28() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 429,
		"endLine": 447,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching28() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 446,
		"endLine": 446,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 527,
		"endLine": 544,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching28() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 543,
		"endLine": 543,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching29() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 449,
		"endLine": 483,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching29() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 482,
		"endLine": 482,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 546,
		"endLine": 577,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching29() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 576,
		"endLine": 576,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching30() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 485,
		"endLine": 520,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching30() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 519,
		"endLine": 519,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 579,
		"endLine": 611,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching30() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 610,
		"endLine": 610,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching31() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 522,
		"endLine": 586,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching31() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 585,
		"endLine": 585,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 613,
		"endLine": 669,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching31() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 668,
		"endLine": 668,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching32() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 588,
		"endLine": 651,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching32() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 650,
		"endLine": 650,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 671,
		"endLine": 726,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching32() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 725,
		"endLine": 725,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching33() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 653,
		"endLine": 780,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching33() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 779,
		"endLine": 779,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 728,
		"endLine": 833,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching33() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 832,
		"endLine": 832,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching34() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 782,
		"endLine": 961,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching34() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 960,
		"endLine": 960,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 835,
		"endLine": 988,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching34() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 987,
		"endLine": 987,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching35() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 963,
		"endLine": 1202,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching35() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1201,
		"endLine": 1201,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 990,
		"endLine": 1193,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching35() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1192,
		"endLine": 1192,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching36() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1204,
		"endLine": 1499,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching36() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1498,
		"endLine": 1498,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1195,
		"endLine": 1445,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching36() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1444,
		"endLine": 1444,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private test(edges int[][], result double, objectiveSense ObjectiveSense) : void extracted from public testGetMatching38() : void in class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1524,
		"endLine": 1776,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetMatching38() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1775,
		"endLine": 1775,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2110,
		"endLine": 2119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private test(edges int[][], result double, objectiveSense ObjectiveSense) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2118,
		"endLine": 2118,
		"startColumn": 9,
		"endColumn": 110,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1465,
		"endLine": 1678,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetMatching38() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1677,
		"endLine": 1677,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "test(edges,objectiveSense == MAXIMIZE ? maxWeight : minWeight,objectiveSense)"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type Object[] to Object[][] in method public params() : Object[][] from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 50,
		"endLine": 50,
		"startColumn": 19,
		"endColumn": 27,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "Object[]"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 49,
		"endLine": 53,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public params() : Object[]"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 65,
		"endLine": 65,
		"startColumn": 19,
		"endColumn": 29,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "Object[][]"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 64,
		"endLine": 75,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public params() : Object[][]"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to matching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testInvalidDualSolution() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 65,
		"endLine": 66,
		"startColumn": 78,
		"endColumn": 64,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 67,
		"endLine": 67,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 9,
		"endColumn": 94,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 163,
		"endLine": 163,
		"startColumn": 73,
		"endColumn": 130,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 164,
		"endLine": 164,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 165,
		"endLine": 165,
		"startColumn": 9,
		"endColumn": 94,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 170,
		"endLine": 170,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching1() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 97,
		"endLine": 98,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 99,
		"endLine": 100,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 103,
		"endLine": 103,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 104,
		"endLine": 104,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 193,
		"endLine": 193,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 9,
		"endColumn": 107,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 197,
		"endLine": 197,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 198,
		"endLine": 198,
		"startColumn": 9,
		"endColumn": 99,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching37() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1514,
		"endLine": 1515,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1516,
		"endLine": 1517,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1520,
		"endLine": 1520,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1521,
		"endLine": 1521,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1457,
		"endLine": 1457,
		"startColumn": 73,
		"endColumn": 162,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1458,
		"endLine": 1458,
		"startColumn": 9,
		"endColumn": 107,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1461,
		"endLine": 1461,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1462,
		"endLine": 1462,
		"startColumn": 9,
		"endColumn": 99,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Inline Variable",
	"description": "Inline Variable graph : Graph<Integer,DefaultWeightedEdge> in method public testGetMatching39() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1784,
		"endLine": 1785,
		"startColumn": 45,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "inlined variable declaration",
		"codeElement": "graph : Graph<Integer,DefaultWeightedEdge>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1688,
		"endLine": 1688,
		"startColumn": 9,
		"endColumn": 143,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the initializer of the inlined variable",
		"codeElement": null
}]
},
{
	"type": "Inline Variable",
	"description": "Inline Variable graph : Graph<Integer,DefaultWeightedEdge> in method public testGetMatching40() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1802,
		"endLine": 1803,
		"startColumn": 45,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "inlined variable declaration",
		"codeElement": "graph : Graph<Integer,DefaultWeightedEdge>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1700,
		"endLine": 1700,
		"startColumn": 9,
		"endColumn": 143,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the initializer of the inlined variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to matching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching41() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1826,
		"endLine": 1827,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1826,
		"endLine": 1827,
		"startColumn": 9,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1828,
		"endLine": 1828,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1711,
		"endLine": 1711,
		"startColumn": 73,
		"endColumn": 139,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1711,
		"endLine": 1711,
		"startColumn": 9,
		"endColumn": 140,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1712,
		"endLine": 1712,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to matching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching41() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1826,
		"endLine": 1827,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1826,
		"endLine": 1827,
		"startColumn": 9,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1828,
		"endLine": 1828,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1711,
		"endLine": 1711,
		"startColumn": 73,
		"endColumn": 139,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "matching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1711,
		"endLine": 1711,
		"startColumn": 9,
		"endColumn": 140,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1712,
		"endLine": 1712,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching42() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1839,
		"endLine": 1840,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1841,
		"endLine": 1841,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1721,
		"endLine": 1721,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1722,
		"endLine": 1722,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching43() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1857,
		"endLine": 1858,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1859,
		"endLine": 1860,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1736,
		"endLine": 1736,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1737,
		"endLine": 1737,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching44() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1883,
		"endLine": 1884,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1885,
		"endLine": 1885,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1754,
		"endLine": 1754,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1755,
		"endLine": 1755,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching45() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1905,
		"endLine": 1906,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1907,
		"endLine": 1907,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1773,
		"endLine": 1773,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1774,
		"endLine": 1774,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching46() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1979,
		"endLine": 1980,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 1981,
		"endLine": 1981,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1835,
		"endLine": 1835,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1836,
		"endLine": 1836,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching47() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2001,
		"endLine": 2002,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2003,
		"endLine": 2003,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1853,
		"endLine": 1853,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1854,
		"endLine": 1854,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching48() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2064,
		"endLine": 2065,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2066,
		"endLine": 2066,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1899,
		"endLine": 1899,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1900,
		"endLine": 1900,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching49() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2171,
		"endLine": 2172,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2173,
		"endLine": 2173,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1978,
		"endLine": 1978,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 1979,
		"endLine": 1979,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method public testGetMatching50() : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2351,
		"endLine": 2352,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2353,
		"endLine": 2353,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2106,
		"endLine": 2106,
		"startColumn": 73,
		"endColumn": 146,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2107,
		"endLine": 2107,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Add Parameter",
	"description": "Add Parameter objectiveSense : ObjectiveSense in method public KolmogorovWeightedPerfectMatchingTest(options BlossomVOptions, objectiveSense ObjectiveSense) from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 44,
		"endLine": 47,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public KolmogorovMinimumWeightPerfectMatchingTest(options BlossomVOptions)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 59,
		"endLine": 59,
		"startColumn": 75,
		"endColumn": 104,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "objectiveSense : ObjectiveSense"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 59,
		"endLine": 62,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "public KolmogorovWeightedPerfectMatchingTest(options BlossomVOptions, objectiveSense ObjectiveSense)"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable graph : Graph<Integer,DefaultWeightedEdge> to graph : Graph<Integer,DefaultWeightedEdge> in method private test(graph Graph<Integer,DefaultWeightedEdge>, edges int[][], result double, objectiveSense ObjectiveSense) : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2364,
		"endLine": 2365,
		"startColumn": 45,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "graph : Graph<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2367,
		"endLine": 2367,
		"startColumn": 13,
		"endColumn": 74,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2129,
		"endLine": 2129,
		"startColumn": 23,
		"endColumn": 64,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "graph : Graph<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2131,
		"endLine": 2131,
		"startColumn": 13,
		"endColumn": 74,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge> to perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge> in method private test(graph Graph<Integer,DefaultWeightedEdge>, edges int[][], result double, objectiveSense ObjectiveSense) : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2369,
		"endLine": 2370,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "perfectMatching : KolmogorovMinimumWeightPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2371,
		"endLine": 2372,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2375,
		"endLine": 2375,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2376,
		"endLine": 2376,
		"startColumn": 9,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2133,
		"endLine": 2133,
		"startColumn": 73,
		"endColumn": 162,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "perfectMatching : KolmogorovWeightedPerfectMatching<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2134,
		"endLine": 2134,
		"startColumn": 9,
		"endColumn": 107,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2136,
		"endLine": 2136,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2138,
		"endLine": 2138,
		"startColumn": 9,
		"endColumn": 99,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Add Parameter",
	"description": "Add Parameter objectiveSense : ObjectiveSense in method private test(graph Graph<Integer,DefaultWeightedEdge>, edges int[][], result double, objectiveSense ObjectiveSense) : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2356,
		"endLine": 2377,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private test(edges int[][], result double) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2129,
		"endLine": 2129,
		"startColumn": 96,
		"endColumn": 125,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "objectiveSense : ObjectiveSense"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 2121,
		"endLine": 2139,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "private test(graph Graph<Integer,DefaultWeightedEdge>, edges int[][], result double, objectiveSense ObjectiveSense) : void"
}]
},
{
	"type": "Extract Variable",
	"description": "Extract Variable edgeSlack : double in method package checkMatchingAndDualSolution(matching MatchingAlgorithm.Matching<V,E>, dualSolution KolmogorovWeightedPerfectMatching.DualSolution<V,E>, objectiveSense ObjectiveSense) : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2429,
		"endLine": 2429,
		"startColumn": 13,
		"endColumn": 58,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the initializer of the extracted variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 20,
		"endColumn": 48,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted variable declaration",
		"codeElement": "edgeSlack : double"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 144,
		"endLine": 144,
		"startColumn": 17,
		"endColumn": 55,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the name of the extracted variable",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type dualSolution : KolmogorovMinimumWeightPerfectMatching.DualSolution<V,E> to dualSolution : KolmogorovWeightedPerfectMatching.DualSolution<V,E> in method package checkMatchingAndDualSolution(matching MatchingAlgorithm.Matching<V,E>, dualSolution KolmogorovWeightedPerfectMatching.DualSolution<V,E>, objectiveSense ObjectiveSense) : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2389,
		"endLine": 2389,
		"startColumn": 9,
		"endColumn": 79,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "dualSolution : KolmogorovMinimumWeightPerfectMatching.DualSolution<V,E>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2391,
		"endLine": 2391,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2411,
		"endLine": 2411,
		"startColumn": 9,
		"endColumn": 71,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 87,
		"endLine": 87,
		"startColumn": 53,
		"endColumn": 118,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "dualSolution : KolmogorovWeightedPerfectMatching.DualSolution<V,E>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 117,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 71,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Add Parameter",
	"description": "Add Parameter objectiveSense : ObjectiveSense in method package checkMatchingAndDualSolution(matching MatchingAlgorithm.Matching<V,E>, dualSolution KolmogorovWeightedPerfectMatching.DualSolution<V,E>, objectiveSense ObjectiveSense) : void from class org.jgrapht.alg.matching.blossom.v5.KolmogorovWeightedPerfectMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovMinimumWeightPerfectMatchingTest.java",
		"startLine": 2379,
		"endLine": 2431,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package checkMatchingAndDualSolution(matching MatchingAlgorithm.Matching<V,E>, dualSolution KolmogorovMinimumWeightPerfectMatching.DualSolution<V,E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 87,
		"endLine": 87,
		"startColumn": 120,
		"endColumn": 149,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "objectiveSense : ObjectiveSense"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/KolmogorovWeightedPerfectMatchingTest.java",
		"startLine": 77,
		"endLine": 153,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "package checkMatchingAndDualSolution(matching MatchingAlgorithm.Matching<V,E>, dualSolution KolmogorovWeightedPerfectMatching.DualSolution<V,E>, objectiveSense ObjectiveSense) : void"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "9a6f089c0d87481f740ec51428caf5ed0f7dba37",
	"url": "https://github.com/jgrapht/jgrapht/commit/9a6f089c0d87481f740ec51428caf5ed0f7dba37",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "e5aabf593c14a831c20a058e487e472bd59a1a48",
	"url": "https://github.com/jgrapht/jgrapht/commit/e5aabf593c14a831c20a058e487e472bd59a1a48",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "513cc9e0d0194aca6cc677fd9e7c1f685b1c9c80",
	"url": "https://github.com/jgrapht/jgrapht/commit/513cc9e0d0194aca6cc677fd9e7c1f685b1c9c80",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "d368bba810288dc5796bfddaf0310629501db13f",
	"url": "https://github.com/jgrapht/jgrapht/commit/d368bba810288dc5796bfddaf0310629501db13f",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c24977869d669eb0a1714c427fb7f7df605ecf85",
	"url": "https://github.com/jgrapht/jgrapht/commit/c24977869d669eb0a1714c427fb7f7df605ecf85",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "2a2ab978c801f7b92f30704d43da6a7a76d2c8ce",
	"url": "https://github.com/jgrapht/jgrapht/commit/2a2ab978c801f7b92f30704d43da6a7a76d2c8ce",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "655910ea0e7f3e5bab994981576fde6711ea9073",
	"url": "https://github.com/jgrapht/jgrapht/commit/655910ea0e7f3e5bab994981576fde6711ea9073",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "02f7f4aca77b28fd540fcdc2ec31cf19786f4352",
	"url": "https://github.com/jgrapht/jgrapht/commit/02f7f4aca77b28fd540fcdc2ec31cf19786f4352",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "9c6300b9be9b8e4fb351a8b409a7817973d904cf",
	"url": "https://github.com/jgrapht/jgrapht/commit/9c6300b9be9b8e4fb351a8b409a7817973d904cf",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "53c0cbe0b7ec47aa3390e670219ad985dbd34552",
	"url": "https://github.com/jgrapht/jgrapht/commit/53c0cbe0b7ec47aa3390e670219ad985dbd34552",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "888e8940185670fe0ea7bbe5d53d16bcf26253ae",
	"url": "https://github.com/jgrapht/jgrapht/commit/888e8940185670fe0ea7bbe5d53d16bcf26253ae",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "831e3f9ff3f3e4589fe292f3ac5494a6db97950c",
	"url": "https://github.com/jgrapht/jgrapht/commit/831e3f9ff3f3e4589fe292f3ac5494a6db97950c",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "89e84b3e5836cec9d174cfd00cd6df13210c33d5",
	"url": "https://github.com/jgrapht/jgrapht/commit/89e84b3e5836cec9d174cfd00cd6df13210c33d5",
	"refactorings": [{
	"type": "Move Source Folder",
	"description": "Move Source Folder jgrapht-demo/src/test/java/org.jgrapht.demo to jgrapht-demo/src/test/java/org/jgrapht/demo",
	"leftSideLocations": [],
	"rightSideLocations": []
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "8a924e660e17b77b542a4cff1d1e92e770cc131e",
	"url": "https://github.com/jgrapht/jgrapht/commit/8a924e660e17b77b542a4cff1d1e92e770cc131e",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "272678351a603b9a73e1217c466d92db531641c5",
	"url": "https://github.com/jgrapht/jgrapht/commit/272678351a603b9a73e1217c466d92db531641c5",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "4088a94754dcd8b05db0a9160e16dbafa335f3c3",
	"url": "https://github.com/jgrapht/jgrapht/commit/4088a94754dcd8b05db0a9160e16dbafa335f3c3",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "55701808ba2020ddbd286e88f9851d602d606c73",
	"url": "https://github.com/jgrapht/jgrapht/commit/55701808ba2020ddbd286e88f9851d602d606c73",
	"refactorings": [{
	"type": "Move Class",
	"description": "Move Class org.jgrapht.alg.shortestpath.AStarShortestPathTest.ManhattanDistance moved to org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.ManhattanDistance",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 242,
		"endLine": 252,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.ManhattanDistance"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/interfaces/AStarAdmissibleHeuristicTest.java",
		"startLine": 78,
		"endLine": 89,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "moved type declaration",
		"codeElement": "org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.ManhattanDistance"
}]
},
{
	"type": "Move Class",
	"description": "Move Class org.jgrapht.alg.shortestpath.AStarShortestPathTest.EuclideanDistance moved to org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.EuclideanDistance",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 254,
		"endLine": 265,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.EuclideanDistance"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/interfaces/AStarAdmissibleHeuristicTest.java",
		"startLine": 91,
		"endLine": 103,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "moved type declaration",
		"codeElement": "org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.EuclideanDistance"
}]
},
{
	"type": "Move Class",
	"description": "Move Class org.jgrapht.alg.shortestpath.AStarShortestPathTest.Node moved to org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest.Node",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 267,
		"endLine": 282,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.Node"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 172,
		"endLine": 184,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "moved type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest.Node"
}]
},
{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.perf.shortestpath.DijkstraShortestPathPerformanceTest.ALTBenchmark renamed to org.jgrapht.perf.shortestpath.DijkstraShortestPathPerformanceTest.AStarALTBenchmark",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/shortestpath/DijkstraShortestPathPerformanceTest.java",
		"startLine": 217,
		"endLine": 245,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.perf.shortestpath.DijkstraShortestPathPerformanceTest.ALTBenchmark"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/shortestpath/DijkstraShortestPathPerformanceTest.java",
		"startLine": 206,
		"endLine": 230,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.perf.shortestpath.DijkstraShortestPathPerformanceTest.AStarALTBenchmark"
}]
},
{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.SearchFrontier renamed to org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 242,
		"endLine": 288,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.SearchFrontier"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 201,
		"endLine": 247,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type multigraph : WeightedMultigraph<Node,DefaultWeightedEdge> to multigraph : Graph<Node,DefaultWeightedEdge> in method public testMultiGraph() : void from class org.jgrapht.alg.shortestpath.AStarShortestPathTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 161,
		"endLine": 162,
		"startColumn": 55,
		"endColumn": 64,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "multigraph : WeightedMultigraph<Node,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 175,
		"endLine": 176,
		"startColumn": 9,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 86,
		"endLine": 86,
		"startColumn": 42,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "multigraph : Graph<Node,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 87,
		"endLine": 88,
		"startColumn": 9,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type forwardFrontier : SearchFrontier to forwardFrontier : DijkstraSearchFrontier in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 136,
		"endLine": 136,
		"startColumn": 24,
		"endColumn": 67,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "forwardFrontier : SearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 147,
		"endLine": 147,
		"startColumn": 9,
		"endColumn": 58,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 195,
		"endLine": 196,
		"startColumn": 13,
		"endColumn": 102,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 32,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "forwardFrontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 145,
		"endLine": 145,
		"startColumn": 9,
		"endColumn": 58,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 193,
		"endLine": 194,
		"startColumn": 13,
		"endColumn": 102,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type backwardFrontier : SearchFrontier to backwardFrontier : DijkstraSearchFrontier in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 24,
		"endColumn": 40,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "backwardFrontier : SearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 9,
		"endColumn": 57,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 195,
		"endLine": 196,
		"startColumn": 13,
		"endColumn": 102,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 139,
		"endLine": 139,
		"startColumn": 13,
		"endColumn": 83,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 13,
		"endColumn": 58,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 155,
		"endLine": 155,
		"startColumn": 9,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 32,
		"endColumn": 48,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "backwardFrontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 9,
		"endColumn": 57,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 193,
		"endLine": 194,
		"startColumn": 13,
		"endColumn": 102,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 13,
		"endColumn": 91,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 139,
		"endLine": 139,
		"startColumn": 13,
		"endColumn": 66,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 9,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type frontier : SearchFrontier to frontier : DijkstraSearchFrontier in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 24,
		"endColumn": 50,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "frontier : SearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 165,
		"endLine": 165,
		"startColumn": 13,
		"endColumn": 89,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 170,
		"endLine": 170,
		"startColumn": 17,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 17,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 174,
		"endLine": 174,
		"startColumn": 17,
		"endColumn": 68,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 188,
		"endLine": 188,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 13,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 159,
		"endLine": 162,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 169,
		"endLine": 184,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 32,
		"endColumn": 58,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "frontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 163,
		"endLine": 163,
		"startColumn": 13,
		"endColumn": 89,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 17,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 170,
		"endLine": 170,
		"startColumn": 17,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 17,
		"endColumn": 68,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 186,
		"endLine": 186,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 185,
		"endLine": 185,
		"startColumn": 13,
		"endColumn": 59,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 157,
		"endLine": 160,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 167,
		"endLine": 182,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type otherFrontier : SearchFrontier to otherFrontier : DijkstraSearchFrontier in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 155,
		"endLine": 155,
		"startColumn": 24,
		"endColumn": 56,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "otherFrontier : SearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 177,
		"endLine": 177,
		"startColumn": 17,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 188,
		"endLine": 188,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 159,
		"endLine": 162,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 32,
		"endColumn": 64,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "otherFrontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 175,
		"endLine": 175,
		"startColumn": 17,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 186,
		"endLine": 186,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 157,
		"endLine": 160,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type tmpFrontier : SearchFrontier to tmpFrontier : DijkstraSearchFrontier in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 28,
		"endColumn": 50,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "tmpFrontier : SearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 185,
		"endLine": 185,
		"startColumn": 36,
		"endColumn": 58,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "tmpFrontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Deprecated in method public isConsistentHeuristic(admissibleHeuristic AStarAdmissibleHeuristic<V>) : boolean from class org.jgrapht.alg.shortestpath.AStarShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 184,
		"endLine": 211,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public isConsistentHeuristic(admissibleHeuristic AStarAdmissibleHeuristic<V>) : boolean"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 207,
		"endLine": 207,
		"startColumn": 5,
		"endColumn": 16,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/AStarShortestPath.java",
		"startLine": 192,
		"endLine": 221,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public isConsistentHeuristic(admissibleHeuristic AStarAdmissibleHeuristic<V>) : boolean"
}]
},
{
	"type": "Remove Thrown Exception Type",
	"description": "Remove Thrown Exception Type RunnerException in method public testBenchmark() : void from class org.jgrapht.perf.shortestpath.DijkstraShortestPathPerformanceTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/shortestpath/DijkstraShortestPathPerformanceTest.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 16,
		"endColumn": 31,
		"codeElementType": "TYPE",
		"description": "removed thrown exception type",
		"codeElement": "RunnerException"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/shortestpath/DijkstraShortestPathPerformanceTest.java",
		"startLine": 247,
		"endLine": 300,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testBenchmark() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/shortestpath/DijkstraShortestPathPerformanceTest.java",
		"startLine": 275,
		"endLine": 329,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed thrown exception type",
		"codeElement": "public testBenchmark() : void"
}]
},
{
	"type": "Change Class Access Modifier",
	"description": "Change Class Access Modifier private to public in class org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.ManhattanDistance",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 242,
		"endLine": 252,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.ManhattanDistance"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/interfaces/AStarAdmissibleHeuristicTest.java",
		"startLine": 78,
		"endLine": 89,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with changed access modifier",
		"codeElement": "org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.ManhattanDistance"
}]
},
{
	"type": "Add Class Modifier",
	"description": "Add Class Modifier static in class org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.ManhattanDistance",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 242,
		"endLine": 252,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.ManhattanDistance"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/interfaces/AStarAdmissibleHeuristicTest.java",
		"startLine": 78,
		"endLine": 89,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added modifier",
		"codeElement": "org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.ManhattanDistance"
}]
},
{
	"type": "Change Class Access Modifier",
	"description": "Change Class Access Modifier private to public in class org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.EuclideanDistance",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 254,
		"endLine": 265,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.EuclideanDistance"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/interfaces/AStarAdmissibleHeuristicTest.java",
		"startLine": 91,
		"endLine": 103,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with changed access modifier",
		"codeElement": "org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.EuclideanDistance"
}]
},
{
	"type": "Add Class Modifier",
	"description": "Add Class Modifier static in class org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.EuclideanDistance",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 254,
		"endLine": 265,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.EuclideanDistance"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/interfaces/AStarAdmissibleHeuristicTest.java",
		"startLine": 91,
		"endLine": 103,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added modifier",
		"codeElement": "org.jgrapht.interfaces.AStarAdmissibleHeuristicTest.EuclideanDistance"
}]
},
{
	"type": "Change Class Access Modifier",
	"description": "Change Class Access Modifier private to public in class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest.Node",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 267,
		"endLine": 282,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.Node"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 172,
		"endLine": 184,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with changed access modifier",
		"codeElement": "org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest.Node"
}]
},
{
	"type": "Add Class Modifier",
	"description": "Add Class Modifier static in class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest.Node",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 267,
		"endLine": 282,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.Node"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 172,
		"endLine": 184,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added modifier",
		"codeElement": "org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest.Node"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to package in method package Node(x int, y int) from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest.Node",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 272,
		"endLine": 276,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private Node(x int, y int)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 176,
		"endLine": 179,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "package Node(x int, y int)"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier public to package in method package AStarALTBenchmark(totalLandmarks int) from class org.jgrapht.perf.shortestpath.DijkstraShortestPathPerformanceTest.AStarALTBenchmark",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/shortestpath/DijkstraShortestPathPerformanceTest.java",
		"startLine": 223,
		"endLine": 226,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public ALTBenchmark(totalLandmarks int)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/perf/shortestpath/DijkstraShortestPathPerformanceTest.java",
		"startLine": 211,
		"endLine": 213,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "package AStarALTBenchmark(totalLandmarks int)"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier public to package in method package DijkstraSearchFrontier(graph Graph<V,E>) from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 251,
		"endLine": 255,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public SearchFrontier(graph Graph<V,E>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 209,
		"endLine": 213,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "package DijkstraSearchFrontier(graph Graph<V,E>)"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier public to package in method package updateDistance(v V, e E, distance double) : void from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 257,
		"endLine": 268,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public updateDistance(v V, e E, distance double) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 215,
		"endLine": 226,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "package updateDistance(v V, e E, distance double) : void"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public getDistance(v V) : double from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 270,
		"endLine": 277,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getDistance(v V) : double"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 9,
		"endColumn": 18,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 228,
		"endLine": 236,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public getDistance(v V) : double"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public getTreeEdge(v V) : E from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 279,
		"endLine": 286,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getTreeEdge(v V) : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 238,
		"endLine": 238,
		"startColumn": 9,
		"endColumn": 18,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 238,
		"endLine": 246,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public getTreeEdge(v V) : E"
}]
},
{
	"type": "Pull Up Method",
	"description": "Pull Up Method private createPath(forwardFrontier SearchFrontier, backwardFrontier SearchFrontier, weight double, source V, commonVertex V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath to protected createPath(forwardFrontier BaseSearchFrontier, backwardFrontier BaseSearchFrontier, weight double, source V, commonVertex V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 202,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private createPath(forwardFrontier SearchFrontier, backwardFrontier SearchFrontier, weight double, source V, commonVertex V, sink V) : GraphPath<V,E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 47,
		"endLine": 97,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "pulled up method declaration",
		"codeElement": "protected createPath(forwardFrontier BaseSearchFrontier, backwardFrontier BaseSearchFrontier, weight double, source V, commonVertex V, sink V) : GraphPath<V,E>"
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type forwardFrontier : SearchFrontier to forwardFrontier : BaseSearchFrontier in method protected createPath(forwardFrontier BaseSearchFrontier, backwardFrontier BaseSearchFrontier, weight double, source V, commonVertex V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 203,
		"endLine": 203,
		"startColumn": 13,
		"endColumn": 43,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "forwardFrontier : SearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 214,
		"endLine": 214,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 221,
		"endLine": 221,
		"startColumn": 13,
		"endColumn": 71,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 60,
		"endLine": 60,
		"startColumn": 13,
		"endColumn": 47,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "forwardFrontier : BaseSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 78,
		"endLine": 78,
		"startColumn": 13,
		"endColumn": 71,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type backwardFrontier : SearchFrontier to backwardFrontier : BaseSearchFrontier in method protected createPath(forwardFrontier BaseSearchFrontier, backwardFrontier BaseSearchFrontier, weight double, source V, commonVertex V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 203,
		"endLine": 203,
		"startColumn": 45,
		"endColumn": 76,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "backwardFrontier : SearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 13,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 235,
		"endLine": 235,
		"startColumn": 13,
		"endColumn": 72,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 60,
		"endLine": 60,
		"startColumn": 49,
		"endColumn": 84,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "backwardFrontier : BaseSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 85,
		"endLine": 85,
		"startColumn": 13,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 13,
		"endColumn": 72,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected createPath(forwardFrontier BaseSearchFrontier, backwardFrontier BaseSearchFrontier, weight double, source V, commonVertex V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 202,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private createPath(forwardFrontier SearchFrontier, backwardFrontier SearchFrontier, weight double, source V, commonVertex V, sink V) : GraphPath<V,E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 47,
		"endLine": 97,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected createPath(forwardFrontier BaseSearchFrontier, backwardFrontier BaseSearchFrontier, weight double, source V, commonVertex V, sink V) : GraphPath<V,E>"
}]
},
{
	"type": "Pull Up Method",
	"description": "Pull Up Method private readLabyrinth(labyrinth String[]) : void from class org.jgrapht.alg.shortestpath.AStarShortestPathTest to protected readLabyrinth(labyrinth String[]) : void from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 72,
		"endLine": 107,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private readLabyrinth(labyrinth String[]) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 75,
		"endLine": 109,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "pulled up method declaration",
		"codeElement": "protected readLabyrinth(labyrinth String[]) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to protected in method protected readLabyrinth(labyrinth String[]) : void from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 72,
		"endLine": 107,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private readLabyrinth(labyrinth String[]) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 75,
		"endLine": 109,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected readLabyrinth(labyrinth String[]) : void"
}]
},
{
	"type": "Pull Up Attribute",
	"description": "Pull Up Attribute private labyrinth1 : String[] from class org.jgrapht.alg.shortestpath.AStarShortestPathTest to protected labyrinth1 : String[] from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 34,
		"endLine": 49,
		"startColumn": 28,
		"endColumn": 76,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private labyrinth1 : String[]"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 36,
		"endLine": 51,
		"startColumn": 30,
		"endColumn": 83,
		"codeElementType": "FIELD_DECLARATION",
		"description": "pulled up attribute declaration",
		"codeElement": "protected labyrinth1 : String[]"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected labyrinth1 : String[] from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 34,
		"endLine": 49,
		"startColumn": 28,
		"endColumn": 76,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private labyrinth1 : String[]"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 36,
		"endLine": 51,
		"startColumn": 30,
		"endColumn": 83,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected labyrinth1 : String[]"
}]
},
{
	"type": "Pull Up Attribute",
	"description": "Pull Up Attribute private labyrinth2 : String[] from class org.jgrapht.alg.shortestpath.AStarShortestPathTest to protected labyrinth2 : String[] from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 51,
		"endLine": 66,
		"startColumn": 28,
		"endColumn": 72,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private labyrinth2 : String[]"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 53,
		"endLine": 68,
		"startColumn": 30,
		"endColumn": 75,
		"codeElementType": "FIELD_DECLARATION",
		"description": "pulled up attribute declaration",
		"codeElement": "protected labyrinth2 : String[]"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected labyrinth2 : String[] from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 51,
		"endLine": 66,
		"startColumn": 28,
		"endColumn": 72,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private labyrinth2 : String[]"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 53,
		"endLine": 68,
		"startColumn": 30,
		"endColumn": 75,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected labyrinth2 : String[]"
}]
},
{
	"type": "Pull Up Attribute",
	"description": "Pull Up Attribute private graph : Graph<Node,DefaultWeightedEdge> from class org.jgrapht.alg.shortestpath.AStarShortestPathTest to protected graph : Graph<Node,DefaultWeightedEdge> from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 46,
		"endColumn": 51,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private graph : Graph<Node,DefaultWeightedEdge>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 48,
		"endColumn": 53,
		"codeElementType": "FIELD_DECLARATION",
		"description": "pulled up attribute declaration",
		"codeElement": "protected graph : Graph<Node,DefaultWeightedEdge>"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected graph : Graph<Node,DefaultWeightedEdge> from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 46,
		"endColumn": 51,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private graph : Graph<Node,DefaultWeightedEdge>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 48,
		"endColumn": 53,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected graph : Graph<Node,DefaultWeightedEdge>"
}]
},
{
	"type": "Pull Up Attribute",
	"description": "Pull Up Attribute private sourceNode : Node from class org.jgrapht.alg.shortestpath.AStarShortestPathTest to protected sourceNode : Node from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 18,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private sourceNode : Node"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 20,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "pulled up attribute declaration",
		"codeElement": "protected sourceNode : Node"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected sourceNode : Node from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 18,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private sourceNode : Node"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 20,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected sourceNode : Node"
}]
},
{
	"type": "Pull Up Attribute",
	"description": "Pull Up Attribute private targetNode : Node from class org.jgrapht.alg.shortestpath.AStarShortestPathTest to protected targetNode : Node from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 18,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private targetNode : Node"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 20,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "pulled up attribute declaration",
		"codeElement": "protected targetNode : Node"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier private to protected in attribute protected targetNode : Node from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 18,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private targetNode : Node"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 20,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "protected targetNode : Node"
}]
},
{
	"type": "Extract Superclass",
	"description": "Extract Superclass org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm from classes [org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath]",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 35,
		"endLine": 290,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original sub-type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 33,
		"endLine": 248,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "sub-type declaration after extraction",
		"codeElement": "org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 27,
		"endLine": 135,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "extracted super-type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm"
}]
},
{
	"type": "Extract Superclass",
	"description": "Extract Superclass org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest from classes [org.jgrapht.alg.shortestpath.AStarShortestPathTest]",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 27,
		"endLine": 283,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original sub-type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 32,
		"endLine": 105,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "sub-type declaration after extraction",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 28,
		"endLine": 215,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "extracted super-type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method protected getMultigraph() : Graph<Node,DefaultWeightedEdge> extracted from public testMultiGraph() : void in class org.jgrapht.alg.shortestpath.AStarShortestPathTest & moved to class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 151,
		"endLine": 182,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testMultiGraph() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 161,
		"endLine": 162,
		"startColumn": 9,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 164,
		"endLine": 164,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 165,
		"endLine": 165,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 166,
		"endLine": 166,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 169,
		"endLine": 169,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 170,
		"endLine": 170,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 171,
		"endLine": 171,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 173,
		"endLine": 173,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 174,
		"endLine": 174,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 163,
		"endLine": 163,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 167,
		"endLine": 167,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 111,
		"endLine": 127,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected getMultigraph() : Graph<Node,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 112,
		"endLine": 113,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 116,
		"endLine": 116,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 117,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 119,
		"endLine": 119,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 120,
		"endLine": 120,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 123,
		"endLine": 123,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 124,
		"endLine": 124,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 114,
		"endLine": 114,
		"startColumn": 9,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 77,
		"endLine": 93,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testMultiGraph() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 86,
		"endLine": 86,
		"startColumn": 55,
		"endColumn": 70,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "getMultigraph()"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 9,
		"endColumn": 27,
		"codeElementType": "RETURN_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method protected getInconsistentHeuristicTestGraph() : Graph<Integer,DefaultWeightedEdge> extracted from public testInconsistentHeuristic() : void in class org.jgrapht.alg.shortestpath.AStarShortestPathTest & moved to class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 184,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testInconsistentHeuristic() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 187,
		"endLine": 188,
		"startColumn": 9,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 191,
		"endLine": 191,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 195,
		"endLine": 195,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 196,
		"endLine": 196,
		"startColumn": 9,
		"endColumn": 63,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 197,
		"endLine": 197,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 198,
		"endLine": 198,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 199,
		"endLine": 199,
		"startColumn": 9,
		"endColumn": 63,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 200,
		"endLine": 200,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 201,
		"endLine": 201,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 202,
		"endLine": 202,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 129,
		"endLine": 147,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected getInconsistentHeuristicTestGraph() : Graph<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 130,
		"endLine": 131,
		"startColumn": 9,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 133,
		"endLine": 133,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 139,
		"endLine": 139,
		"startColumn": 9,
		"endColumn": 71,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 142,
		"endLine": 142,
		"startColumn": 9,
		"endColumn": 71,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 143,
		"endLine": 143,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 144,
		"endLine": 144,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 145,
		"endLine": 145,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 95,
		"endLine": 104,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testInconsistentHeuristic() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 97,
		"endLine": 97,
		"startColumn": 49,
		"endColumn": 84,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "getInconsistentHeuristicTestGraph()"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 9,
		"endColumn": 22,
		"codeElementType": "RETURN_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable g : Graph<Integer,DefaultWeightedEdge> to graph : Graph<Integer,DefaultWeightedEdge> in method protected getInconsistentHeuristicTestGraph() : Graph<Integer,DefaultWeightedEdge> from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 187,
		"endLine": 188,
		"startColumn": 45,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "g : Graph<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 187,
		"endLine": 188,
		"startColumn": 9,
		"endColumn": 74,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 191,
		"endLine": 191,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 195,
		"endLine": 195,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 196,
		"endLine": 196,
		"startColumn": 9,
		"endColumn": 63,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 197,
		"endLine": 197,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 198,
		"endLine": 198,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 199,
		"endLine": 199,
		"startColumn": 9,
		"endColumn": 63,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 200,
		"endLine": 200,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 201,
		"endLine": 201,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 202,
		"endLine": 202,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 130,
		"endLine": 131,
		"startColumn": 45,
		"endColumn": 77,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "graph : Graph<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 130,
		"endLine": 131,
		"startColumn": 9,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 133,
		"endLine": 133,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 139,
		"endLine": 139,
		"startColumn": 9,
		"endColumn": 71,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 142,
		"endLine": 142,
		"startColumn": 9,
		"endColumn": 71,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 143,
		"endLine": 143,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 144,
		"endLine": 144,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 145,
		"endLine": 145,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method protected getInconsistentHeuristic() : AStarAdmissibleHeuristic<Integer> extracted from public testInconsistentHeuristic() : void in class org.jgrapht.alg.shortestpath.AStarShortestPathTest & moved to class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 184,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testInconsistentHeuristic() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 212,
		"endLine": 212,
		"startColumn": 21,
		"endColumn": 47,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 216,
		"endLine": 216,
		"startColumn": 21,
		"endColumn": 47,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 21,
		"endColumn": 47,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 21,
		"endColumn": 47,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 232,
		"endLine": 232,
		"startColumn": 17,
		"endColumn": 27,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 210,
		"endLine": 213,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 214,
		"endLine": 217,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 218,
		"endLine": 221,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 226,
		"endLine": 229,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 210,
		"endLine": 213,
		"startColumn": 61,
		"endColumn": 18,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 214,
		"endLine": 217,
		"startColumn": 61,
		"endColumn": 18,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 218,
		"endLine": 221,
		"startColumn": 61,
		"endColumn": 18,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 226,
		"endLine": 229,
		"startColumn": 61,
		"endColumn": 18,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 209,
		"endLine": 233,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 204,
		"endLine": 234,
		"startColumn": 9,
		"endColumn": 11,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 149,
		"endLine": 170,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected getInconsistentHeuristic() : AStarAdmissibleHeuristic<Integer>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 17,
		"endColumn": 43,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 157,
		"endLine": 157,
		"startColumn": 17,
		"endColumn": 43,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 161,
		"endLine": 161,
		"startColumn": 17,
		"endColumn": 43,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 165,
		"endLine": 165,
		"startColumn": 17,
		"endColumn": 43,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 13,
		"endColumn": 23,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 151,
		"endLine": 154,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 155,
		"endLine": 158,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 159,
		"endLine": 162,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 163,
		"endLine": 166,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 151,
		"endLine": 154,
		"startColumn": 35,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 155,
		"endLine": 158,
		"startColumn": 35,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 159,
		"endLine": 162,
		"startColumn": 35,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 163,
		"endLine": 166,
		"startColumn": 35,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 150,
		"endLine": 169,
		"startColumn": 26,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 150,
		"endLine": 169,
		"startColumn": 9,
		"endColumn": 11,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 95,
		"endLine": 104,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testInconsistentHeuristic() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 98,
		"endLine": 98,
		"startColumn": 47,
		"endColumn": 73,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "getInconsistentHeuristic()"
}]
},
{
	"type": "Replace Anonymous With Lambda",
	"description": "Replace Anonymous With Lambda org.jgrapht.alg.shortestpath.AStarShortestPathTest.testInconsistentHeuristic.h.new AStarAdmissibleHeuristic<Integer> with (s, t) -> {if(s == 0 && t == 1){return 0.5822723681370429; in method protected getInconsistentHeuristic() : AStarAdmissibleHeuristic<Integer> from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 205,
		"endLine": 234,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ANONYMOUS_CLASS_DECLARATION",
		"description": "anonymous class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest.testInconsistentHeuristic.h.new AStarAdmissibleHeuristic<Integer>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 184,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testInconsistentHeuristic() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 150,
		"endLine": 169,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "LAMBDA_EXPRESSION",
		"description": "lambda expression",
		"codeElement": "(s, t) -> {if(s == 0 && t == 1){return 0.5822723681370429;"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 149,
		"endLine": 170,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with introduced lambda",
		"codeElement": "protected getInconsistentHeuristic() : AStarAdmissibleHeuristic<Integer>"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type void to AStarAdmissibleHeuristic<Integer> in method protected getInconsistentHeuristic() : AStarAdmissibleHeuristic<Integer> from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 185,
		"endLine": 185,
		"startColumn": 12,
		"endColumn": 16,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 184,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testInconsistentHeuristic() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 149,
		"endLine": 149,
		"startColumn": 15,
		"endColumn": 48,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "AStarAdmissibleHeuristic<Integer>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 149,
		"endLine": 170,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "protected getInconsistentHeuristic() : AStarAdmissibleHeuristic<Integer>"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @Test in method public testInconsistentHeuristic() : void from class org.jgrapht.alg.shortestpath.AStarShortestPathTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 5,
		"endColumn": 10,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@Test"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 184,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testInconsistentHeuristic() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 149,
		"endLine": 170,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "protected getInconsistentHeuristic() : AStarAdmissibleHeuristic<Integer>"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier public to protected in method protected getInconsistentHeuristic() : AStarAdmissibleHeuristic<Integer> from class org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 184,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testInconsistentHeuristic() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 149,
		"endLine": 170,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "protected getInconsistentHeuristic() : AStarAdmissibleHeuristic<Integer>"
}]
},
{
	"type": "Pull Up Attribute",
	"description": "Pull Up Attribute package graph : Graph<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.SearchFrontier to package graph : Graph<V,E> from class org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm.BaseSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 246,
		"endLine": 246,
		"startColumn": 27,
		"endColumn": 32,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package graph : Graph<V,E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 107,
		"endLine": 107,
		"startColumn": 27,
		"endColumn": 32,
		"codeElementType": "FIELD_DECLARATION",
		"description": "pulled up attribute declaration",
		"codeElement": "package graph : Graph<V,E>"
}]
},
{
	"type": "Extract Superclass",
	"description": "Extract Superclass org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest from class org.jgrapht.alg.shortestpath.AStarShortestPathTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 27,
		"endLine": 283,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/AStarShortestPathTest.java",
		"startLine": 32,
		"endLine": 105,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "type declaration after extraction",
		"codeElement": "org.jgrapht.alg.shortestpath.AStarShortestPathTest"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseHeuristicSearchTest.java",
		"startLine": 28,
		"endLine": 215,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "extracted type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.BaseHeuristicSearchTest"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "277bfd5829612f4dc8eeffa3bb5d65c665448a83",
	"url": "https://github.com/jgrapht/jgrapht/commit/277bfd5829612f4dc8eeffa3bb5d65c665448a83",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "96266fe41f8465363142f5969cacafd560e33b03",
	"url": "https://github.com/jgrapht/jgrapht/commit/96266fe41f8465363142f5969cacafd560e33b03",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "999a87c8bd7603091a6dfbcf589a3450335286d3",
	"url": "https://github.com/jgrapht/jgrapht/commit/999a87c8bd7603091a6dfbcf589a3450335286d3",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "28e09943b3d7b6a17f0378fbdf3aad090aa95769",
	"url": "https://github.com/jgrapht/jgrapht/commit/28e09943b3d7b6a17f0378fbdf3aad090aa95769",
	"refactorings": [{
	"type": "Extract Method",
	"description": "Extract Method protected getEntireGraphVertexIterator() : Iterator<V> extracted from public CrossComponentIterator(g Graph<V,E>, startVertices Iterable<V>) in class org.jgrapht.traverse.CrossComponentIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 101,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public CrossComponentIterator(g Graph<V,E>, startVertices Iterable<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 119,
		"endLine": 119,
		"startColumn": 9,
		"endColumn": 71,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 206,
		"endLine": 218,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected getEntireGraphVertexIterator() : Iterator<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 215,
		"endLine": 215,
		"startColumn": 13,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 101,
		"endLine": 140,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public CrossComponentIterator(g Graph<V,E>, startVertices Iterable<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 129,
		"endLine": 129,
		"startColumn": 52,
		"endColumn": 82,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "getEntireGraphVertexIterator()"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 214,
		"endLine": 214,
		"startColumn": 13,
		"endColumn": 49,
		"codeElementType": "ASSERT_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 217,
		"endLine": 217,
		"startColumn": 9,
		"endColumn": 42,
		"codeElementType": "RETURN_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 213,
		"endLine": 216,
		"startColumn": 48,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 213,
		"endLine": 216,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method protected getEntireGraphVertexIterator() : Iterator<V> extracted from public hasNext() : boolean in class org.jgrapht.traverse.CrossComponentIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 143,
		"endLine": 177,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public hasNext() : boolean"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 158,
		"endLine": 159,
		"startColumn": 13,
		"endColumn": 95,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 17,
		"endColumn": 44,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 206,
		"endLine": 218,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected getEntireGraphVertexIterator() : Iterator<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 214,
		"endLine": 214,
		"startColumn": 13,
		"endColumn": 49,
		"codeElementType": "ASSERT_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 214,
		"endLine": 214,
		"startColumn": 20,
		"endColumn": 47,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 142,
		"endLine": 176,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public hasNext() : boolean"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 158,
		"endLine": 158,
		"startColumn": 47,
		"endColumn": 77,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "getEntireGraphVertexIterator()"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 215,
		"endLine": 215,
		"startColumn": 13,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 217,
		"endLine": 217,
		"startColumn": 9,
		"endColumn": 42,
		"codeElementType": "RETURN_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 213,
		"endLine": 216,
		"startColumn": 48,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 213,
		"endLine": 216,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "3b2f075b579f6668634d0d3c77b265de35373aed",
	"url": "https://github.com/jgrapht/jgrapht/commit/3b2f075b579f6668634d0d3c77b265de35373aed",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "e317aceef5163fae3b2da662367ac2f7ad51f504",
	"url": "https://github.com/jgrapht/jgrapht/commit/e317aceef5163fae3b2da662367ac2f7ad51f504",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "ef875d2d95c78c28e3db3da66a27032dff9f2bdf",
	"url": "https://github.com/jgrapht/jgrapht/commit/ef875d2d95c78c28e3db3da66a27032dff9f2bdf",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "83fadc9b0bf4efc5a93111bb1a86a3729535de05",
	"url": "https://github.com/jgrapht/jgrapht/commit/83fadc9b0bf4efc5a93111bb1a86a3729535de05",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "4ae37b41c9d1f1dece868c628a8f4a9db929f1cc",
	"url": "https://github.com/jgrapht/jgrapht/commit/4ae37b41c9d1f1dece868c628a8f4a9db929f1cc",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "7227ab71e34cb1862745d4f750c5bacfebfa6db5",
	"url": "https://github.com/jgrapht/jgrapht/commit/7227ab71e34cb1862745d4f750c5bacfebfa6db5",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "076bfacd7da3fee179dc840a82f8d9da62b42546",
	"url": "https://github.com/jgrapht/jgrapht/commit/076bfacd7da3fee179dc840a82f8d9da62b42546",
	"refactorings": [{
	"type": "Rename Method",
	"description": "Rename Method public testWhenVertexIsNotInGraph_Then_ThowException() : void renamed to public testWhenVertexIsNotInGraph_Then_ThrowException() : void in class org.jgrapht.graph.DirectedAcyclicGraphTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/DirectedAcyclicGraphTest.java",
		"startLine": 228,
		"endLine": 238,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testWhenVertexIsNotInGraph_Then_ThowException() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/DirectedAcyclicGraphTest.java",
		"startLine": 230,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "public testWhenVertexIsNotInGraph_Then_ThrowException() : void"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public DirectedAcyclicGraph(vertexSupplier Supplier<V>, edgeSupplier Supplier<E>, weighted boolean, allowMultipleEdges boolean) extracted from public DirectedAcyclicGraph(edgeClass Class<? extends E>) in class org.jgrapht.graph.DirectedAcyclicGraph",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 86,
		"endLine": 94,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public DirectedAcyclicGraph(edgeClass Class<? extends E>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 93,
		"endLine": 93,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 110,
		"endLine": 124,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public DirectedAcyclicGraph(vertexSupplier Supplier<V>, edgeSupplier Supplier<E>, weighted boolean, allowMultipleEdges boolean)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 121,
		"endLine": 123,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 85,
		"endLine": 93,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public DirectedAcyclicGraph(edgeClass Class<? extends E>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 74,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(null,SupplierUtil.createSupplier(edgeClass),false,false)"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method protected DirectedAcyclicGraph(vertexSupplier Supplier<V>, edgeSupplier Supplier<E>, visitedStrategyFactory VisitedStrategyFactory, topoOrderMap TopoOrderMap<V>, weighted boolean, allowMultipleEdges boolean) extracted from protected DirectedAcyclicGraph(vertexSupplier Supplier<V>, edgeSupplier Supplier<E>, visitedStrategyFactory VisitedStrategyFactory, topoOrderMap TopoOrderMap<V>, weighted boolean) in class org.jgrapht.graph.DirectedAcyclicGraph",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 111,
		"endLine": 133,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "protected DirectedAcyclicGraph(vertexSupplier Supplier<V>, edgeSupplier Supplier<E>, visitedStrategyFactory VisitedStrategyFactory, topoOrderMap TopoOrderMap<V>, weighted boolean)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 128,
		"endLine": 129,
		"startColumn": 9,
		"endColumn": 94,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 130,
		"endLine": 131,
		"startColumn": 9,
		"endColumn": 90,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 9,
		"endColumn": 55,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 145,
		"endLine": 176,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected DirectedAcyclicGraph(vertexSupplier Supplier<V>, edgeSupplier Supplier<E>, visitedStrategyFactory VisitedStrategyFactory, topoOrderMap TopoOrderMap<V>, weighted boolean, allowMultipleEdges boolean)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 171,
		"endLine": 172,
		"startColumn": 9,
		"endColumn": 94,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 173,
		"endLine": 174,
		"startColumn": 9,
		"endColumn": 90,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 175,
		"endLine": 175,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 162,
		"endLine": 170,
		"startColumn": 9,
		"endColumn": 27,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 126,
		"endLine": 143,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "protected DirectedAcyclicGraph(vertexSupplier Supplier<V>, edgeSupplier Supplier<E>, visitedStrategyFactory VisitedStrategyFactory, topoOrderMap TopoOrderMap<V>, weighted boolean)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/graph/DirectedAcyclicGraph.java",
		"startLine": 142,
		"endLine": 142,
		"startColumn": 9,
		"endColumn": 99,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(vertexSupplier,edgeSupplier,visitedStrategyFactory,topoOrderMap,weighted,false)"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "06e83d4e9c6f3f966286908b31e459a473fa6446",
	"url": "https://github.com/jgrapht/jgrapht/commit/06e83d4e9c6f3f966286908b31e459a473fa6446",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "d7321e07ce046075e3f02386b931df6437a3500a",
	"url": "https://github.com/jgrapht/jgrapht/commit/d7321e07ce046075e3f02386b931df6437a3500a",
	"refactorings": [{
	"type": "Move Class",
	"description": "Move Class org.jgrapht.graph.guava.SerializationTestUtils moved to org.jgrapht.graph.SerializationTestUtils",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/SerializationTestUtils.java",
		"startLine": 22,
		"endLine": 46,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.graph.guava.SerializationTestUtils"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 22,
		"endLine": 46,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "moved type declaration",
		"codeElement": "org.jgrapht.graph.SerializationTestUtils"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c70edff7c1e3fc4a7ae9845621b979ad967566b4",
	"url": "https://github.com/jgrapht/jgrapht/commit/c70edff7c1e3fc4a7ae9845621b979ad967566b4",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "1dc11b8a35949d62bff846c2b8e6a4816d1c8091",
	"url": "https://github.com/jgrapht/jgrapht/commit/1dc11b8a35949d62bff846c2b8e6a4816d1c8091",
	"refactorings": [{
	"type": "Add Attribute Modifier",
	"description": "Add Attribute Modifier final in attribute private v1 : String from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 20,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private v1 : String"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 60,
		"endLine": 60,
		"startColumn": 33,
		"endColumn": 42,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with added modifier",
		"codeElement": "private v1 : String"
}]
},
{
	"type": "Add Attribute Modifier",
	"description": "Add Attribute Modifier static in attribute private v1 : String from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 20,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private v1 : String"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 60,
		"endLine": 60,
		"startColumn": 33,
		"endColumn": 42,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with added modifier",
		"codeElement": "private v1 : String"
}]
},
{
	"type": "Add Attribute Modifier",
	"description": "Add Attribute Modifier final in attribute private v2 : String from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 36,
		"endLine": 36,
		"startColumn": 20,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private v2 : String"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 61,
		"endLine": 61,
		"startColumn": 33,
		"endColumn": 42,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with added modifier",
		"codeElement": "private v2 : String"
}]
},
{
	"type": "Add Attribute Modifier",
	"description": "Add Attribute Modifier static in attribute private v2 : String from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 36,
		"endLine": 36,
		"startColumn": 20,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private v2 : String"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 61,
		"endLine": 61,
		"startColumn": 33,
		"endColumn": 42,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with added modifier",
		"codeElement": "private v2 : String"
}]
},
{
	"type": "Add Attribute Modifier",
	"description": "Add Attribute Modifier final in attribute private v3 : String from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 37,
		"endLine": 37,
		"startColumn": 20,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private v3 : String"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 33,
		"endColumn": 42,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with added modifier",
		"codeElement": "private v3 : String"
}]
},
{
	"type": "Add Attribute Modifier",
	"description": "Add Attribute Modifier static in attribute private v3 : String from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 37,
		"endLine": 37,
		"startColumn": 20,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private v3 : String"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 33,
		"endColumn": 42,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with added modifier",
		"codeElement": "private v3 : String"
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable graph : DirectedMultigraph<String,DefaultEdge> to graph1 : DirectedMultigraph<String,DefaultEdge> in method public testDirectedMultigraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 45,
		"endLine": 45,
		"startColumn": 49,
		"endColumn": 100,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "graph : DirectedMultigraph<String,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 45,
		"endLine": 45,
		"startColumn": 9,
		"endColumn": 101,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 49,
		"endLine": 49,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 50,
		"endLine": 50,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 425,
		"endLine": 426,
		"startColumn": 49,
		"endColumn": 56,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "graph1 : DirectedMultigraph<String,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 425,
		"endLine": 426,
		"startColumn": 9,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 428,
		"endLine": 428,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 429,
		"endLine": 429,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 430,
		"endLine": 430,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "543a161171224a3b67a7183d06090786b7b4a665",
	"url": "https://github.com/jgrapht/jgrapht/commit/543a161171224a3b67a7183d06090786b7b4a665",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "649e5c6b95976f7f0e90120f8843ac10ffd9bdd3",
	"url": "https://github.com/jgrapht/jgrapht/commit/649e5c6b95976f7f0e90120f8843ac10ffd9bdd3",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "97e7a217a0320346ee26e9a163ae6c3464623b6a",
	"url": "https://github.com/jgrapht/jgrapht/commit/97e7a217a0320346ee26e9a163ae6c3464623b6a",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "48499822d81dc1832523adf402e8e8f458ec9329",
	"url": "https://github.com/jgrapht/jgrapht/commit/48499822d81dc1832523adf402e8e8f458ec9329",
	"refactorings": [{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSimpleGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 129,
		"endLine": 152,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSimpleGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 129,
		"endLine": 150,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSimpleGraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testMultiGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 161,
		"endLine": 161,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 154,
		"endLine": 177,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testMultiGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 152,
		"endLine": 173,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testMultiGraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testPseudograph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 186,
		"endLine": 186,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 179,
		"endLine": 203,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testPseudograph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 175,
		"endLine": 197,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testPseudograph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testDefaultUndirectedGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 213,
		"endLine": 213,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 205,
		"endLine": 230,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testDefaultUndirectedGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 199,
		"endLine": 222,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testDefaultUndirectedGraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSimpleWeightedGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 240,
		"endLine": 240,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 232,
		"endLine": 264,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSimpleWeightedGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 224,
		"endLine": 254,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSimpleWeightedGraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testWeightedMultigraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 274,
		"endLine": 274,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 266,
		"endLine": 304,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testWeightedMultigraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 256,
		"endLine": 292,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testWeightedMultigraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testWeightedPseudograph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 314,
		"endLine": 314,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 306,
		"endLine": 347,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testWeightedPseudograph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 294,
		"endLine": 333,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testWeightedPseudograph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testDefaultUndirectedWeightedGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 357,
		"endLine": 357,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 349,
		"endLine": 385,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testDefaultUndirectedWeightedGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 335,
		"endLine": 369,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testDefaultUndirectedWeightedGraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSimpleDirectedGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 394,
		"endLine": 394,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 387,
		"endLine": 410,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSimpleDirectedGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 371,
		"endLine": 392,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSimpleDirectedGraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testDirectedMultigraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 420,
		"endLine": 420,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 412,
		"endLine": 436,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testDirectedMultigraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 394,
		"endLine": 416,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testDirectedMultigraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testDirectedPseudograph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 446,
		"endLine": 446,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 438,
		"endLine": 466,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testDirectedPseudograph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 418,
		"endLine": 444,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testDirectedPseudograph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testDefaultDirectedGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 476,
		"endLine": 476,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 468,
		"endLine": 493,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testDefaultDirectedGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 446,
		"endLine": 469,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testDefaultDirectedGraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSimpleDirectedWeightedGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 503,
		"endLine": 503,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 495,
		"endLine": 528,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSimpleDirectedWeightedGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 471,
		"endLine": 502,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSimpleDirectedWeightedGraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testDirectedWeightedMultiGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 538,
		"endLine": 538,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 530,
		"endLine": 570,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testDirectedWeightedMultiGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 504,
		"endLine": 542,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testDirectedWeightedMultiGraph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testDirectedWeightedPseudograph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 580,
		"endLine": 580,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 572,
		"endLine": 618,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testDirectedWeightedPseudograph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 544,
		"endLine": 588,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testDirectedWeightedPseudograph() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testDefaultDirectedWeightedGraph() : void from class org.jgrapht.graph.SerializationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 628,
		"endLine": 628,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 620,
		"endLine": 657,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testDefaultDirectedWeightedGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTest.java",
		"startLine": 590,
		"endLine": 625,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testDefaultDirectedWeightedGraph() : void"
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type obj : Object to obj : T in method public serializeAndDeserialize(obj T) : T from class org.jgrapht.graph.SerializationTestUtils",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 34,
		"endLine": 34,
		"startColumn": 50,
		"endColumn": 60,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "obj : Object"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 40,
		"endLine": 40,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 47,
		"endLine": 47,
		"startColumn": 9,
		"endColumn": 20,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 46,
		"endLine": 46,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 49,
		"endColumn": 54,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "obj : T"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 41,
		"endLine": 41,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 48,
		"endLine": 48,
		"startColumn": 9,
		"endColumn": 20,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 47,
		"endLine": 47,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type Object to T in method public serializeAndDeserialize(obj T) : T from class org.jgrapht.graph.SerializationTestUtils",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 34,
		"endLine": 34,
		"startColumn": 19,
		"endColumn": 25,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "Object"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 34,
		"endLine": 48,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public serializeAndDeserialize(obj Object) : Object"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 23,
		"endColumn": 24,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "T"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 34,
		"endLine": 49,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public serializeAndDeserialize(obj T) : T"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @SuppressWarnings(\"unchecked\") in method public serializeAndDeserialize(obj T) : T from class org.jgrapht.graph.SerializationTestUtils",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 34,
		"endLine": 48,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public serializeAndDeserialize(obj Object) : Object"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 34,
		"endLine": 34,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/graph/SerializationTestUtils.java",
		"startLine": 34,
		"endLine": 49,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public serializeAndDeserialize(obj T) : T"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSerialization() : void from class org.jgrapht.graph.guava.ImmutableGraphAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/ImmutableGraphAdapterTest.java",
		"startLine": 156,
		"endLine": 156,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/ImmutableGraphAdapterTest.java",
		"startLine": 153,
		"endLine": 230,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSerialization() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/ImmutableGraphAdapterTest.java",
		"startLine": 153,
		"endLine": 228,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSerialization() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSerialization() : void from class org.jgrapht.graph.guava.ImmutableNetworkAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/ImmutableNetworkAdapterTest.java",
		"startLine": 162,
		"endLine": 162,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/ImmutableNetworkAdapterTest.java",
		"startLine": 159,
		"endLine": 229,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSerialization() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/ImmutableNetworkAdapterTest.java",
		"startLine": 159,
		"endLine": 227,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSerialization() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSerialization() : void from class org.jgrapht.graph.guava.ImmutableValueGraphAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/ImmutableValueGraphAdapterTest.java",
		"startLine": 272,
		"endLine": 272,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/ImmutableValueGraphAdapterTest.java",
		"startLine": 269,
		"endLine": 348,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSerialization() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/ImmutableValueGraphAdapterTest.java",
		"startLine": 269,
		"endLine": 346,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSerialization() : void"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type g2 : Graph<String,DefaultEdge> to g2 : Graph<String,EndpointPair<String>> in method public testSerialization() : void from class org.jgrapht.graph.guava.MutableGraphAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 240,
		"endLine": 241,
		"startColumn": 36,
		"endColumn": 91,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "g2 : Graph<String,DefaultEdge>"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 243,
		"endLine": 243,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 244,
		"endLine": 244,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 245,
		"endLine": 245,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 246,
		"endLine": 246,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 247,
		"endLine": 247,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 248,
		"endLine": 248,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 250,
		"endLine": 250,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 251,
		"endLine": 251,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 252,
		"endLine": 252,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 253,
		"endLine": 253,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 254,
		"endLine": 254,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 255,
		"endLine": 255,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 256,
		"endLine": 256,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 257,
		"endLine": 257,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 258,
		"endLine": 258,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 259,
		"endLine": 259,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 260,
		"endLine": 260,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 261,
		"endLine": 261,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 263,
		"endLine": 263,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 239,
		"endLine": 239,
		"startColumn": 45,
		"endColumn": 99,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "g2 : Graph<String,EndpointPair<String>>"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 241,
		"endLine": 241,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 242,
		"endLine": 242,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 243,
		"endLine": 243,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 244,
		"endLine": 244,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 245,
		"endLine": 245,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 246,
		"endLine": 246,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 247,
		"endLine": 247,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 248,
		"endLine": 248,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 250,
		"endLine": 250,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 251,
		"endLine": 251,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 252,
		"endLine": 252,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 253,
		"endLine": 253,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 254,
		"endLine": 254,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 255,
		"endLine": 255,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 256,
		"endLine": 256,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 257,
		"endLine": 257,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 258,
		"endLine": 258,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 259,
		"endLine": 259,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 261,
		"endLine": 261,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSerialization() : void from class org.jgrapht.graph.guava.MutableGraphAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 213,
		"endLine": 213,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 210,
		"endLine": 264,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSerialization() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 210,
		"endLine": 262,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSerialization() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSerialization1() : void from class org.jgrapht.graph.guava.MutableGraphAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 269,
		"endLine": 269,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 266,
		"endLine": 311,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSerialization1() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableGraphAdapterTest.java",
		"startLine": 264,
		"endLine": 305,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSerialization1() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSerialization() : void from class org.jgrapht.graph.guava.MutableNetworkAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableNetworkAdapterTest.java",
		"startLine": 197,
		"endLine": 197,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableNetworkAdapterTest.java",
		"startLine": 194,
		"endLine": 252,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSerialization() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableNetworkAdapterTest.java",
		"startLine": 192,
		"endLine": 247,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSerialization() : void"
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSerialization1() : void from class org.jgrapht.graph.guava.MutableNetworkAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableNetworkAdapterTest.java",
		"startLine": 257,
		"endLine": 257,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableNetworkAdapterTest.java",
		"startLine": 254,
		"endLine": 299,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSerialization1() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableNetworkAdapterTest.java",
		"startLine": 249,
		"endLine": 290,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSerialization1() : void"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type g2 : Graph<String,DefaultEdge> to g2 : Graph<String,EndpointPair<String>> in method public testSerialization() : void from class org.jgrapht.graph.guava.MutableValueGraphAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 341,
		"endLine": 342,
		"startColumn": 36,
		"endColumn": 91,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "g2 : Graph<String,DefaultEdge>"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 344,
		"endLine": 344,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 345,
		"endLine": 345,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 346,
		"endLine": 346,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 347,
		"endLine": 347,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 348,
		"endLine": 348,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 349,
		"endLine": 349,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 350,
		"endLine": 350,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 351,
		"endLine": 351,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 352,
		"endLine": 352,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 353,
		"endLine": 353,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 354,
		"endLine": 354,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 355,
		"endLine": 355,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 356,
		"endLine": 356,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 357,
		"endLine": 357,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 358,
		"endLine": 358,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 359,
		"endLine": 359,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 360,
		"endLine": 360,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 361,
		"endLine": 361,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 362,
		"endLine": 362,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 364,
		"endLine": 364,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 340,
		"endLine": 340,
		"startColumn": 45,
		"endColumn": 99,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "g2 : Graph<String,EndpointPair<String>>"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 342,
		"endLine": 342,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 343,
		"endLine": 343,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 344,
		"endLine": 344,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 345,
		"endLine": 345,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 346,
		"endLine": 346,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 347,
		"endLine": 347,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 348,
		"endLine": 348,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 349,
		"endLine": 349,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 350,
		"endLine": 350,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 351,
		"endLine": 351,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 352,
		"endLine": 352,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 353,
		"endLine": 353,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 354,
		"endLine": 354,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 355,
		"endLine": 355,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 356,
		"endLine": 356,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 357,
		"endLine": 357,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 358,
		"endLine": 358,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 359,
		"endLine": 359,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 360,
		"endLine": 360,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 362,
		"endLine": 362,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSerialization() : void from class org.jgrapht.graph.guava.MutableValueGraphAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 313,
		"endLine": 313,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 310,
		"endLine": 365,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSerialization() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 310,
		"endLine": 363,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSerialization() : void"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type g2 : Graph<String,DefaultEdge> to g2 : Graph<String,EndpointPair<String>> in method public testSerialization1() : void from class org.jgrapht.graph.guava.MutableValueGraphAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 393,
		"endLine": 394,
		"startColumn": 36,
		"endColumn": 91,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "g2 : Graph<String,DefaultEdge>"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 396,
		"endLine": 396,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 397,
		"endLine": 397,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 398,
		"endLine": 398,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 399,
		"endLine": 399,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 400,
		"endLine": 400,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 401,
		"endLine": 401,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 402,
		"endLine": 402,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 403,
		"endLine": 403,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 404,
		"endLine": 404,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 405,
		"endLine": 405,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 406,
		"endLine": 406,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 407,
		"endLine": 407,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 408,
		"endLine": 408,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 409,
		"endLine": 409,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 390,
		"endLine": 390,
		"startColumn": 45,
		"endColumn": 99,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "g2 : Graph<String,EndpointPair<String>>"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 392,
		"endLine": 392,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 393,
		"endLine": 393,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 394,
		"endLine": 394,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 395,
		"endLine": 395,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 396,
		"endLine": 396,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 397,
		"endLine": 397,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 398,
		"endLine": 398,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 399,
		"endLine": 399,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 400,
		"endLine": 400,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 401,
		"endLine": 401,
		"startColumn": 9,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 402,
		"endLine": 402,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 403,
		"endLine": 403,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 404,
		"endLine": 404,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 405,
		"endLine": 405,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Remove Method Annotation",
	"description": "Remove Method Annotation @SuppressWarnings(\"unchecked\") in method public testSerialization1() : void from class org.jgrapht.graph.guava.MutableValueGraphAdapterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 370,
		"endLine": 370,
		"startColumn": 5,
		"endColumn": 35,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 367,
		"endLine": 410,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testSerialization1() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-guava/src/test/java/org/jgrapht/graph/guava/MutableValueGraphAdapterTest.java",
		"startLine": 365,
		"endLine": 406,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed annotation",
		"codeElement": "public testSerialization1() : void"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "9ff82bf31d926ad0c349e603c81cf8d5d2c45794",
	"url": "https://github.com/jgrapht/jgrapht/commit/9ff82bf31d926ad0c349e603c81cf8d5d2c45794",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c97c18d7a374f1cf4d8593d67817757264b27a97",
	"url": "https://github.com/jgrapht/jgrapht/commit/c97c18d7a374f1cf4d8593d67817757264b27a97",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "2a8a64888eda730ff5e77d42ba4bf1c59b752e1a",
	"url": "https://github.com/jgrapht/jgrapht/commit/2a8a64888eda730ff5e77d42ba4bf1c59b752e1a",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "60c8a85da4051d9ac4225dbfbe13257e1762c57a",
	"url": "https://github.com/jgrapht/jgrapht/commit/60c8a85da4051d9ac4225dbfbe13257e1762c57a",
	"refactorings": [{
	"type": "Add Parameter",
	"description": "Add Parameter ordering : SetSizeOrdering in method package UnionIterator(ordering SetSizeOrdering) from class org.jgrapht.util.UnmodifiableUnionSet.UnionIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 99,
		"endLine": 104,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public UnionIterator()"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 23,
		"endColumn": 47,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "ordering : SetSizeOrdering"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 138,
		"endLine": 144,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "package UnionIterator(ordering SetSizeOrdering)"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier public to package in method package UnionIterator(ordering SetSizeOrdering) from class org.jgrapht.util.UnmodifiableUnionSet.UnionIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 99,
		"endLine": 104,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public UnionIterator()"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 138,
		"endLine": 144,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "package UnionIterator(ordering SetSizeOrdering)"
}]
},
{
	"type": "Rename Attribute",
	"description": "Rename Attribute inFirstSet : boolean to inBiggerSet : boolean in class org.jgrapht.util.UnmodifiableUnionSet.UnionIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 95,
		"endLine": 95,
		"startColumn": 25,
		"endColumn": 35,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "inFirstSet : boolean"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 25,
		"endColumn": 36,
		"codeElementType": "FIELD_DECLARATION",
		"description": "renamed attribute declaration",
		"codeElement": "inBiggerSet : boolean"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private orderSetsBySize() : SetSizeOrdering extracted from public size() : int in class org.jgrapht.util.UnmodifiableUnionSet",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 67,
		"endLine": 82,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public size() : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 75,
		"endLine": 75,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 86,
		"endLine": 103,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private orderSetsBySize() : SetSizeOrdering"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 61,
		"endLine": 78,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public size() : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 36,
		"endColumn": 53,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "orderSetsBySize()"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 9,
		"endColumn": 40,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 91,
		"endLine": 95,
		"startColumn": 13,
		"endColumn": 28,
		"codeElementType": "RETURN_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 97,
		"endLine": 101,
		"startColumn": 13,
		"endColumn": 29,
		"codeElementType": "RETURN_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 90,
		"endLine": 96,
		"startColumn": 37,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 96,
		"endLine": 102,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 90,
		"endLine": 102,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable count : int to firstSize : int in method private orderSetsBySize() : SetSizeOrdering from class org.jgrapht.util.UnmodifiableUnionSet",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 75,
		"endLine": 75,
		"startColumn": 13,
		"endColumn": 33,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "count : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 75,
		"endLine": 75,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 13,
		"endColumn": 37,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "firstSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Replace Attribute With Variable",
	"description": "Replace Attribute With Variable first : Set<E> to bigger : Set<E> in method public size() : int from class org.jgrapht.util.UnmodifiableUnionSet",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 38,
		"endLine": 38,
		"startColumn": 26,
		"endColumn": 31,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "first : Set<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 77,
		"endLine": 79,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 16,
		"endColumn": 40,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "bigger : Set<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 73,
		"endLine": 75,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Merge Attribute",
	"description": "Merge Attribute [second : Set<E>, first : Set<E>] to ordering : SetSizeOrdering in class org.jgrapht.util.UnmodifiableUnionSet.UnionIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 39,
		"endLine": 39,
		"startColumn": 26,
		"endColumn": 32,
		"codeElementType": "FIELD_DECLARATION",
		"description": "merged attribute declaration",
		"codeElement": "second : Set<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 38,
		"endLine": 38,
		"startColumn": 26,
		"endColumn": 31,
		"codeElementType": "FIELD_DECLARATION",
		"description": "merged attribute declaration",
		"codeElement": "first : Set<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/UnmodifiableUnionSet.java",
		"startLine": 133,
		"endLine": 133,
		"startColumn": 33,
		"endColumn": 41,
		"codeElementType": "FIELD_DECLARATION",
		"description": "new attribute declaration",
		"codeElement": "ordering : SetSizeOrdering"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "d97fd00fad69a2d595352633ed504ef99254db3f",
	"url": "https://github.com/jgrapht/jgrapht/commit/d97fd00fad69a2d595352633ed504ef99254db3f",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "acad8c603d90a4f48b8a5a7b699bff1c0bbe95eb",
	"url": "https://github.com/jgrapht/jgrapht/commit/acad8c603d90a4f48b8a5a7b699bff1c0bbe95eb",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "4602a1d443f1b1751cb50979e9cd78bba731c46e",
	"url": "https://github.com/jgrapht/jgrapht/commit/4602a1d443f1b1751cb50979e9cd78bba731c46e",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "8612aad89812f6974f1ff97f46ebee4ef8ded032",
	"url": "https://github.com/jgrapht/jgrapht/commit/8612aad89812f6974f1ff97f46ebee4ef8ded032",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "9775c30a3d9445cc7996da0ab0e607c18e5872bc",
	"url": "https://github.com/jgrapht/jgrapht/commit/9775c30a3d9445cc7996da0ab0e607c18e5872bc",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c5b03590735f8d00446d5f6b3bb7d36a7615fcff",
	"url": "https://github.com/jgrapht/jgrapht/commit/c5b03590735f8d00446d5f6b3bb7d36a7615fcff",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "bdec6a6c2e823df71c5c4990272be7c58a195b17",
	"url": "https://github.com/jgrapht/jgrapht/commit/bdec6a6c2e823df71c5c4990272be7c58a195b17",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "fbafb07afa321a77f0ddd77917c61d241ef42662",
	"url": "https://github.com/jgrapht/jgrapht/commit/fbafb07afa321a77f0ddd77917c61d241ef42662",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "45bc1eee4097c43bac51ce1657d448846125eb29",
	"url": "https://github.com/jgrapht/jgrapht/commit/45bc1eee4097c43bac51ce1657d448846125eb29",
	"refactorings": [{
	"type": "Change Variable Type",
	"description": "Change Variable Type fibNodes : FibonacciHeapNode<VertexInfo>[] to fibNodes : AddressableHeap.Handle<Double,VertexInfo>[] in method public getSpanningTree() : SpanningTree<E> from class org.jgrapht.alg.spanning.PrimMinimumSpanningTree",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 78,
		"endLine": 79,
		"startColumn": 41,
		"endColumn": 92,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "fibNodes : FibonacciHeapNode<VertexInfo>[]"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 80,
		"endLine": 82,
		"startColumn": 54,
		"endColumn": 62,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "fibNodes : AddressableHeap.Handle<Double,VertexInfo>[]"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type fibonacciHeap : FibonacciHeap<VertexInfo> to fibonacciHeap : AddressableHeap<Double,VertexInfo> in method public getSpanningTree() : SpanningTree<E> from class org.jgrapht.alg.spanning.PrimMinimumSpanningTree",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 80,
		"endLine": 80,
		"startColumn": 35,
		"endColumn": 72,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "fibonacciHeap : FibonacciHeap<VertexInfo>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 91,
		"endLine": 121,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "WHILE_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 83,
		"endLine": 83,
		"startColumn": 45,
		"endColumn": 82,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "fibonacciHeap : AddressableHeap<Double,VertexInfo>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 93,
		"endLine": 93,
		"startColumn": 13,
		"endColumn": 92,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 92,
		"endLine": 121,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "WHILE_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type fibNode : FibonacciHeapNode<VertexInfo> to fibNode : AddressableHeap.Handle<Double,VertexInfo> in method public getSpanningTree() : SpanningTree<E> from class org.jgrapht.alg.spanning.PrimMinimumSpanningTree",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 43,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "fibNode : FibonacciHeapNode<VertexInfo>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 93,
		"endLine": 93,
		"startColumn": 13,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 93,
		"endLine": 93,
		"startColumn": 56,
		"endColumn": 91,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "fibNode : AddressableHeap.Handle<Double,VertexInfo>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 94,
		"endLine": 94,
		"startColumn": 13,
		"endColumn": 56,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "6fb7ab17b7a8792b855a1de300a42e4c7bbba8d2",
	"url": "https://github.com/jgrapht/jgrapht/commit/6fb7ab17b7a8792b855a1de300a42e4c7bbba8d2",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "a5cbb0401e8cac95ce6b5e1614ea9fcc6abb65f9",
	"url": "https://github.com/jgrapht/jgrapht/commit/a5cbb0401e8cac95ce6b5e1614ea9fcc6abb65f9",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "556981de1b9d13f057e0948f0a1dc6a94075c964",
	"url": "https://github.com/jgrapht/jgrapht/commit/556981de1b9d13f057e0948f0a1dc6a94075c964",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "e7ae7a506ca4c2943878247a6e02bf71abc9b2d4",
	"url": "https://github.com/jgrapht/jgrapht/commit/e7ae7a506ca4c2943878247a6e02bf71abc9b2d4",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "26630083eda568be7099c408638ce31c4d94b4a4",
	"url": "https://github.com/jgrapht/jgrapht/commit/26630083eda568be7099c408638ce31c4d94b4a4",
	"refactorings": [{
	"type": "Rename Method",
	"description": "Rename Method private findOverlappingEdges() : void renamed to private findValidEdges() : void in class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 222,
		"endLine": 252,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private findOverlappingEdges() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 209,
		"endLine": 225,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "private findValidEdges() : void"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type paths : List<List<E>> to result : List<GraphPath<V,E>> in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 23,
		"endColumn": 48,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "paths : List<List<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 31,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "result : List<GraphPath<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 9,
		"endColumn": 58,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Add Variable Modifier",
	"description": "Add Variable Modifier final in variable resultPath : List<E> in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 196,
		"endLine": 196,
		"startColumn": 25,
		"endColumn": 49,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "path : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 176,
		"endLine": 220,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 27,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "variable declaration with added modifier",
		"codeElement": "resultPath : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 177,
		"endLine": 207,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added variable modifier",
		"codeElement": "private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>>"
}]
},
{
	"type": "Add Variable Modifier",
	"description": "Add Variable Modifier final in variable resultPath : List<E> in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 208,
		"endLine": 208,
		"startColumn": 14,
		"endColumn": 26,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "path : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 176,
		"endLine": 220,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 27,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "variable declaration with added modifier",
		"codeElement": "resultPath : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 177,
		"endLine": 207,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added variable modifier",
		"codeElement": "private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>>"
}]
},
{
	"type": "Add Variable Modifier",
	"description": "Add Variable Modifier final in variable edgeTarget : V in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 209,
		"endLine": 209,
		"startColumn": 15,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "v : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 176,
		"endLine": 220,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 195,
		"endLine": 195,
		"startColumn": 25,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "variable declaration with added modifier",
		"codeElement": "edgeTarget : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 177,
		"endLine": 207,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added variable modifier",
		"codeElement": "private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>>"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type nonOverlappingEdges : Set<E> to startEdges : List<E> in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 189,
		"endLine": 191,
		"startColumn": 16,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "nonOverlappingEdges : Set<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 193,
		"endLine": 205,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 17,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "startEdges : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 191,
		"endLine": 205,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable paths : List<List<E>> to result : List<GraphPath<V,E>> in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 23,
		"endColumn": 48,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "paths : List<List<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 31,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "result : List<GraphPath<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 9,
		"endColumn": 58,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable path : List<E> to resultPath : List<E> in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 196,
		"endLine": 196,
		"startColumn": 25,
		"endColumn": 49,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "path : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 196,
		"endLine": 196,
		"startColumn": 17,
		"endColumn": 50,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 197,
		"endLine": 197,
		"startColumn": 17,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 27,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "resultPath : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 13,
		"endColumn": 58,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 193,
		"endLine": 193,
		"startColumn": 13,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable path : List<E> to resultPath : List<E> in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 208,
		"endLine": 208,
		"startColumn": 14,
		"endColumn": 26,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "path : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 212,
		"endLine": 212,
		"startColumn": 17,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 27,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "resultPath : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 201,
		"endLine": 201,
		"startColumn": 17,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable v : V to edgeTarget : V in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 209,
		"endLine": 209,
		"startColumn": 15,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "v : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 213,
		"endLine": 213,
		"startColumn": 17,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 195,
		"endLine": 195,
		"startColumn": 25,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "edgeTarget : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 195,
		"endLine": 195,
		"startColumn": 17,
		"endColumn": 58,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable nonOverlappingEdges : Set<E> to startEdges : List<E> in method private buildPaths(startVertex V, endVertex V) : List<GraphPath<V,E>> from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 189,
		"endLine": 191,
		"startColumn": 16,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "nonOverlappingEdges : Set<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 193,
		"endLine": 205,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 17,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "startEdges : List<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 191,
		"endLine": 205,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type edgeOccurrenceCount : Map<UnorderedPair<V,V>,Integer> to validEdges : Map<UnorderedPair<V,V>,E> in method private findValidEdges() : void from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 231,
		"endLine": 231,
		"startColumn": 43,
		"endColumn": 80,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "edgeOccurrenceCount : Map<UnorderedPair<V,V>,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 231,
		"endLine": 231,
		"startColumn": 9,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 215,
		"endLine": 215,
		"startColumn": 37,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "validEdges : Map<UnorderedPair<V,V>,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 215,
		"endLine": 215,
		"startColumn": 9,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable edgeOccurrenceCount : Map<UnorderedPair<V,V>,Integer> to validEdges : Map<UnorderedPair<V,V>,E> in method private findValidEdges() : void from class org.jgrapht.alg.shortestpath.BaseKDisjointShortestPathsAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 231,
		"endLine": 231,
		"startColumn": 43,
		"endColumn": 80,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "edgeOccurrenceCount : Map<UnorderedPair<V,V>,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 231,
		"endLine": 231,
		"startColumn": 9,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 215,
		"endLine": 215,
		"startColumn": 37,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "validEdges : Map<UnorderedPair<V,V>,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseKDisjointShortestPathsAlgorithm.java",
		"startLine": 215,
		"endLine": 215,
		"startColumn": 9,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "9d2ba7cdea3ea38de823dd5c70c05cf67a20cd59",
	"url": "https://github.com/jgrapht/jgrapht/commit/9d2ba7cdea3ea38de823dd5c70c05cf67a20cd59",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "b210d10b491d2cae9942352ecf14003033af44a9",
	"url": "https://github.com/jgrapht/jgrapht/commit/b210d10b491d2cae9942352ecf14003033af44a9",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "83e1b2288a537f836552a70f4e92855ddf412ac6",
	"url": "https://github.com/jgrapht/jgrapht/commit/83e1b2288a537f836552a70f4e92855ddf412ac6",
	"refactorings": [{
	"type": "Rename Method",
	"description": "Rename Method public testPseudoGraph() : void renamed to public testPseudoGraph1() : void in class org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 245,
		"endLine": 260,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public testPseudoGraph() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 246,
		"endLine": 268,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "public testPseudoGraph1() : void"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type graph : SimpleDirectedWeightedGraph<Integer,DefaultWeightedEdge> to graph : DirectedWeightedPseudograph<Integer,DefaultWeightedEdge> in method public testOnRandomGraphs() : void from class org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 283,
		"endLine": 284,
		"startColumn": 71,
		"endColumn": 77,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "graph : SimpleDirectedWeightedGraph<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 285,
		"endLine": 285,
		"startColumn": 13,
		"endColumn": 75,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 286,
		"endLine": 286,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 289,
		"endLine": 289,
		"startColumn": 13,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 392,
		"endLine": 393,
		"startColumn": 71,
		"endColumn": 77,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "graph : DirectedWeightedPseudograph<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 394,
		"endLine": 394,
		"startColumn": 13,
		"endColumn": 75,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 395,
		"endLine": 395,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 398,
		"endLine": 398,
		"startColumn": 13,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable it : YenShortestPathIterator<Integer,DefaultWeightedEdge> to yenPathIterator : YenShortestPathIterator<Integer,DefaultWeightedEdge> in method private testOnRandomGraph(graph Graph<Integer,DefaultWeightedEdge>, source Integer, target Integer) : void from class org.jgrapht.alg.shortestpath.YenShortestPathIteratorTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 306,
		"endLine": 307,
		"startColumn": 63,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "it : YenShortestPathIterator<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 306,
		"endLine": 307,
		"startColumn": 9,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 312,
		"endLine": 318,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 422,
		"endLine": 423,
		"startColumn": 63,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "yenPathIterator : YenShortestPathIterator<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 422,
		"endLine": 423,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/YenShortestPathIteratorTest.java",
		"startLine": 425,
		"endLine": 432,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Attribute",
	"description": "Rename Attribute multigraph : int[][] to pseudograph1 : int[][] in class org.jgrapht.alg.shortestpath.BaseKShortestPathTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseKShortestPathTest.java",
		"startLine": 52,
		"endLine": 54,
		"startColumn": 29,
		"endColumn": 78,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "multigraph : int[][]"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/BaseKShortestPathTest.java",
		"startLine": 52,
		"endLine": 54,
		"startColumn": 29,
		"endColumn": 78,
		"codeElementType": "FIELD_DECLARATION",
		"description": "renamed attribute declaration",
		"codeElement": "pseudograph1 : int[][]"
}]
},
{
	"type": "Inline Variable",
	"description": "Inline Variable v : V in method private getMaskedVerticesAndEdges(path GraphPath<V,E>, pathDeviation V, pathDeviationIndex int) : Pair<Set<V>,Set<E>> from class org.jgrapht.alg.shortestpath.YenShortestPathIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/YenShortestPathIterator.java",
		"startLine": 314,
		"endLine": 314,
		"startColumn": 15,
		"endColumn": 38,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "inlined variable declaration",
		"codeElement": "v : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/YenShortestPathIterator.java",
		"startLine": 315,
		"endLine": 315,
		"startColumn": 13,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the name of the inlined variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/YenShortestPathIterator.java",
		"startLine": 317,
		"endLine": 317,
		"startColumn": 13,
		"endColumn": 53,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the initializer of the inlined variable",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable j : int to i : int in method private getCandidatePath(path GraphPath<V,E>, recoverVertexIndex int, spurPath GraphPath<V,E>) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.YenShortestPathIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/YenShortestPathIterator.java",
		"startLine": 358,
		"endLine": 358,
		"startColumn": 18,
		"endColumn": 23,
		"codeElementType": "VARIABLE_DECLARATION_EXPRESSION",
		"description": "original variable declaration",
		"codeElement": "j : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/YenShortestPathIterator.java",
		"startLine": 358,
		"endLine": 363,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/YenShortestPathIterator.java",
		"startLine": 362,
		"endLine": 362,
		"startColumn": 13,
		"endColumn": 60,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/YenShortestPathIterator.java",
		"startLine": 360,
		"endLine": 360,
		"startColumn": 18,
		"endColumn": 23,
		"codeElementType": "VARIABLE_DECLARATION_EXPRESSION",
		"description": "renamed variable declaration",
		"codeElement": "i : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/YenShortestPathIterator.java",
		"startLine": 360,
		"endLine": 365,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/YenShortestPathIterator.java",
		"startLine": 364,
		"endLine": 364,
		"startColumn": 13,
		"endColumn": 60,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c80a509e4e1385275d82a5b6bea2b463f740bd4d",
	"url": "https://github.com/jgrapht/jgrapht/commit/c80a509e4e1385275d82a5b6bea2b463f740bd4d",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "b30b3d569a2fed838dcdf8e03cd0ec99a21409eb",
	"url": "https://github.com/jgrapht/jgrapht/commit/b30b3d569a2fed838dcdf8e03cd0ec99a21409eb",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "dd803fcb448a729ef925fb297607a351f7655033",
	"url": "https://github.com/jgrapht/jgrapht/commit/dd803fcb448a729ef925fb297607a351f7655033",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "6a0d1420c79b2afca11a3dc43979e06f098d885c",
	"url": "https://github.com/jgrapht/jgrapht/commit/6a0d1420c79b2afca11a3dc43979e06f098d885c",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "cd96dc7b5cb5f4ee908af11fe06bceeb0a831fd3",
	"url": "https://github.com/jgrapht/jgrapht/commit/cd96dc7b5cb5f4ee908af11fe06bceeb0a831fd3",
	"refactorings": [{
	"type": "Invert Condition",
	"description": "Invert Condition if(discTime.get(source) < discTimeCutpoint || discTime.get(target) < discTimeCutpoint) to if(discTime.get(source) < discTimeCutpoint && discTime.get(target) < discTimeCutpoint) in method private buildBlock(discTimeCutpoint int) : void from class org.jgrapht.alg.connectivity.BiconnectivityInspector",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/BiconnectivityInspector.java",
		"startLine": 285,
		"endLine": 286,
		"startColumn": 13,
		"endColumn": 23,
		"codeElementType": "IF_STATEMENT",
		"description": "original conditional",
		"codeElement": "if(discTime.get(source) < discTimeCutpoint || discTime.get(target) < discTimeCutpoint)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/BiconnectivityInspector.java",
		"startLine": 272,
		"endLine": 292,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private buildBlock(discTimeCutpoint int) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/BiconnectivityInspector.java",
		"startLine": 285,
		"endLine": 286,
		"startColumn": 13,
		"endColumn": 23,
		"codeElementType": "IF_STATEMENT",
		"description": "inverted conditional",
		"codeElement": "if(discTime.get(source) < discTimeCutpoint && discTime.get(target) < discTimeCutpoint)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/BiconnectivityInspector.java",
		"startLine": 272,
		"endLine": 292,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with inverted conditional",
		"codeElement": "private buildBlock(discTimeCutpoint int) : void"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "962a86545a77638154a43e6c04fb9c72d35b0f9a",
	"url": "https://github.com/jgrapht/jgrapht/commit/962a86545a77638154a43e6c04fb9c72d35b0f9a",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "51c12ce943415963ec128b0f7c8f67f8aacff19a",
	"url": "https://github.com/jgrapht/jgrapht/commit/51c12ce943415963ec128b0f7c8f67f8aacff19a",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c934e0c8a682425822fb0b2c7eda7ad5ff6ebcaf",
	"url": "https://github.com/jgrapht/jgrapht/commit/c934e0c8a682425822fb0b2c7eda7ad5ff6ebcaf",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "577148b3d5945317f11882cb7ec40d59eb183a1b",
	"url": "https://github.com/jgrapht/jgrapht/commit/577148b3d5945317f11882cb7ec40d59eb183a1b",
	"refactorings": [{
	"type": "Extract Method",
	"description": "Extract Method protected selectOutgoingEdges(vertex V) : Set<E> extracted from private addUnseenChildrenOf(vertex V) : void in class org.jgrapht.traverse.CrossComponentIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 311,
		"endLine": 326,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private addUnseenChildrenOf(vertex V) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 313,
		"endLine": 313,
		"startColumn": 23,
		"endColumn": 52,
		"codeElementType": "ENHANCED_FOR_STATEMENT_EXPRESSION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 311,
		"endLine": 321,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "protected selectOutgoingEdges(vertex V) : Set<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 320,
		"endLine": 320,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 323,
		"endLine": 338,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private addUnseenChildrenOf(vertex V) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/CrossComponentIterator.java",
		"startLine": 325,
		"endLine": 325,
		"startColumn": 23,
		"endColumn": 50,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "selectOutgoingEdges(vertex)"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "1004207a01468ef7e157e3b3713f232ce769e48b",
	"url": "https://github.com/jgrapht/jgrapht/commit/1004207a01468ef7e157e3b3713f232ce769e48b",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "8322ba9e1012f9c789b8aaa11911b4f8a8f3092e",
	"url": "https://github.com/jgrapht/jgrapht/commit/8322ba9e1012f9c789b8aaa11911b4f8a8f3092e",
	"refactorings": [{
	"type": "Move And Rename Class",
	"description": "Move And Rename Class org.jgrapht.traverse.LexBreadthFirstIteratorTest.MyTraversalListener moved and renamed to org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 202,
		"endLine": 231,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.traverse.LexBreadthFirstIteratorTest.MyTraversalListener"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 30,
		"endLine": 70,
		"startColumn": 0,
		"endColumn": 0,
		"codeElementType": "TYPE_DECLARATION",
		"description": "moved and renamed type declaration",
		"codeElement": "org.jgrapht.traverse.VertexTrackingTraversalListener"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type listener : LexBreadthFirstIteratorTest.MyTraversalListener<StatefulVertex,StatefulEdge> to listener : VertexTrackingTraversalListener<StatefulVertex,StatefulEdge> in method public testEdgeSelectionOverride() : void from class org.jgrapht.traverse.EdgeSelectionTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 68,
		"endLine": 69,
		"startColumn": 87,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "listener : LexBreadthFirstIteratorTest.MyTraversalListener<StatefulVertex,StatefulEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 68,
		"endLine": 69,
		"startColumn": 71,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "listener : VertexTrackingTraversalListener<StatefulVertex,StatefulEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type listener : MyTraversalListener<Integer,DefaultEdge> to listener : VertexTrackingTraversalListener<Integer,DefaultEdge> in method public testEvents() : void from class org.jgrapht.traverse.LexBreadthFirstIteratorTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 51,
		"endColumn": 94,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "listener : MyTraversalListener<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 52,
		"endLine": 52,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 51,
		"endLine": 52,
		"startColumn": 63,
		"endColumn": 61,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "listener : VertexTrackingTraversalListener<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type listener : LexBreadthFirstIteratorTest.MyTraversalListener<String,DefaultEdge> to listener : VertexTrackingTraversalListener<String,DefaultEdge> in method public testEvents() : void from class org.jgrapht.traverse.MaximumCardinalityIteratorTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 47,
		"endLine": 48,
		"startColumn": 78,
		"endColumn": 73,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "listener : LexBreadthFirstIteratorTest.MyTraversalListener<String,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 47,
		"endLine": 48,
		"startColumn": 62,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "listener : VertexTrackingTraversalListener<String,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Class Access Modifier",
	"description": "Change Class Access Modifier package to public in class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 202,
		"endLine": 231,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.traverse.LexBreadthFirstIteratorTest.MyTraversalListener"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 30,
		"endLine": 70,
		"startColumn": 0,
		"endColumn": 0,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with changed access modifier",
		"codeElement": "org.jgrapht.traverse.VertexTrackingTraversalListener"
}]
},
{
	"type": "Remove Class Modifier",
	"description": "Remove Class Modifier static in class org.jgrapht.traverse.LexBreadthFirstIteratorTest.MyTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 202,
		"endLine": 231,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.traverse.LexBreadthFirstIteratorTest.MyTraversalListener"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 30,
		"endLine": 70,
		"startColumn": 0,
		"endColumn": 0,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with removed modifier",
		"codeElement": "org.jgrapht.traverse.VertexTrackingTraversalListener"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to private in attribute private verticesTraversed : Set<V> from class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 209,
		"endLine": 209,
		"startColumn": 16,
		"endColumn": 51,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package verticesTraversed : Set<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 20,
		"endColumn": 55,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "private verticesTraversed : Set<V>"
}]
},
{
	"type": "Encapsulate Attribute",
	"description": "Encapsulate Attribute private verticesTraversed : Set<V> from class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 209,
		"endLine": 209,
		"startColumn": 16,
		"endColumn": 51,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package verticesTraversed : Set<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 20,
		"endColumn": 55,
		"codeElementType": "FIELD_DECLARATION",
		"description": "encapsulated attribute declaration",
		"codeElement": "private verticesTraversed : Set<V>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 55,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "added getter method",
		"codeElement": "public getVerticesTraversed() : Set<V>"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to private in attribute private verticesFinished : Set<V> from class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 210,
		"endLine": 210,
		"startColumn": 16,
		"endColumn": 50,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package verticesFinished : Set<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 36,
		"endLine": 36,
		"startColumn": 20,
		"endColumn": 54,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "private verticesFinished : Set<V>"
}]
},
{
	"type": "Encapsulate Attribute",
	"description": "Encapsulate Attribute private verticesFinished : Set<V> from class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 210,
		"endLine": 210,
		"startColumn": 16,
		"endColumn": 50,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package verticesFinished : Set<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 36,
		"endLine": 36,
		"startColumn": 20,
		"endColumn": 54,
		"codeElementType": "FIELD_DECLARATION",
		"description": "encapsulated attribute declaration",
		"codeElement": "private verticesFinished : Set<V>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 59,
		"endLine": 61,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "added getter method",
		"codeElement": "public getVerticesFinished() : Set<V>"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to private in attribute private graph : Graph<V,E> from class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 211,
		"endLine": 211,
		"startColumn": 21,
		"endColumn": 26,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package graph : Graph<V,E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 37,
		"endLine": 37,
		"startColumn": 25,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "private graph : Graph<V,E>"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public checkAllVerticesTraversed() : void extracted from public testEdgeSelectionOverride() : void in class org.jgrapht.traverse.EdgeSelectionTest & moved to class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 38,
		"endLine": 79,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testEdgeSelectionOverride() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 76,
		"endLine": 76,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 63,
		"endLine": 65,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public checkAllVerticesTraversed() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 64,
		"endLine": 64,
		"startColumn": 9,
		"endColumn": 60,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 38,
		"endLine": 79,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testEdgeSelectionOverride() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 76,
		"endLine": 76,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "listener.checkAllVerticesTraversed()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public checkAllVerticesTraversed() : void extracted from public testEvents() : void in class org.jgrapht.traverse.LexBreadthFirstIteratorTest & moved to class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 37,
		"endLine": 58,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testEvents() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 56,
		"endLine": 56,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 63,
		"endLine": 65,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public checkAllVerticesTraversed() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 64,
		"endLine": 64,
		"startColumn": 9,
		"endColumn": 60,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 37,
		"endLine": 59,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testEvents() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 57,
		"endLine": 57,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "listener.checkAllVerticesTraversed()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public checkAllVerticesTraversed() : void extracted from public testEvents() : void in class org.jgrapht.traverse.MaximumCardinalityIteratorTest & moved to class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 36,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testEvents() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 55,
		"endLine": 55,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 63,
		"endLine": 65,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public checkAllVerticesTraversed() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 64,
		"endLine": 64,
		"startColumn": 9,
		"endColumn": 60,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 36,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testEvents() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 55,
		"endLine": 55,
		"startColumn": 9,
		"endColumn": 45,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "listener.checkAllVerticesTraversed()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public checkAllVerticesFinished() : void extracted from public testEdgeSelectionOverride() : void in class org.jgrapht.traverse.EdgeSelectionTest & moved to class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 38,
		"endLine": 79,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testEdgeSelectionOverride() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 77,
		"endLine": 77,
		"startColumn": 9,
		"endColumn": 68,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 67,
		"endLine": 69,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public checkAllVerticesFinished() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 38,
		"endLine": 79,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testEdgeSelectionOverride() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/EdgeSelectionTest.java",
		"startLine": 77,
		"endLine": 77,
		"startColumn": 9,
		"endColumn": 44,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "listener.checkAllVerticesFinished()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public checkAllVerticesFinished() : void extracted from public testEvents() : void in class org.jgrapht.traverse.LexBreadthFirstIteratorTest & moved to class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 37,
		"endLine": 58,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testEvents() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 57,
		"endLine": 57,
		"startColumn": 9,
		"endColumn": 68,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 67,
		"endLine": 69,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public checkAllVerticesFinished() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 37,
		"endLine": 59,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testEvents() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/LexBreadthFirstIteratorTest.java",
		"startLine": 58,
		"endLine": 58,
		"startColumn": 9,
		"endColumn": 44,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "listener.checkAllVerticesFinished()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public checkAllVerticesFinished() : void extracted from public testEvents() : void in class org.jgrapht.traverse.MaximumCardinalityIteratorTest & moved to class org.jgrapht.traverse.VertexTrackingTraversalListener",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 36,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testEvents() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 56,
		"endLine": 56,
		"startColumn": 9,
		"endColumn": 68,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 67,
		"endLine": 69,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public checkAllVerticesFinished() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/VertexTrackingTraversalListener.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 36,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testEvents() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/traverse/MaximumCardinalityIteratorTest.java",
		"startLine": 56,
		"endLine": 56,
		"startColumn": 9,
		"endColumn": 44,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "listener.checkAllVerticesFinished()"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "abff48b9b135b351a86a48ecd2df9b0cc8df9880",
	"url": "https://github.com/jgrapht/jgrapht/commit/abff48b9b135b351a86a48ecd2df9b0cc8df9880",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c03125901fc3b8aad4454495cb19df8bdb549217",
	"url": "https://github.com/jgrapht/jgrapht/commit/c03125901fc3b8aad4454495cb19df8bdb549217",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "8cb918c06c80077b4a20e4aca5f9ab3695cc1936",
	"url": "https://github.com/jgrapht/jgrapht/commit/8cb918c06c80077b4a20e4aca5f9ab3695cc1936",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "f2e059a2cae1fc5a7e1b2f7f44e97fde27167b88",
	"url": "https://github.com/jgrapht/jgrapht/commit/f2e059a2cae1fc5a7e1b2f7f44e97fde27167b88",
	"refactorings": [{
	"type": "Extract Method",
	"description": "Extract Method private analyzeCircuits() : void extracted from public findSimpleCycles() : List<List<V>> in class org.jgrapht.alg.cycle.HawickJamesSimpleCycles",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 266,
		"endLine": 292,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public findSimpleCycles() : List<List<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 281,
		"endLine": 281,
		"startColumn": 17,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 282,
		"endLine": 282,
		"startColumn": 17,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 285,
		"endLine": 285,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 286,
		"endLine": 286,
		"startColumn": 13,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 280,
		"endLine": 283,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 279,
		"endLine": 287,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 280,
		"endLine": 283,
		"startColumn": 49,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 279,
		"endLine": 287,
		"startColumn": 45,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 280,
		"endLine": 291,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private analyzeCircuits() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 284,
		"endLine": 284,
		"startColumn": 17,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 285,
		"endLine": 285,
		"startColumn": 17,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 288,
		"endLine": 288,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 289,
		"endLine": 289,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 283,
		"endLine": 286,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 282,
		"endLine": 290,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 283,
		"endLine": 286,
		"startColumn": 49,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 282,
		"endLine": 290,
		"startColumn": 45,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 221,
		"endLine": 239,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public findSimpleCycles() : List<List<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 235,
		"endLine": 235,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "analyzeCircuits()"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private analyzeCircuits() : void extracted from public printSimpleCycles() : void in class org.jgrapht.alg.cycle.HawickJamesSimpleCycles",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 294,
		"endLine": 317,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public printSimpleCycles() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 308,
		"endLine": 308,
		"startColumn": 17,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 309,
		"endLine": 309,
		"startColumn": 17,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 312,
		"endLine": 312,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 313,
		"endLine": 313,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 307,
		"endLine": 310,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 306,
		"endLine": 314,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 307,
		"endLine": 310,
		"startColumn": 49,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 306,
		"endLine": 314,
		"startColumn": 45,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 280,
		"endLine": 291,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private analyzeCircuits() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 284,
		"endLine": 284,
		"startColumn": 17,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 285,
		"endLine": 285,
		"startColumn": 17,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 288,
		"endLine": 288,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 289,
		"endLine": 289,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 283,
		"endLine": 286,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 282,
		"endLine": 290,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 283,
		"endLine": 286,
		"startColumn": 49,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 282,
		"endLine": 290,
		"startColumn": 45,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 241,
		"endLine": 259,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public printSimpleCycles() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 257,
		"endLine": 257,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "analyzeCircuits()"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private analyzeCircuits() : void extracted from public countSimpleCycles() : long in class org.jgrapht.alg.cycle.HawickJamesSimpleCycles",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 319,
		"endLine": 345,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public countSimpleCycles() : long"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 334,
		"endLine": 334,
		"startColumn": 17,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 335,
		"endLine": 335,
		"startColumn": 17,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 338,
		"endLine": 338,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 339,
		"endLine": 339,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 333,
		"endLine": 336,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 332,
		"endLine": 340,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 333,
		"endLine": 336,
		"startColumn": 49,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 332,
		"endLine": 340,
		"startColumn": 45,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 280,
		"endLine": 291,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private analyzeCircuits() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 284,
		"endLine": 284,
		"startColumn": 17,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 285,
		"endLine": 285,
		"startColumn": 17,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 288,
		"endLine": 288,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 289,
		"endLine": 289,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 283,
		"endLine": 286,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 282,
		"endLine": 290,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 283,
		"endLine": 286,
		"startColumn": 49,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 282,
		"endLine": 290,
		"startColumn": 45,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 261,
		"endLine": 278,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public countSimpleCycles() : long"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 275,
		"endLine": 275,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "analyzeCircuits()"
}]
},
{
	"type": "Remove Parameter",
	"description": "Remove Parameter o : Operation in method private initState(o Operation) : void from class org.jgrapht.alg.cycle.HawickJamesSimpleCycles",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 93,
		"endLine": 93,
		"startColumn": 28,
		"endColumn": 39,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "removed parameter",
		"codeElement": "o : Operation"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 92,
		"endLine": 118,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private initState(o Operation) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 87,
		"endLine": 109,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed parameter",
		"codeElement": "private initState() : void"
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter o : Operation to steps : int in method private circuit(v Integer, steps int) : boolean from class org.jgrapht.alg.cycle.HawickJamesSimpleCycles",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 40,
		"endColumn": 51,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "o : Operation"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 184,
		"endLine": 186,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 40,
		"endColumn": 49,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "steps : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 158,
		"endLine": 160,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type o : Operation to steps : int in method private circuit(v Integer, steps int) : boolean from class org.jgrapht.alg.cycle.HawickJamesSimpleCycles",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 40,
		"endColumn": 51,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "o : Operation"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 184,
		"endLine": 186,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 40,
		"endColumn": 49,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "steps : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/HawickJamesSimpleCycles.java",
		"startLine": 158,
		"endLine": 160,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "dd57918644704201f560201332447976285bafa8",
	"url": "https://github.com/jgrapht/jgrapht/commit/dd57918644704201f560201332447976285bafa8",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "03349716e717fb31fe78d4949a88e2dce4ecf35b",
	"url": "https://github.com/jgrapht/jgrapht/commit/03349716e717fb31fe78d4949a88e2dce4ecf35b",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "aa87a4c85eba87805a5953257f9591b17b6bb178",
	"url": "https://github.com/jgrapht/jgrapht/commit/aa87a4c85eba87805a5953257f9591b17b6bb178",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "5c607dcaa26d1e70159b01f15c2a4d479a4b0ede",
	"url": "https://github.com/jgrapht/jgrapht/commit/5c607dcaa26d1e70159b01f15c2a4d479a4b0ede",
	"refactorings": [{
	"type": "Change Variable Type",
	"description": "Change Variable Type graph : Graph to graph : Graph<Integer,DefaultEdge> in method public testRequireIsWeighted() : void from class org.jgrapht.GraphTestsTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/GraphTestsTest.java",
		"startLine": 474,
		"endLine": 474,
		"startColumn": 15,
		"endColumn": 78,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "graph : Graph"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/GraphTestsTest.java",
		"startLine": 475,
		"endLine": 475,
		"startColumn": 9,
		"endColumn": 64,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/GraphTestsTest.java",
		"startLine": 545,
		"endLine": 545,
		"startColumn": 37,
		"endColumn": 100,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "graph : Graph<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/GraphTestsTest.java",
		"startLine": 546,
		"endLine": 546,
		"startColumn": 9,
		"endColumn": 64,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type Flow to Flow<E> in method public getFlow() : Flow<E> from class org.jgrapht.alg.interfaces.FlowAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/FlowAlgorithm.java",
		"startLine": 38,
		"endLine": 38,
		"startColumn": 13,
		"endColumn": 17,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "Flow"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/FlowAlgorithm.java",
		"startLine": 33,
		"endLine": 41,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getFlow() : Flow"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/FlowAlgorithm.java",
		"startLine": 38,
		"endLine": 38,
		"startColumn": 13,
		"endColumn": 20,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "Flow<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/FlowAlgorithm.java",
		"startLine": 33,
		"endLine": 41,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public getFlow() : Flow<E>"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "e251aa503e4c88ba53a36080bc8761752f7b7789",
	"url": "https://github.com/jgrapht/jgrapht/commit/e251aa503e4c88ba53a36080bc8761752f7b7789",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "79b395dcfc942bf79c826cb079ae3eff9815fab6",
	"url": "https://github.com/jgrapht/jgrapht/commit/79b395dcfc942bf79c826cb079ae3eff9815fab6",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "d52f543f8d11d57605d91c364167caa23a7bd0d5",
	"url": "https://github.com/jgrapht/jgrapht/commit/d52f543f8d11d57605d91c364167caa23a7bd0d5",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "28325c0642f1145aa3dc493e88c3564193ca6160",
	"url": "https://github.com/jgrapht/jgrapht/commit/28325c0642f1145aa3dc493e88c3564193ca6160",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "e6b8744ac1a760426680f2e2dfe2f8fc3bbe6d70",
	"url": "https://github.com/jgrapht/jgrapht/commit/e6b8744ac1a760426680f2e2dfe2f8fc3bbe6d70",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "7d0c491b5ab5497e9672e7af3a1e52755aee8fb9",
	"url": "https://github.com/jgrapht/jgrapht/commit/7d0c491b5ab5497e9672e7af3a1e52755aee8fb9",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "05ce23191dd4a1bfe7b504d43dac5a477da2670b",
	"url": "https://github.com/jgrapht/jgrapht/commit/05ce23191dd4a1bfe7b504d43dac5a477da2670b",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "7cec1f9606f2574d3c3ce037df16947c20363a3f",
	"url": "https://github.com/jgrapht/jgrapht/commit/7cec1f9606f2574d3c3ce037df16947c20363a3f",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "227d1e9ea1ef1b34eb01915622c5a3de18f06910",
	"url": "https://github.com/jgrapht/jgrapht/commit/227d1e9ea1ef1b34eb01915622c5a3de18f06910",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "a8e7fddd579cce683313a312c7ca9d753bcbd0bc",
	"url": "https://github.com/jgrapht/jgrapht/commit/a8e7fddd579cce683313a312c7ca9d753bcbd0bc",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "67f4906814b6357aa5f90420f12fd7e8dffe5b6e",
	"url": "https://github.com/jgrapht/jgrapht/commit/67f4906814b6357aa5f90420f12fd7e8dffe5b6e",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "044d0ad8f5251675ba6f028d927384353e6950b2",
	"url": "https://github.com/jgrapht/jgrapht/commit/044d0ad8f5251675ba6f028d927384353e6950b2",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "6199d07f84bded47d2514c212462d0f697bedca1",
	"url": "https://github.com/jgrapht/jgrapht/commit/6199d07f84bded47d2514c212462d0f697bedca1",
	"refactorings": [{
	"type": "Rename Parameter",
	"description": "Rename Parameter partitionOne : int to partitionA : int in method public CompleteBipartiteGraphGenerator(partitionA int, partitionB int) from class org.jgrapht.generate.CompleteBipartiteGraphGenerator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 46,
		"endLine": 46,
		"startColumn": 44,
		"endColumn": 60,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "partitionOne : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 48,
		"endLine": 50,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 47,
		"endLine": 47,
		"startColumn": 44,
		"endColumn": 58,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "partitionA : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 52,
		"endLine": 52,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 49,
		"endLine": 51,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter partitionTwo : int to partitionB : int in method public CompleteBipartiteGraphGenerator(partitionA int, partitionB int) from class org.jgrapht.generate.CompleteBipartiteGraphGenerator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 46,
		"endLine": 46,
		"startColumn": 62,
		"endColumn": 78,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "partitionTwo : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 52,
		"endLine": 52,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 48,
		"endLine": 50,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 47,
		"endLine": 47,
		"startColumn": 60,
		"endColumn": 74,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "partitionB : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 49,
		"endLine": 51,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Replace Variable With Attribute",
	"description": "Replace Variable With Attribute a : Set<V> to partitionA : Set<V> in method public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void from class org.jgrapht.generate.CompleteBipartiteGraphGenerator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 66,
		"endLine": 66,
		"startColumn": 16,
		"endColumn": 35,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "a : Set<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 76,
		"endLine": 80,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 39,
		"endLine": 39,
		"startColumn": 26,
		"endColumn": 36,
		"codeElementType": "FIELD_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "partitionA : Set<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 86,
		"endLine": 86,
		"startColumn": 13,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 93,
		"endLine": 97,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Replace Variable With Attribute",
	"description": "Replace Variable With Attribute b : Set<V> to partitionB : Set<V> in method public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void from class org.jgrapht.generate.CompleteBipartiteGraphGenerator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 67,
		"endLine": 67,
		"startColumn": 16,
		"endColumn": 35,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "b : Set<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 72,
		"endLine": 72,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 77,
		"endLine": 79,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 39,
		"endLine": 39,
		"startColumn": 38,
		"endColumn": 48,
		"codeElementType": "FIELD_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "partitionB : Set<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 13,
		"endColumn": 48,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 94,
		"endLine": 96,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "2f614d3617060ac99f10303bbe0eca3b81df6383",
	"url": "https://github.com/jgrapht/jgrapht/commit/2f614d3617060ac99f10303bbe0eca3b81df6383",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "a49dc581ed2ce0bd5872c11ce534ebfcabaecd43",
	"url": "https://github.com/jgrapht/jgrapht/commit/a49dc581ed2ce0bd5872c11ce534ebfcabaecd43",
	"refactorings": [{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type forwardFrontier : BaseSearchFrontier to forwardFrontier : BaseSearchFrontier<V,E> in method protected createPath(forwardFrontier BaseSearchFrontier<V,E>, backwardFrontier BaseSearchFrontier<V,E>, weight double, source V, commonVertex V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 61,
		"endLine": 61,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "forwardFrontier : BaseSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 80,
		"endLine": 80,
		"startColumn": 13,
		"endColumn": 71,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 61,
		"endLine": 61,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "forwardFrontier : BaseSearchFrontier<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 80,
		"endLine": 80,
		"startColumn": 13,
		"endColumn": 71,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type backwardFrontier : BaseSearchFrontier to backwardFrontier : BaseSearchFrontier<V,E> in method protected createPath(forwardFrontier BaseSearchFrontier<V,E>, backwardFrontier BaseSearchFrontier<V,E>, weight double, source V, commonVertex V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 61,
		"endLine": 61,
		"startColumn": 45,
		"endColumn": 80,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "backwardFrontier : BaseSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 87,
		"endLine": 87,
		"startColumn": 13,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 94,
		"endLine": 94,
		"startColumn": 13,
		"endColumn": 72,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 61,
		"endLine": 61,
		"startColumn": 51,
		"endColumn": 92,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "backwardFrontier : BaseSearchFrontier<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 87,
		"endLine": 87,
		"startColumn": 13,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 94,
		"endLine": 94,
		"startColumn": 13,
		"endColumn": 72,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Add Class Modifier",
	"description": "Add Class Modifier static in class org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm.BaseSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 101,
		"endLine": 137,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm.BaseSearchFrontier"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BaseBidirectionalShortestPathAlgorithm.java",
		"startLine": 101,
		"endLine": 140,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added modifier",
		"codeElement": "org.jgrapht.alg.shortestpath.BaseBidirectionalShortestPathAlgorithm.BaseSearchFrontier"
}]
},
{
	"type": "Inline Variable",
	"description": "Inline Variable e : E in method package getTreeEdge(v V) : E from class org.jgrapht.alg.shortestpath.BidirectionalAStarShortestPath.AStarSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalAStarShortestPath.java",
		"startLine": 295,
		"endLine": 295,
		"startColumn": 15,
		"endColumn": 34,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "inlined variable declaration",
		"codeElement": "e : E"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalAStarShortestPath.java",
		"startLine": 299,
		"endLine": 299,
		"startColumn": 17,
		"endColumn": 26,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement with the name of the inlined variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalAStarShortestPath.java",
		"startLine": 295,
		"endLine": 295,
		"startColumn": 13,
		"endColumn": 36,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement with the initializer of the inlined variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type backwardFrontier : DijkstraSearchFrontier to backwardFrontier : DijkstraSearchFrontier<V,E> in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 32,
		"endColumn": 48,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "backwardFrontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 9,
		"endColumn": 57,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 201,
		"endLine": 202,
		"startColumn": 13,
		"endColumn": 98,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 9,
		"endColumn": 65,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 37,
		"endColumn": 53,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "backwardFrontier : DijkstraSearchFrontier<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 9,
		"endColumn": 57,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 201,
		"endLine": 202,
		"startColumn": 13,
		"endColumn": 98,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type frontier : DijkstraSearchFrontier to frontier : DijkstraSearchFrontier<V,E> in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 158,
		"endLine": 158,
		"startColumn": 32,
		"endColumn": 58,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "frontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 171,
		"endLine": 171,
		"startColumn": 13,
		"endColumn": 89,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 176,
		"endLine": 176,
		"startColumn": 17,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 178,
		"endLine": 178,
		"startColumn": 17,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 180,
		"endLine": 180,
		"startColumn": 17,
		"endColumn": 68,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 193,
		"endLine": 193,
		"startColumn": 13,
		"endColumn": 59,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 163,
		"endLine": 168,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 175,
		"endLine": 190,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 158,
		"endLine": 158,
		"startColumn": 37,
		"endColumn": 63,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "frontier : DijkstraSearchFrontier<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 171,
		"endLine": 171,
		"startColumn": 13,
		"endColumn": 89,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 176,
		"endLine": 176,
		"startColumn": 17,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 178,
		"endLine": 178,
		"startColumn": 17,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 180,
		"endLine": 180,
		"startColumn": 17,
		"endColumn": 68,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 193,
		"endLine": 193,
		"startColumn": 13,
		"endColumn": 64,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 163,
		"endLine": 168,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 175,
		"endLine": 190,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type otherFrontier : DijkstraSearchFrontier to otherFrontier : DijkstraSearchFrontier<V,E> in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 32,
		"endColumn": 64,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "otherFrontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 183,
		"endLine": 183,
		"startColumn": 17,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 195,
		"endLine": 195,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 163,
		"endLine": 168,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 37,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "otherFrontier : DijkstraSearchFrontier<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 183,
		"endLine": 183,
		"startColumn": 17,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 195,
		"endLine": 195,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 163,
		"endLine": 168,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type tmpFrontier : DijkstraSearchFrontier to tmpFrontier : DijkstraSearchFrontier<V,E> in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 193,
		"endLine": 193,
		"startColumn": 36,
		"endColumn": 58,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "tmpFrontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 195,
		"endLine": 195,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 193,
		"endLine": 193,
		"startColumn": 41,
		"endColumn": 63,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "tmpFrontier : DijkstraSearchFrontier<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 195,
		"endLine": 195,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type forwardFrontier : DijkstraSearchFrontier to forwardFrontier : DijkstraSearchFrontier<V,E> in method public getPath(source V, sink V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 32,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "forwardFrontier : DijkstraSearchFrontier"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 151,
		"endLine": 151,
		"startColumn": 9,
		"endColumn": 58,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 201,
		"endLine": 202,
		"startColumn": 13,
		"endColumn": 98,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 158,
		"endLine": 158,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 37,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "forwardFrontier : DijkstraSearchFrontier<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 151,
		"endLine": 151,
		"startColumn": 9,
		"endColumn": 58,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 201,
		"endLine": 202,
		"startColumn": 13,
		"endColumn": 98,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 158,
		"endLine": 158,
		"startColumn": 9,
		"endColumn": 64,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Add Class Modifier",
	"description": "Add Class Modifier static in class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 208,
		"endLine": 261,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 208,
		"endLine": 264,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added modifier",
		"codeElement": "org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier"
}]
},
{
	"type": "Add Parameter",
	"description": "Add Parameter heapSupplier : Supplier<AddressableHeap<Double,Pair<V,E>>> in method package DijkstraSearchFrontier(graph Graph<V,E>, heapSupplier Supplier<AddressableHeap<Double,Pair<V,E>>>) from class org.jgrapht.alg.shortestpath.BidirectionalDijkstraShortestPath.DijkstraSearchFrontier",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 219,
		"endLine": 224,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package DijkstraSearchFrontier(graph Graph<V,E>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 222,
		"endLine": 222,
		"startColumn": 51,
		"endColumn": 109,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "heapSupplier : Supplier<AddressableHeap<Double,Pair<V,E>>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/BidirectionalDijkstraShortestPath.java",
		"startLine": 222,
		"endLine": 227,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "package DijkstraSearchFrontier(graph Graph<V,E>, heapSupplier Supplier<AddressableHeap<Double,Pair<V,E>>>)"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "af7bbe3847120385eb34d173418b970d1ae350c4",
	"url": "https://github.com/jgrapht/jgrapht/commit/af7bbe3847120385eb34d173418b970d1ae350c4",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "f1074be07a554d27bda1be699b87ee031e4d0af8",
	"url": "https://github.com/jgrapht/jgrapht/commit/f1074be07a554d27bda1be699b87ee031e4d0af8",
	"refactorings": [{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.alg.matching.EdmondsMaximumCardinalityMatching renamed to org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatching",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatching.java",
		"startLine": 29,
		"endLine": 692,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.matching.EdmondsMaximumCardinalityMatching"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatching.java",
		"startLine": 29,
		"endLine": 692,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatching"
}]
},
{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.alg.matching.EdmondsMaximumCardinalityMatchingTest renamed to org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 32,
		"endLine": 1179,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.matching.EdmondsMaximumCardinalityMatchingTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 32,
		"endLine": 1179,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest"
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter g : Graph<V,E> to graph : Graph<V,E> in method public PageRank(graph Graph<V,E>) from class org.jgrapht.alg.scoring.PageRank",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 21,
		"endColumn": 34,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "g : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 9,
		"endColumn": 84,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 21,
		"endColumn": 38,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "graph : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 117,
		"endLine": 117,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter g : Graph<V,E> to graph : Graph<V,E> in method public PageRank(graph Graph<V,E>, dampingFactor double) from class org.jgrapht.alg.scoring.PageRank",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 99,
		"endLine": 99,
		"startColumn": 21,
		"endColumn": 34,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "g : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 101,
		"endLine": 101,
		"startColumn": 9,
		"endColumn": 75,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 21,
		"endColumn": 38,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "graph : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 128,
		"endLine": 128,
		"startColumn": 9,
		"endColumn": 79,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter g : Graph<V,E> to graph : Graph<V,E> in method public PageRank(graph Graph<V,E>, dampingFactor double, maxIterations int) from class org.jgrapht.alg.scoring.PageRank",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 21,
		"endColumn": 34,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "g : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 113,
		"endLine": 113,
		"startColumn": 9,
		"endColumn": 66,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 21,
		"endColumn": 38,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "graph : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter g : Graph<V,E> to graph : Graph<V,E> in method public PageRank(graph Graph<V,E>, dampingFactor double, maxIterations int, tolerance double) from class org.jgrapht.alg.scoring.PageRank",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 21,
		"endColumn": 34,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "g : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 9,
		"endColumn": 20,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 21,
		"endColumn": 38,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "graph : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 9,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Attribute",
	"description": "Rename Attribute g : Graph<V,E> to graph : Graph<V,E> in class org.jgrapht.alg.scoring.PageRank",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 80,
		"endLine": 80,
		"startColumn": 31,
		"endColumn": 32,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "g : Graph<V,E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/scoring/PageRank.java",
		"startLine": 87,
		"endLine": 87,
		"startColumn": 31,
		"endColumn": 36,
		"codeElementType": "FIELD_DECLARATION",
		"description": "renamed attribute declaration",
		"codeElement": "graph : Graph<V,E>"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @SuppressWarnings(\"unlikely-arg-type\") in method public hasElement(e E) : boolean from class org.jgrapht.alg.util.Pair",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 104,
		"endLine": 120,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public hasElement(e E) : boolean"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 5,
		"endColumn": 43,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@SuppressWarnings(\"unlikely-arg-type\")"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/util/Pair.java",
		"startLine": 100,
		"endLine": 117,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public hasElement(e E) : boolean"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<V,E> to matcher : DenseEdmondsMaximumCardinalityMatching<V,E> in method private verifyMatching(g Graph<V,E>, m MatchingAlgorithm.Matching<V,E>, cardinality int) : void from class org.jgrapht.alg.matching.MaximumCardinalityBipartiteMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumCardinalityBipartiteMatchingTest.java",
		"startLine": 235,
		"endLine": 236,
		"startColumn": 49,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<V,E>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumCardinalityBipartiteMatchingTest.java",
		"startLine": 237,
		"endLine": 237,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumCardinalityBipartiteMatchingTest.java",
		"startLine": 235,
		"endLine": 236,
		"startColumn": 54,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<V,E>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumCardinalityBipartiteMatchingTest.java",
		"startLine": 237,
		"endLine": 237,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.AbstractBaseExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/AbstractBaseExporter.java",
		"startLine": 22,
		"endLine": 107,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.AbstractBaseExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/AbstractBaseExporter.java",
		"startLine": 31,
		"endLine": 31,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/AbstractBaseExporter.java",
		"startLine": 22,
		"endLine": 109,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.AbstractBaseExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.AbstractBaseImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/AbstractBaseImporter.java",
		"startLine": 24,
		"endLine": 167,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.AbstractBaseImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/AbstractBaseImporter.java",
		"startLine": 33,
		"endLine": 33,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/AbstractBaseImporter.java",
		"startLine": 24,
		"endLine": 169,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.AbstractBaseImporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.Attribute",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/Attribute.java",
		"startLine": 20,
		"endLine": 41,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.Attribute"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/Attribute.java",
		"startLine": 26,
		"endLine": 26,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/Attribute.java",
		"startLine": 20,
		"endLine": 43,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.Attribute"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.AttributeType",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/AttributeType.java",
		"startLine": 20,
		"endLine": 85,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "ENUM_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.AttributeType"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/AttributeType.java",
		"startLine": 26,
		"endLine": 26,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/AttributeType.java",
		"startLine": 20,
		"endLine": 87,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "ENUM_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.AttributeType"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.BaseListenableImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/BaseListenableImporter.java",
		"startLine": 25,
		"endLine": 149,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.BaseListenableImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/BaseListenableImporter.java",
		"startLine": 38,
		"endLine": 38,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/BaseListenableImporter.java",
		"startLine": 25,
		"endLine": 151,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.BaseListenableImporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.CSVExporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/CSVExporterTest.java",
		"startLine": 28,
		"endLine": 497,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.CSVExporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/CSVExporterTest.java",
		"startLine": 33,
		"endLine": 33,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/CSVExporterTest.java",
		"startLine": 28,
		"endLine": 498,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.CSVExporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.CSVFormat",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/CSVFormat.java",
		"startLine": 20,
		"endLine": 194,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "ENUM_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.CSVFormat"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/CSVFormat.java",
		"startLine": 158,
		"endLine": 158,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/CSVFormat.java",
		"startLine": 20,
		"endLine": 195,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "ENUM_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.CSVFormat"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.CSVImporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/CSVImporterTest.java",
		"startLine": 28,
		"endLine": 681,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.CSVImporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/CSVImporterTest.java",
		"startLine": 32,
		"endLine": 32,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/CSVImporterTest.java",
		"startLine": 28,
		"endLine": 682,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.CSVImporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.ComponentAttributeProvider",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ComponentAttributeProvider.java",
		"startLine": 22,
		"endLine": 40,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.ComponentAttributeProvider"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ComponentAttributeProvider.java",
		"startLine": 30,
		"endLine": 30,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ComponentAttributeProvider.java",
		"startLine": 22,
		"endLine": 42,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.ComponentAttributeProvider"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.ComponentNameProvider",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ComponentNameProvider.java",
		"startLine": 20,
		"endLine": 37,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.ComponentNameProvider"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ComponentNameProvider.java",
		"startLine": 26,
		"endLine": 26,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ComponentNameProvider.java",
		"startLine": 20,
		"endLine": 39,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.ComponentNameProvider"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.ComponentUpdater",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ComponentUpdater.java",
		"startLine": 22,
		"endLine": 37,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.ComponentUpdater"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ComponentUpdater.java",
		"startLine": 29,
		"endLine": 29,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ComponentUpdater.java",
		"startLine": 22,
		"endLine": 39,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.ComponentUpdater"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DIMACSExporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DIMACSExporterTest.java",
		"startLine": 28,
		"endLine": 260,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DIMACSExporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DIMACSExporterTest.java",
		"startLine": 33,
		"endLine": 33,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DIMACSExporterTest.java",
		"startLine": 28,
		"endLine": 261,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DIMACSExporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DIMACSFormat",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DIMACSFormat.java",
		"startLine": 20,
		"endLine": 131,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "ENUM_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DIMACSFormat"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DIMACSFormat.java",
		"startLine": 31,
		"endLine": 31,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DIMACSFormat.java",
		"startLine": 20,
		"endLine": 133,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "ENUM_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DIMACSFormat"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DIMACSImporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DIMACSImporterTest.java",
		"startLine": 29,
		"endLine": 210,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DIMACSImporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DIMACSImporterTest.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DIMACSImporterTest.java",
		"startLine": 29,
		"endLine": 211,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DIMACSImporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DOTExporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTExporterTest.java",
		"startLine": 30,
		"endLine": 247,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DOTExporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTExporterTest.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTExporterTest.java",
		"startLine": 30,
		"endLine": 248,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DOTExporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DOTImporter1Test",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTImporter1Test.java",
		"startLine": 29,
		"endLine": 634,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DOTImporter1Test"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTImporter1Test.java",
		"startLine": 32,
		"endLine": 32,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTImporter1Test.java",
		"startLine": 29,
		"endLine": 635,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DOTImporter1Test"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DOTUtilsTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTUtilsTest.java",
		"startLine": 25,
		"endLine": 51,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DOTUtilsTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTUtilsTest.java",
		"startLine": 25,
		"endLine": 25,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTUtilsTest.java",
		"startLine": 25,
		"endLine": 52,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DOTUtilsTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DSVUtilsTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DSVUtilsTest.java",
		"startLine": 24,
		"endLine": 74,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DSVUtilsTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DSVUtilsTest.java",
		"startLine": 29,
		"endLine": 29,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DSVUtilsTest.java",
		"startLine": 24,
		"endLine": 75,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DSVUtilsTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DefaultAttribute",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DefaultAttribute.java",
		"startLine": 22,
		"endLine": 181,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DefaultAttribute"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DefaultAttribute.java",
		"startLine": 30,
		"endLine": 30,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DefaultAttribute.java",
		"startLine": 22,
		"endLine": 183,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DefaultAttribute"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.EdgeProvider",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/EdgeProvider.java",
		"startLine": 22,
		"endLine": 41,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.EdgeProvider"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/EdgeProvider.java",
		"startLine": 29,
		"endLine": 29,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/EdgeProvider.java",
		"startLine": 22,
		"endLine": 43,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.EdgeProvider"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.EmptyComponentAttributeProvider",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/EmptyComponentAttributeProvider.java",
		"startLine": 22,
		"endLine": 40,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.EmptyComponentAttributeProvider"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/EmptyComponentAttributeProvider.java",
		"startLine": 30,
		"endLine": 30,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/EmptyComponentAttributeProvider.java",
		"startLine": 22,
		"endLine": 42,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.EmptyComponentAttributeProvider"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.ExportException",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ExportException.java",
		"startLine": 20,
		"endLine": 83,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.ExportException"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ExportException.java",
		"startLine": 25,
		"endLine": 25,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ExportException.java",
		"startLine": 20,
		"endLine": 86,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.ExportException"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GmlExporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GmlExporterTest.java",
		"startLine": 28,
		"endLine": 405,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GmlExporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GmlExporterTest.java",
		"startLine": 32,
		"endLine": 32,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GmlExporterTest.java",
		"startLine": 28,
		"endLine": 406,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GmlExporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GmlImporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GmlImporterTest.java",
		"startLine": 28,
		"endLine": 864,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GmlImporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GmlImporterTest.java",
		"startLine": 33,
		"endLine": 33,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GmlImporterTest.java",
		"startLine": 28,
		"endLine": 865,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GmlImporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.Graph6Sparse6ExporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/Graph6Sparse6ExporterTest.java",
		"startLine": 32,
		"endLine": 261,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.Graph6Sparse6ExporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/Graph6Sparse6ExporterTest.java",
		"startLine": 43,
		"endLine": 43,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/Graph6Sparse6ExporterTest.java",
		"startLine": 38,
		"endLine": 268,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.Graph6Sparse6ExporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.Graph6Sparse6ImporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/Graph6Sparse6ImporterTest.java",
		"startLine": 32,
		"endLine": 344,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.Graph6Sparse6ImporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/Graph6Sparse6ImporterTest.java",
		"startLine": 37,
		"endLine": 37,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/Graph6Sparse6ImporterTest.java",
		"startLine": 32,
		"endLine": 345,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.Graph6Sparse6ImporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GraphExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphExporter.java",
		"startLine": 25,
		"endLine": 74,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GraphExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphExporter.java",
		"startLine": 32,
		"endLine": 32,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphExporter.java",
		"startLine": 25,
		"endLine": 76,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GraphExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GraphImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphImporter.java",
		"startLine": 25,
		"endLine": 75,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GraphImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphImporter.java",
		"startLine": 32,
		"endLine": 32,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphImporter.java",
		"startLine": 25,
		"endLine": 77,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GraphImporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GraphMLExporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GraphMLExporterTest.java",
		"startLine": 33,
		"endLine": 671,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GraphMLExporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GraphMLExporterTest.java",
		"startLine": 37,
		"endLine": 37,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GraphMLExporterTest.java",
		"startLine": 33,
		"endLine": 672,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GraphMLExporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GraphMLImporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GraphMLImporterTest.java",
		"startLine": 30,
		"endLine": 1104,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GraphMLImporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GraphMLImporterTest.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/GraphMLImporterTest.java",
		"startLine": 30,
		"endLine": 1107,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GraphMLImporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.ImportException",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ImportException.java",
		"startLine": 20,
		"endLine": 83,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.ImportException"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ImportException.java",
		"startLine": 24,
		"endLine": 24,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/ImportException.java",
		"startLine": 20,
		"endLine": 85,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.ImportException"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.IntegerComponentNameProviderTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/IntegerComponentNameProviderTest.java",
		"startLine": 24,
		"endLine": 63,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.IntegerComponentNameProviderTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/IntegerComponentNameProviderTest.java",
		"startLine": 29,
		"endLine": 29,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/IntegerComponentNameProviderTest.java",
		"startLine": 24,
		"endLine": 64,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.IntegerComponentNameProviderTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.JSONExporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/JSONExporterTest.java",
		"startLine": 32,
		"endLine": 288,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.JSONExporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/JSONExporterTest.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/JSONExporterTest.java",
		"startLine": 32,
		"endLine": 289,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.JSONExporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.JSONImporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/JSONImporterTest.java",
		"startLine": 31,
		"endLine": 491,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.JSONImporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/JSONImporterTest.java",
		"startLine": 36,
		"endLine": 36,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/JSONImporterTest.java",
		"startLine": 31,
		"endLine": 492,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.JSONImporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.LemonExporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/LemonExporterTest.java",
		"startLine": 28,
		"endLine": 206,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.LemonExporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/LemonExporterTest.java",
		"startLine": 33,
		"endLine": 33,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/LemonExporterTest.java",
		"startLine": 28,
		"endLine": 207,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.LemonExporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.MatrixExporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/MatrixExporterTest.java",
		"startLine": 28,
		"endLine": 117,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.MatrixExporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/MatrixExporterTest.java",
		"startLine": 33,
		"endLine": 33,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/MatrixExporterTest.java",
		"startLine": 28,
		"endLine": 118,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.MatrixExporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.SimpleGraphMLImporterTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/SimpleGraphMLImporterTest.java",
		"startLine": 34,
		"endLine": 357,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.SimpleGraphMLImporterTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/SimpleGraphMLImporterTest.java",
		"startLine": 37,
		"endLine": 37,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/SimpleGraphMLImporterTest.java",
		"startLine": 34,
		"endLine": 365,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.SimpleGraphMLImporterTest"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.StringComponentNameProvider",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/StringComponentNameProvider.java",
		"startLine": 20,
		"endLine": 44,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.StringComponentNameProvider"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/StringComponentNameProvider.java",
		"startLine": 29,
		"endLine": 29,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/StringComponentNameProvider.java",
		"startLine": 20,
		"endLine": 46,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.StringComponentNameProvider"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.VertexProvider",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/VertexProvider.java",
		"startLine": 22,
		"endLine": 37,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.VertexProvider"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/VertexProvider.java",
		"startLine": 28,
		"endLine": 28,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/VertexProvider.java",
		"startLine": 22,
		"endLine": 39,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.VertexProvider"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.VisioExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/VisioExporter.java",
		"startLine": 24,
		"endLine": 119,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.VisioExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/VisioExporter.java",
		"startLine": 44,
		"endLine": 44,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/VisioExporter.java",
		"startLine": 24,
		"endLine": 121,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.VisioExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.CSVExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/CSVExporter.java",
		"startLine": 25,
		"endLine": 287,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.CSVExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/CSVExporter.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/CSVExporter.java",
		"startLine": 25,
		"endLine": 289,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.CSVExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.CSVImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/CSVImporter.java",
		"startLine": 28,
		"endLine": 567,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.CSVImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/CSVImporter.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/CSVImporter.java",
		"startLine": 28,
		"endLine": 569,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.CSVImporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DIMACSExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DIMACSExporter.java",
		"startLine": 25,
		"endLine": 175,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DIMACSExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DIMACSExporter.java",
		"startLine": 40,
		"endLine": 40,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DIMACSExporter.java",
		"startLine": 25,
		"endLine": 177,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DIMACSExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DIMACSImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DIMACSImporter.java",
		"startLine": 25,
		"endLine": 242,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DIMACSImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DIMACSImporter.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DIMACSImporter.java",
		"startLine": 25,
		"endLine": 244,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DIMACSImporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DOTExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DOTExporter.java",
		"startLine": 27,
		"endLine": 400,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DOTExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DOTExporter.java",
		"startLine": 44,
		"endLine": 44,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DOTExporter.java",
		"startLine": 27,
		"endLine": 402,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DOTExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DOTImporter2Test",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTImporter2Test.java",
		"startLine": 30,
		"endLine": 690,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DOTImporter2Test"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTImporter2Test.java",
		"startLine": 33,
		"endLine": 33,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/test/java/org/jgrapht/io/DOTImporter2Test.java",
		"startLine": 30,
		"endLine": 691,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DOTImporter2Test"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DOTImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DOTImporter.java",
		"startLine": 29,
		"endLine": 848,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DOTImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DOTImporter.java",
		"startLine": 46,
		"endLine": 46,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DOTImporter.java",
		"startLine": 29,
		"endLine": 854,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DOTImporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DOTUtils",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DOTUtils.java",
		"startLine": 22,
		"endLine": 60,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DOTUtils"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DOTUtils.java",
		"startLine": 28,
		"endLine": 28,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DOTUtils.java",
		"startLine": 22,
		"endLine": 62,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DOTUtils"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.DSVUtils",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DSVUtils.java",
		"startLine": 20,
		"endLine": 108,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.DSVUtils"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DSVUtils.java",
		"startLine": 31,
		"endLine": 31,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/DSVUtils.java",
		"startLine": 20,
		"endLine": 110,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.DSVUtils"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GmlExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GmlExporter.java",
		"startLine": 26,
		"endLine": 232,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GmlExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GmlExporter.java",
		"startLine": 44,
		"endLine": 44,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GmlExporter.java",
		"startLine": 26,
		"endLine": 234,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GmlExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GmlImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GmlImporter.java",
		"startLine": 30,
		"endLine": 500,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GmlImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GmlImporter.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GmlImporter.java",
		"startLine": 38,
		"endLine": 511,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GmlImporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.Graph6Sparse6Exporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/Graph6Sparse6Exporter.java",
		"startLine": 25,
		"endLine": 235,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.Graph6Sparse6Exporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/Graph6Sparse6Exporter.java",
		"startLine": 47,
		"endLine": 47,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/Graph6Sparse6Exporter.java",
		"startLine": 25,
		"endLine": 237,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.Graph6Sparse6Exporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.Graph6Sparse6Importer",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/Graph6Sparse6Importer.java",
		"startLine": 25,
		"endLine": 326,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.Graph6Sparse6Importer"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/Graph6Sparse6Importer.java",
		"startLine": 41,
		"endLine": 41,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/Graph6Sparse6Importer.java",
		"startLine": 25,
		"endLine": 328,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.Graph6Sparse6Importer"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GraphMLExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphMLExporter.java",
		"startLine": 31,
		"endLine": 664,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GraphMLExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphMLExporter.java",
		"startLine": 46,
		"endLine": 46,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphMLExporter.java",
		"startLine": 31,
		"endLine": 666,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GraphMLExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.GraphMLImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphMLImporter.java",
		"startLine": 33,
		"endLine": 668,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.GraphMLImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphMLImporter.java",
		"startLine": 120,
		"endLine": 120,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/GraphMLImporter.java",
		"startLine": 33,
		"endLine": 679,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.GraphMLImporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.IntegerComponentNameProvider",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/IntegerComponentNameProvider.java",
		"startLine": 22,
		"endLine": 88,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.IntegerComponentNameProvider"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/IntegerComponentNameProvider.java",
		"startLine": 35,
		"endLine": 35,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/IntegerComponentNameProvider.java",
		"startLine": 24,
		"endLine": 92,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.IntegerComponentNameProvider"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.JSONExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/JSONExporter.java",
		"startLine": 26,
		"endLine": 276,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.JSONExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/JSONExporter.java",
		"startLine": 54,
		"endLine": 54,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/JSONExporter.java",
		"startLine": 26,
		"endLine": 278,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.JSONExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.JSONImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/JSONImporter.java",
		"startLine": 31,
		"endLine": 504,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.JSONImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/JSONImporter.java",
		"startLine": 94,
		"endLine": 94,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/JSONImporter.java",
		"startLine": 43,
		"endLine": 520,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.JSONImporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.LemonExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/LemonExporter.java",
		"startLine": 26,
		"endLine": 183,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.LemonExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/LemonExporter.java",
		"startLine": 39,
		"endLine": 39,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/LemonExporter.java",
		"startLine": 26,
		"endLine": 185,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.LemonExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.MatrixExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/MatrixExporter.java",
		"startLine": 26,
		"endLine": 258,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.MatrixExporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/MatrixExporter.java",
		"startLine": 50,
		"endLine": 50,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/MatrixExporter.java",
		"startLine": 32,
		"endLine": 266,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.MatrixExporter"
}]
},
{
	"type": "Add Class Annotation",
	"description": "Add Class Annotation @Deprecated in class org.jgrapht.io.SimpleGraphMLImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/SimpleGraphMLImporter.java",
		"startLine": 32,
		"endLine": 568,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.io.SimpleGraphMLImporter"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/SimpleGraphMLImporter.java",
		"startLine": 129,
		"endLine": 129,
		"startColumn": 0,
		"endColumn": 12,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Deprecated"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/io/SimpleGraphMLImporter.java",
		"startLine": 32,
		"endLine": 570,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added annotation",
		"codeElement": "org.jgrapht.io.SimpleGraphMLImporter"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testDisconnectedGraph() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 50,
		"endLine": 51,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 52,
		"endLine": 52,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 54,
		"endLine": 54,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 50,
		"endLine": 51,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 52,
		"endLine": 52,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 54,
		"endLine": 54,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testPseudoGraph() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 69,
		"endLine": 70,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 69,
		"endLine": 70,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testGraph15() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 87,
		"endLine": 88,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 87,
		"endLine": 88,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testGraph14() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 106,
		"endLine": 107,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 108,
		"endLine": 108,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 106,
		"endLine": 107,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 108,
		"endLine": 108,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testGraph13() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 123,
		"endLine": 124,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 123,
		"endLine": 124,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testGraph12() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 140,
		"endLine": 141,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 142,
		"endLine": 142,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 143,
		"endLine": 143,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 140,
		"endLine": 141,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 142,
		"endLine": 142,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 143,
		"endLine": 143,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testGraph11() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 157,
		"endLine": 158,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 160,
		"endLine": 160,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 157,
		"endLine": 158,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 160,
		"endLine": 160,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testIsMaximumMatching4() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 174,
		"endLine": 175,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 180,
		"endLine": 180,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 185,
		"endLine": 185,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 174,
		"endLine": 175,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 180,
		"endLine": 180,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 185,
		"endLine": 185,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testIsMaximumMatching3() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 206,
		"endLine": 207,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 208,
		"endLine": 208,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 209,
		"endLine": 209,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 206,
		"endLine": 207,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 208,
		"endLine": 208,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 209,
		"endLine": 209,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testIsMaximumMatching2() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 231,
		"endLine": 232,
		"startColumn": 65,
		"endColumn": 59,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 233,
		"endLine": 233,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 231,
		"endLine": 232,
		"startColumn": 70,
		"endColumn": 64,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 233,
		"endLine": 233,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testIsMaximum1() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 248,
		"endLine": 249,
		"startColumn": 65,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 250,
		"endLine": 250,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 248,
		"endLine": 249,
		"startColumn": 70,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 250,
		"endLine": 250,
		"startColumn": 9,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testRandomGraphsLarge() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 267,
		"endLine": 268,
		"startColumn": 69,
		"endColumn": 63,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 270,
		"endLine": 270,
		"startColumn": 13,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 272,
		"endLine": 272,
		"startColumn": 13,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 267,
		"endLine": 268,
		"startColumn": 74,
		"endColumn": 68,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 270,
		"endLine": 270,
		"startColumn": 13,
		"endColumn": 70,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 272,
		"endLine": 272,
		"startColumn": 13,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testRandomGraphsSmall() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 290,
		"endLine": 291,
		"startColumn": 77,
		"endColumn": 71,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 292,
		"endLine": 292,
		"startColumn": 21,
		"endColumn": 79,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 293,
		"endLine": 293,
		"startColumn": 21,
		"endColumn": 63,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 290,
		"endLine": 291,
		"startColumn": 82,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 292,
		"endLine": 292,
		"startColumn": 21,
		"endColumn": 79,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 293,
		"endLine": 293,
		"startColumn": 21,
		"endColumn": 63,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge> to matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge> in method public testGraph1() : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 325,
		"endLine": 326,
		"startColumn": 65,
		"endColumn": 59,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 327,
		"endLine": 327,
		"startColumn": 9,
		"endColumn": 58,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 325,
		"endLine": 326,
		"startColumn": 70,
		"endColumn": 64,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<Integer,DefaultEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 327,
		"endLine": 327,
		"startColumn": 9,
		"endColumn": 58,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type matcher : EdmondsMaximumCardinalityMatching<V,E> to matcher : DenseEdmondsMaximumCardinalityMatching<V,E> in method private verifyMatching(g Graph<V,E>, m Matching<V,E>, cardinality int) : void from class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatchingTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 1165,
		"endLine": 1166,
		"startColumn": 49,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "matcher : EdmondsMaximumCardinalityMatching<V,E>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/EdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 1167,
		"endLine": 1167,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 1165,
		"endLine": 1166,
		"startColumn": 54,
		"endColumn": 60,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "matcher : DenseEdmondsMaximumCardinalityMatching<V,E>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatchingTest.java",
		"startLine": 1167,
		"endLine": 1167,
		"startColumn": 9,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "37ed97c2ec5af8d4233673a67a5877fdb5d5ab56",
	"url": "https://github.com/jgrapht/jgrapht/commit/37ed97c2ec5af8d4233673a67a5877fdb5d5ab56",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "fce799fb134b445bdf976193430be621eb98d72f",
	"url": "https://github.com/jgrapht/jgrapht/commit/fce799fb134b445bdf976193430be621eb98d72f",
	"refactorings": [{
	"type": "Replace Generic With Diamond",
	"description": "Replace Generic With Diamond ArrayDeque<V> with ArrayDeque<> in method public UnweightedSpannerAlgorithm() from class org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner.UnweightedSpannerAlgorithm",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 31,
		"endColumn": 74,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "original creation",
		"codeElement": "ArrayDeque<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 148,
		"endLine": 160,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public UnweightedSpannerAlgorithm()"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 31,
		"endColumn": 73,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "creation with diamond operator",
		"codeElement": "ArrayDeque<>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 149,
		"endLine": 161,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with diamond operator",
		"codeElement": "public UnweightedSpannerAlgorithm()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public getNumberOfTriangles(graph Graph<V,E>) : long in class org.jgrapht.GraphMetrics & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/GraphMetrics.java",
		"startLine": 246,
		"endLine": 333,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getNumberOfTriangles(graph Graph<V,E>) : long"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/GraphMetrics.java",
		"startLine": 276,
		"endLine": 276,
		"startColumn": 9,
		"endColumn": 79,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/GraphMetrics.java",
		"startLine": 247,
		"endLine": 335,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getNumberOfTriangles(graph Graph<V,E>) : long"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/GraphMetrics.java",
		"startLine": 278,
		"endLine": 278,
		"startColumn": 13,
		"endColumn": 80,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer> in class org.jgrapht.alg.clique.ChordalGraphMaxCliqueFinder & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/clique/ChordalGraphMaxCliqueFinder.java",
		"startLine": 117,
		"endLine": 133,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/clique/ChordalGraphMaxCliqueFinder.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 9,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/clique/ChordalGraphMaxCliqueFinder.java",
		"startLine": 118,
		"endLine": 135,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/clique/ChordalGraphMaxCliqueFinder.java",
		"startLine": 129,
		"endLine": 129,
		"startColumn": 13,
		"endColumn": 74,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(vertexOrder.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public BrownBacktrackColoring(graph Graph<V,E>) in class org.jgrapht.alg.color.BrownBacktrackColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/BrownBacktrackColoring.java",
		"startLine": 50,
		"endLine": 74,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public BrownBacktrackColoring(graph Graph<V,E>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/BrownBacktrackColoring.java",
		"startLine": 61,
		"endLine": 61,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/BrownBacktrackColoring.java",
		"startLine": 51,
		"endLine": 75,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public BrownBacktrackColoring(graph Graph<V,E>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/BrownBacktrackColoring.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 20,
		"endColumn": 74,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(numVertices)"
}]
},
{
	"type": "Remove Variable Modifier",
	"description": "Remove Variable Modifier final in variable numVertices : int in method public BrownBacktrackColoring(graph Graph<V,E>) from class org.jgrapht.alg.color.BrownBacktrackColoring",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/BrownBacktrackColoring.java",
		"startLine": 58,
		"endLine": 58,
		"startColumn": 19,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "numVertices : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/BrownBacktrackColoring.java",
		"startLine": 50,
		"endLine": 74,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public BrownBacktrackColoring(graph Graph<V,E>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 67,
		"endColumn": 83,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "variable declaration with removed modifier",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed variable modifier",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable numVertices : int to expectedSize : int in method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/BrownBacktrackColoring.java",
		"startLine": 58,
		"endLine": 58,
		"startColumn": 19,
		"endColumn": 57,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "numVertices : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/BrownBacktrackColoring.java",
		"startLine": 61,
		"endLine": 61,
		"startColumn": 9,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 67,
		"endColumn": 83,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private lazyComputeColoring() : void in class org.jgrapht.alg.color.ChordalGraphColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 88,
		"endLine": 113,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private lazyComputeColoring() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 13,
		"endColumn": 92,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 89,
		"endLine": 116,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private lazyComputeColoring() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 98,
		"endLine": 98,
		"startColumn": 17,
		"endColumn": 90,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(perfectEliminationOrder.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer> in class org.jgrapht.alg.color.ChordalGraphColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 115,
		"endLine": 131,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 118,
		"endLine": 135,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 129,
		"endLine": 129,
		"startColumn": 13,
		"endColumn": 74,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(vertexOrder.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public ColoringRepresentation(graph Graph<V,E>, alpha Coloring<V>) in class org.jgrapht.alg.color.ColorRefinementAlgorithm.ColoringRepresentation & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 352,
		"endLine": 373,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public ColoringRepresentation(graph Graph<V,E>, alpha Coloring<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 356,
		"endLine": 356,
		"startColumn": 13,
		"endColumn": 64,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 353,
		"endLine": 374,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public ColoringRepresentation(graph Graph<V,E>, alpha Coloring<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 357,
		"endLine": 357,
		"startColumn": 47,
		"endColumn": 91,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 356,
		"endLine": 356,
		"startColumn": 33,
		"endColumn": 77,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public ColoringRepresentation(graph Graph<V,E>, alpha Coloring<V>) in class org.jgrapht.alg.color.ColorRefinementAlgorithm.ColoringRepresentation & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 352,
		"endLine": 373,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public ColoringRepresentation(graph Graph<V,E>, alpha Coloring<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 355,
		"endLine": 355,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 353,
		"endLine": 374,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public ColoringRepresentation(graph Graph<V,E>, alpha Coloring<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 357,
		"endLine": 357,
		"startColumn": 47,
		"endColumn": 91,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 356,
		"endLine": 356,
		"startColumn": 33,
		"endColumn": 77,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable n : int to expectedSize : int in method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 354,
		"endLine": 354,
		"startColumn": 17,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "n : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 356,
		"endLine": 356,
		"startColumn": 13,
		"endColumn": 64,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 67,
		"endColumn": 83,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable n : int to expectedSize : int in method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/LargestDegreeFirstColoring.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "n : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/LargestDegreeFirstColoring.java",
		"startLine": 65,
		"endLine": 65,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 67,
		"endColumn": 83,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable n : int to expectedSize : int in method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 85,
		"endLine": 85,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "n : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 95,
		"endLine": 95,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 67,
		"endColumn": 83,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable n : int to expectedSize : int in method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SmallestDegreeLastColoring.java",
		"startLine": 66,
		"endLine": 66,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "n : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SmallestDegreeLastColoring.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 51,
		"endLine": 51,
		"startColumn": 67,
		"endColumn": 83,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from protected getVertexOrdering() : Iterable<V> in class org.jgrapht.alg.color.LargestDegreeFirstColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/LargestDegreeFirstColoring.java",
		"startLine": 55,
		"endLine": 106,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "protected getVertexOrdering() : Iterable<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/LargestDegreeFirstColoring.java",
		"startLine": 65,
		"endLine": 65,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/LargestDegreeFirstColoring.java",
		"startLine": 56,
		"endLine": 107,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "protected getVertexOrdering() : Iterable<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/LargestDegreeFirstColoring.java",
		"startLine": 66,
		"endLine": 66,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public getColoring() : Coloring<V> in class org.jgrapht.alg.color.SaturationDegreeColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 75,
		"endLine": 163,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getColoring() : Coloring<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 95,
		"endLine": 95,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 76,
		"endLine": 164,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getColoring() : Coloring<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 38,
		"endColumn": 82,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 36,
		"endColumn": 80,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public getColoring() : Coloring<V> in class org.jgrapht.alg.color.SaturationDegreeColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 75,
		"endLine": 163,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getColoring() : Coloring<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 9,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 76,
		"endLine": 164,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getColoring() : Coloring<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 38,
		"endColumn": 82,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 36,
		"endColumn": 80,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public getColoring() : Coloring<V> in class org.jgrapht.alg.color.SaturationDegreeColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 75,
		"endLine": 163,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getColoring() : Coloring<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 76,
		"endLine": 164,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getColoring() : Coloring<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 38,
		"endColumn": 82,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 36,
		"endColumn": 80,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public getColoring() : Coloring<V> in class org.jgrapht.alg.color.SaturationDegreeColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 75,
		"endLine": 163,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getColoring() : Coloring<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 76,
		"endLine": 164,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getColoring() : Coloring<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 38,
		"endColumn": 82,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 36,
		"endColumn": 80,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SaturationDegreeColoring.java",
		"startLine": 88,
		"endLine": 88,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from protected getVertexOrdering() : Iterable<V> in class org.jgrapht.alg.color.SmallestDegreeLastColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SmallestDegreeLastColoring.java",
		"startLine": 58,
		"endLine": 117,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "protected getVertexOrdering() : Iterable<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SmallestDegreeLastColoring.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SmallestDegreeLastColoring.java",
		"startLine": 59,
		"endLine": 118,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "protected getVertexOrdering() : Iterable<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/SmallestDegreeLastColoring.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private createVertexNumber() : void in class org.jgrapht.alg.connectivity.GabowStrongConnectivityInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/GabowStrongConnectivityInspector.java",
		"startLine": 89,
		"endLine": 100,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private createVertexNumber() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/GabowStrongConnectivityInspector.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/GabowStrongConnectivityInspector.java",
		"startLine": 90,
		"endLine": 101,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private createVertexNumber() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/GabowStrongConnectivityInspector.java",
		"startLine": 93,
		"endLine": 93,
		"startColumn": 32,
		"endColumn": 76,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(c)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private createVertexData() : void in class org.jgrapht.alg.connectivity.KosarajuStrongConnectivityInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/KosarajuStrongConnectivityInspector.java",
		"startLine": 109,
		"endLine": 116,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private createVertexData() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/KosarajuStrongConnectivityInspector.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 86,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/KosarajuStrongConnectivityInspector.java",
		"startLine": 110,
		"endLine": 117,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private createVertexData() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/KosarajuStrongConnectivityInspector.java",
		"startLine": 112,
		"endLine": 112,
		"startColumn": 30,
		"endColumn": 97,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Replace Generic With Diamond",
	"description": "Replace Generic With Diamond HashMap<V,VertexData<V>> with HashMap<> in method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/KosarajuStrongConnectivityInspector.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 30,
		"endColumn": 85,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "original creation",
		"codeElement": "HashMap<V,VertexData<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/connectivity/KosarajuStrongConnectivityInspector.java",
		"startLine": 109,
		"endLine": 116,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private createVertexData() : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 16,
		"endColumn": 60,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "creation with diamond operator",
		"codeElement": "HashMap<>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with diamond operator",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer> in class org.jgrapht.alg.cycle.ChordalGraphMinimalVertexSeparatorFinder & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalGraphMinimalVertexSeparatorFinder.java",
		"startLine": 150,
		"endLine": 166,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalGraphMinimalVertexSeparatorFinder.java",
		"startLine": 160,
		"endLine": 160,
		"startColumn": 9,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalGraphMinimalVertexSeparatorFinder.java",
		"startLine": 151,
		"endLine": 168,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalGraphMinimalVertexSeparatorFinder.java",
		"startLine": 162,
		"endLine": 162,
		"startColumn": 13,
		"endColumn": 74,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(vertexOrder.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer> in class org.jgrapht.alg.cycle.ChordalityInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalityInspector.java",
		"startLine": 241,
		"endLine": 257,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalityInspector.java",
		"startLine": 251,
		"endLine": 251,
		"startColumn": 9,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalityInspector.java",
		"startLine": 242,
		"endLine": 259,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private getVertexInOrder(vertexOrder List<V>) : Map<V,Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalityInspector.java",
		"startLine": 253,
		"endLine": 253,
		"startColumn": 13,
		"endColumn": 74,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(vertexOrder.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private findHole(a V, b V, c V) : void in class org.jgrapht.alg.cycle.ChordalityInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalityInspector.java",
		"startLine": 259,
		"endLine": 290,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private findHole(a V, b V, c V) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalityInspector.java",
		"startLine": 281,
		"endLine": 281,
		"startColumn": 9,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalityInspector.java",
		"startLine": 261,
		"endLine": 293,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private findHole(a V, b V, c V) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/ChordalityInspector.java",
		"startLine": 284,
		"endLine": 284,
		"startColumn": 13,
		"endColumn": 80,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private initMappings() : void in class org.jgrapht.alg.cycle.WeakChordalityInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 120,
		"endLine": 132,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private initMappings() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 121,
		"endLine": 133,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private initMappings() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 19,
		"endColumn": 63,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 20,
		"endColumn": 64,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private initMappings() : void in class org.jgrapht.alg.cycle.WeakChordalityInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 120,
		"endLine": 132,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private initMappings() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 121,
		"endLine": 133,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private initMappings() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 19,
		"endColumn": 63,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 20,
		"endColumn": 64,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private findHole(graph Graph<V,E>, sourceInSeparator V, source V, target V, targetInSeparator V) : GraphPath<V,E> in class org.jgrapht.alg.cycle.WeakChordalityInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 583,
		"endLine": 610,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private findHole(graph Graph<V,E>, sourceInSeparator V, source V, target V, targetInSeparator V) : GraphPath<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 597,
		"endLine": 597,
		"startColumn": 9,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 584,
		"endLine": 612,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private findHole(graph Graph<V,E>, sourceInSeparator V, source V, target V, targetInSeparator V) : GraphPath<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 599,
		"endLine": 599,
		"startColumn": 13,
		"endColumn": 80,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private findSeparators(graph Graph<V,E>, edge E) : List<Set<V>> in class org.jgrapht.alg.cycle.WeakChordalityInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 716,
		"endLine": 755,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private findSeparators(graph Graph<V,E>, edge E) : List<Set<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 731,
		"endLine": 731,
		"startColumn": 9,
		"endColumn": 71,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 718,
		"endLine": 757,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private findSeparators(graph Graph<V,E>, edge E) : List<Set<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 733,
		"endLine": 733,
		"startColumn": 31,
		"endColumn": 98,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private init() : void in class org.jgrapht.alg.flow.mincost.CapacityScalingMinimumCostFlow & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/mincost/CapacityScalingMinimumCostFlow.java",
		"startLine": 283,
		"endLine": 377,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private init() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/mincost/CapacityScalingMinimumCostFlow.java",
		"startLine": 307,
		"endLine": 307,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/mincost/CapacityScalingMinimumCostFlow.java",
		"startLine": 283,
		"endLine": 377,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private init() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/mincost/CapacityScalingMinimumCostFlow.java",
		"startLine": 307,
		"endLine": 307,
		"startColumn": 32,
		"endColumn": 76,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private finish() : MinimumCostFlow<E> in class org.jgrapht.alg.flow.mincost.CapacityScalingMinimumCostFlow & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/mincost/CapacityScalingMinimumCostFlow.java",
		"startLine": 592,
		"endLine": 626,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private finish() : MinimumCostFlow<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/mincost/CapacityScalingMinimumCostFlow.java",
		"startLine": 601,
		"endLine": 601,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/mincost/CapacityScalingMinimumCostFlow.java",
		"startLine": 592,
		"endLine": 626,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private finish() : MinimumCostFlow<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/flow/mincost/CapacityScalingMinimumCostFlow.java",
		"startLine": 601,
		"endLine": 601,
		"startColumn": 34,
		"endColumn": 78,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(m)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private matchVerticesWithSameLabel(root1 V, root2 V, canonicalName Map<V,Integer>[]) : void in class org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 141,
		"endLine": 185,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private matchVerticesWithSameLabel(root1 V, root2 V, canonicalName Map<V,Integer>[]) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 13,
		"endColumn": 80,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 141,
		"endLine": 186,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private matchVerticesWithSameLabel(root1 V, root2 V, canonicalName Map<V,Integer>[]) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 155,
		"endLine": 155,
		"startColumn": 17,
		"endColumn": 77,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(tree1.degreeOf(u))"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private isomorphismExists(root1 V, root2 V) : boolean in class org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 187,
		"endLine": 267,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private isomorphismExists(root1 V, root2 V) : boolean"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 200,
		"endLine": 200,
		"startColumn": 9,
		"endColumn": 68,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 188,
		"endLine": 268,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private isomorphismExists(root1 V, root2 V) : boolean"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 201,
		"endLine": 201,
		"startColumn": 28,
		"endColumn": 95,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(tree2.vertexSet().size())"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 200,
		"endLine": 200,
		"startColumn": 28,
		"endColumn": 95,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(tree1.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private isomorphismExists(root1 V, root2 V) : boolean in class org.jgrapht.alg.isomorphism.AHURootedTreeIsomorphismInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 187,
		"endLine": 267,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private isomorphismExists(root1 V, root2 V) : boolean"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 199,
		"endLine": 199,
		"startColumn": 9,
		"endColumn": 68,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 188,
		"endLine": 268,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private isomorphismExists(root1 V, root2 V) : boolean"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 201,
		"endLine": 201,
		"startColumn": 28,
		"endColumn": 95,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(tree2.vertexSet().size())"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/AHURootedTreeIsomorphismInspector.java",
		"startLine": 200,
		"endLine": 200,
		"startColumn": 28,
		"endColumn": 95,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(tree1.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public compose(otherMapping IsomorphicGraphMapping<V,E>) : IsomorphicGraphMapping<V,E> in class org.jgrapht.alg.isomorphism.IsomorphicGraphMapping & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 305,
		"endLine": 331,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public compose(otherMapping IsomorphicGraphMapping<V,E>) : IsomorphicGraphMapping<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 322,
		"endLine": 322,
		"startColumn": 9,
		"endColumn": 63,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 308,
		"endLine": 334,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public compose(otherMapping IsomorphicGraphMapping<V,E>) : IsomorphicGraphMapping<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 325,
		"endLine": 325,
		"startColumn": 26,
		"endColumn": 90,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(forwardMapping.size())"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 324,
		"endLine": 324,
		"startColumn": 26,
		"endColumn": 90,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(forwardMapping.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public compose(otherMapping IsomorphicGraphMapping<V,E>) : IsomorphicGraphMapping<V,E> in class org.jgrapht.alg.isomorphism.IsomorphicGraphMapping & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 305,
		"endLine": 331,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public compose(otherMapping IsomorphicGraphMapping<V,E>) : IsomorphicGraphMapping<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 321,
		"endLine": 321,
		"startColumn": 9,
		"endColumn": 63,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 308,
		"endLine": 334,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public compose(otherMapping IsomorphicGraphMapping<V,E>) : IsomorphicGraphMapping<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 325,
		"endLine": 325,
		"startColumn": 26,
		"endColumn": 90,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(forwardMapping.size())"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 324,
		"endLine": 324,
		"startColumn": 26,
		"endColumn": 90,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(forwardMapping.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public identity(graph Graph<V,E>) : IsomorphicGraphMapping<V,E> in class org.jgrapht.alg.isomorphism.IsomorphicGraphMapping & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 333,
		"endLine": 353,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public identity(graph Graph<V,E>) : IsomorphicGraphMapping<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 345,
		"endLine": 345,
		"startColumn": 9,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 336,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public identity(graph Graph<V,E>) : IsomorphicGraphMapping<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 348,
		"endLine": 348,
		"startColumn": 26,
		"endColumn": 93,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 347,
		"endLine": 347,
		"startColumn": 26,
		"endColumn": 93,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public identity(graph Graph<V,E>) : IsomorphicGraphMapping<V,E> in class org.jgrapht.alg.isomorphism.IsomorphicGraphMapping & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 333,
		"endLine": 353,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public identity(graph Graph<V,E>) : IsomorphicGraphMapping<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 344,
		"endLine": 344,
		"startColumn": 9,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 336,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public identity(graph Graph<V,E>) : IsomorphicGraphMapping<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 348,
		"endLine": 348,
		"startColumn": 26,
		"endColumn": 93,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/isomorphism/IsomorphicGraphMapping.java",
		"startLine": 347,
		"endLine": 347,
		"startColumn": 26,
		"endColumn": 93,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private initialize() : void in class org.jgrapht.alg.matching.SparseEdmondsMaximumCardinalityMatching.Algorithm & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/SparseEdmondsMaximumCardinalityMatching.java",
		"startLine": 172,
		"endLine": 207,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private initialize() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/SparseEdmondsMaximumCardinalityMatching.java",
		"startLine": 177,
		"endLine": 177,
		"startColumn": 13,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/SparseEdmondsMaximumCardinalityMatching.java",
		"startLine": 173,
		"endLine": 208,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private initialize() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/SparseEdmondsMaximumCardinalityMatching.java",
		"startLine": 178,
		"endLine": 178,
		"startColumn": 35,
		"endColumn": 83,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(nodes)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private initGraph() : double in class org.jgrapht.alg.matching.blossom.v5.BlossomVInitializer & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializer.java",
		"startLine": 194,
		"endLine": 232,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private initGraph() : double"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializer.java",
		"startLine": 204,
		"endLine": 204,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializer.java",
		"startLine": 195,
		"endLine": 233,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private initGraph() : double"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/blossom/v5/BlossomVInitializer.java",
		"startLine": 205,
		"endLine": 205,
		"startColumn": 46,
		"endColumn": 96,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(nodeNum)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public UnweightedSpannerAlgorithm() in class org.jgrapht.alg.spanning.GreedyMultiplicativeSpanner.UnweightedSpannerAlgorithm & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 148,
		"endLine": 160,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public UnweightedSpannerAlgorithm()"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 158,
		"endLine": 158,
		"startColumn": 13,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 149,
		"endLine": 161,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public UnweightedSpannerAlgorithm()"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/GreedyMultiplicativeSpanner.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 30,
		"endColumn": 97,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void in class org.jgrapht.generate.GnpRandomGraphGenerator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomGraphGenerator.java",
		"startLine": 115,
		"endLine": 183,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomGraphGenerator.java",
		"startLine": 136,
		"endLine": 136,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomGraphGenerator.java",
		"startLine": 116,
		"endLine": 184,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomGraphGenerator.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 36,
		"endColumn": 80,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from package BucketList(vertices Collection<V>) in class org.jgrapht.traverse.LexBreadthFirstIterator.BucketList & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/LexBreadthFirstIterator.java",
		"startLine": 194,
		"endLine": 208,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "package BucketList(vertices Collection<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/LexBreadthFirstIterator.java",
		"startLine": 204,
		"endLine": 204,
		"startColumn": 13,
		"endColumn": 56,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/LexBreadthFirstIterator.java",
		"startLine": 195,
		"endLine": 209,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "package BucketList(vertices Collection<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/LexBreadthFirstIterator.java",
		"startLine": 205,
		"endLine": 205,
		"startColumn": 25,
		"endColumn": 83,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(vertices.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public MaximumCardinalityIterator(graph Graph<V,E>) in class org.jgrapht.traverse.MaximumCardinalityIterator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/MaximumCardinalityIterator.java",
		"startLine": 71,
		"endLine": 90,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public MaximumCardinalityIterator(graph Graph<V,E>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/MaximumCardinalityIterator.java",
		"startLine": 84,
		"endLine": 84,
		"startColumn": 13,
		"endColumn": 70,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/MaximumCardinalityIterator.java",
		"startLine": 72,
		"endLine": 91,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public MaximumCardinalityIterator(graph Graph<V,E>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/traverse/MaximumCardinalityIterator.java",
		"startLine": 85,
		"endLine": 85,
		"startColumn": 30,
		"endColumn": 97,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public VertexToIntegerMapping(vertices Set<V>) in class org.jgrapht.util.VertexToIntegerMapping & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 40,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public VertexToIntegerMapping(vertices Set<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 50,
		"endLine": 50,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 40,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public VertexToIntegerMapping(vertices Set<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 50,
		"endLine": 50,
		"startColumn": 21,
		"endColumn": 79,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(vertices.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public VertexToIntegerMapping(vertices List<V>) in class org.jgrapht.util.VertexToIntegerMapping & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 59,
		"endLine": 83,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public VertexToIntegerMapping(vertices List<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 59,
		"endLine": 83,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public VertexToIntegerMapping(vertices List<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 21,
		"endColumn": 79,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(vertices.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public VertexToIntegerMapping(vertices Collection<V>) in class org.jgrapht.util.VertexToIntegerMapping & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 85,
		"endLine": 107,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public VertexToIntegerMapping(vertices Collection<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 85,
		"endLine": 107,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public VertexToIntegerMapping(vertices Collection<V>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/VertexToIntegerMapping.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 21,
		"endColumn": 79,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(vertices.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public isValidDecomposition(graph Graph<V,E>, roots Set<V>, decomposition HeavyPathDecomposition<V,E>) : boolean in class org.jgrapht.alg.decomposition.HeavyPathDecompositionTest & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/decomposition/HeavyPathDecompositionTest.java",
		"startLine": 89,
		"endLine": 185,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public isValidDecomposition(graph Graph<V,E>, roots Set<V>, decomposition HeavyPathDecomposition<V,E>) : boolean"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/decomposition/HeavyPathDecompositionTest.java",
		"startLine": 149,
		"endLine": 149,
		"startColumn": 13,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/decomposition/HeavyPathDecompositionTest.java",
		"startLine": 89,
		"endLine": 186,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public isValidDecomposition(graph Graph<V,E>, roots Set<V>, decomposition HeavyPathDecomposition<V,E>) : boolean"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/decomposition/HeavyPathDecompositionTest.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 17,
		"endColumn": 84,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(graph.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public getVertexMap(state BlossomVState<V,E>) : Map<V,BlossomVNode> in class org.jgrapht.alg.matching.blossom.v5.BlossomVDebugger & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDebugger.java",
		"startLine": 35,
		"endLine": 50,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getVertexMap(state BlossomVState<V,E>) : Map<V,BlossomVNode>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDebugger.java",
		"startLine": 45,
		"endLine": 45,
		"startColumn": 9,
		"endColumn": 71,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDebugger.java",
		"startLine": 36,
		"endLine": 51,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getVertexMap(state BlossomVState<V,E>) : Map<V,BlossomVNode>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDebugger.java",
		"startLine": 46,
		"endLine": 46,
		"startColumn": 42,
		"endColumn": 98,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(state.nodeNum)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public getEdgeMap(state BlossomVState<V,E>) : Map<E,BlossomVEdge> in class org.jgrapht.alg.matching.blossom.v5.BlossomVDebugger & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDebugger.java",
		"startLine": 52,
		"endLine": 67,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getEdgeMap(state BlossomVState<V,E>) : Map<E,BlossomVEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDebugger.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDebugger.java",
		"startLine": 53,
		"endLine": 68,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getEdgeMap(state BlossomVState<V,E>) : Map<E,BlossomVEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/blossom/v5/BlossomVDebugger.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 40,
		"endColumn": 96,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(state.edgeNum)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from private init(g Graph<V,E>, vertexSet Set<V>, edgeSet Set<E>) : void in class org.jgrapht.generate.GnmRandomGraphGeneratorTest.VertexOrdering & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/GnmRandomGraphGeneratorTest.java",
		"startLine": 511,
		"endLine": 544,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private init(g Graph<V,E>, vertexSet Set<V>, edgeSet Set<E>) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/GnmRandomGraphGeneratorTest.java",
		"startLine": 516,
		"endLine": 516,
		"startColumn": 13,
		"endColumn": 69,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/GnmRandomGraphGeneratorTest.java",
		"startLine": 511,
		"endLine": 544,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private init(g Graph<V,E>, vertexSet Set<V>, edgeSet Set<E>) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/GnmRandomGraphGeneratorTest.java",
		"startLine": 516,
		"endLine": 516,
		"startColumn": 37,
		"endColumn": 96,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(vertexSet.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V> extracted from public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void in class org.jgrapht.generate.GnmRandomGraphGenerator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomGraphGenerator.java",
		"startLine": 137,
		"endLine": 233,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomGraphGenerator.java",
		"startLine": 178,
		"endLine": 178,
		"startColumn": 9,
		"endColumn": 53,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 34,
		"endLine": 54,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashMapWithExpectedSize(expectedSize int) : HashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 53,
		"endLine": 53,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomGraphGenerator.java",
		"startLine": 138,
		"endLine": 234,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomGraphGenerator.java",
		"startLine": 179,
		"endLine": 179,
		"startColumn": 36,
		"endColumn": 80,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V> extracted from public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void in class org.jgrapht.generate.GnmRandomBipartiteGraphGenerator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 114,
		"endLine": 193,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 56,
		"endLine": 74,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 115,
		"endLine": 194,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 136,
		"endLine": 136,
		"startColumn": 22,
		"endColumn": 73,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashMapWithExpectedSize(n2)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 131,
		"endLine": 131,
		"startColumn": 22,
		"endColumn": 73,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashMapWithExpectedSize(n1)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V> extracted from public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void in class org.jgrapht.generate.GnmRandomBipartiteGraphGenerator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 114,
		"endLine": 193,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 130,
		"endLine": 130,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 56,
		"endLine": 74,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 115,
		"endLine": 194,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 136,
		"endLine": 136,
		"startColumn": 22,
		"endColumn": 73,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashMapWithExpectedSize(n2)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnmRandomBipartiteGraphGenerator.java",
		"startLine": 131,
		"endLine": 131,
		"startColumn": 22,
		"endColumn": 73,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashMapWithExpectedSize(n1)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V> extracted from public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void in class org.jgrapht.generate.GnpRandomBipartiteGraphGenerator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 112,
		"endLine": 166,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 133,
		"endLine": 133,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 56,
		"endLine": 74,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 113,
		"endLine": 167,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 22,
		"endColumn": 73,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashMapWithExpectedSize(n2)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 129,
		"endLine": 129,
		"startColumn": 22,
		"endColumn": 73,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashMapWithExpectedSize(n1)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V> extracted from public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void in class org.jgrapht.generate.GnpRandomBipartiteGraphGenerator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 112,
		"endLine": 166,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 128,
		"endLine": 128,
		"startColumn": 9,
		"endColumn": 46,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 56,
		"endLine": 74,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 113,
		"endLine": 167,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 22,
		"endColumn": 73,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashMapWithExpectedSize(n2)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/GnpRandomBipartiteGraphGenerator.java",
		"startLine": 129,
		"endLine": 129,
		"startColumn": 22,
		"endColumn": 73,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashMapWithExpectedSize(n1)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V> extracted from public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void in class org.jgrapht.generate.WattsStrogatzGraphGenerator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/WattsStrogatzGraphGenerator.java",
		"startLine": 140,
		"endLine": 193,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/WattsStrogatzGraphGenerator.java",
		"startLine": 159,
		"endLine": 159,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 56,
		"endLine": 74,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashMapWithExpectedSize(expectedSize int) : LinkedHashMap<K,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 73,
		"endLine": 73,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/WattsStrogatzGraphGenerator.java",
		"startLine": 141,
		"endLine": 194,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public generateGraph(target Graph<V,E>, resultMap Map<String,V>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/WattsStrogatzGraphGenerator.java",
		"startLine": 160,
		"endLine": 160,
		"startColumn": 31,
		"endColumn": 81,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashMapWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> extracted from private lazyComputeColoring() : void in class org.jgrapht.alg.color.ChordalGraphColoring & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 88,
		"endLine": 113,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private lazyComputeColoring() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 100,
		"endLine": 100,
		"startColumn": 17,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 76,
		"endLine": 93,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashSetWithExpectedSize(expectedSize int) : HashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 89,
		"endLine": 116,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private lazyComputeColoring() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ChordalGraphColoring.java",
		"startLine": 103,
		"endLine": 103,
		"startColumn": 21,
		"endColumn": 83,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashSetWithExpectedSize(predecessors.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> extracted from private computeCoConnectedComponents(graph Graph<V,E>, separator List<Pair<Integer,Integer>>) : List<List<Integer>> in class org.jgrapht.alg.cycle.WeakChordalityInspector & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 379,
		"endLine": 437,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private computeCoConnectedComponents(graph Graph<V,E>, separator List<Pair<Integer,Integer>>) : List<List<Integer>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 400,
		"endLine": 400,
		"startColumn": 9,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 76,
		"endLine": 93,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashSetWithExpectedSize(expectedSize int) : HashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 380,
		"endLine": 438,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private computeCoConnectedComponents(graph Graph<V,E>, separator List<Pair<Integer,Integer>>) : List<List<Integer>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/cycle/WeakChordalityInspector.java",
		"startLine": 401,
		"endLine": 401,
		"startColumn": 34,
		"endColumn": 93,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashSetWithExpectedSize(separator.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> extracted from private SimpleMatching(n int) in class org.jgrapht.alg.matching.DenseEdmondsMaximumCardinalityMatching.SimpleMatching & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatching.java",
		"startLine": 629,
		"endLine": 636,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private SimpleMatching(n int)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatching.java",
		"startLine": 632,
		"endLine": 632,
		"startColumn": 13,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 76,
		"endLine": 93,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashSetWithExpectedSize(expectedSize int) : HashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatching.java",
		"startLine": 630,
		"endLine": 637,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private SimpleMatching(n int)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatching.java",
		"startLine": 633,
		"endLine": 633,
		"startColumn": 28,
		"endColumn": 72,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashSetWithExpectedSize(n)"
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter n : int to expectedSize : int in method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatching.java",
		"startLine": 629,
		"endLine": 629,
		"startColumn": 32,
		"endColumn": 37,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "n : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/matching/DenseEdmondsMaximumCardinalityMatching.java",
		"startLine": 632,
		"endLine": 632,
		"startColumn": 13,
		"endColumn": 45,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 61,
		"endColumn": 77,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> extracted from public getSpanningTree() : SpanningTree<E> in class org.jgrapht.alg.spanning.PrimMinimumSpanningTree & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 60,
		"endLine": 124,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getSpanningTree() : SpanningTree<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 67,
		"endLine": 67,
		"startColumn": 9,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 76,
		"endLine": 93,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashSetWithExpectedSize(expectedSize int) : HashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 60,
		"endLine": 125,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getSpanningTree() : SpanningTree<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/spanning/PrimMinimumSpanningTree.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 13,
		"endColumn": 76,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashSetWithExpectedSize(g.vertexSet().size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> extracted from public getTour(graph Graph<V,E>) : GraphPath<V,E> in class org.jgrapht.alg.tour.ChristofidesThreeHalvesApproxMetricTSP & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/ChristofidesThreeHalvesApproxMetricTSP.java",
		"startLine": 87,
		"endLine": 170,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getTour(graph Graph<V,E>) : GraphPath<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/ChristofidesThreeHalvesApproxMetricTSP.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 76,
		"endLine": 93,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashSetWithExpectedSize(expectedSize int) : HashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/ChristofidesThreeHalvesApproxMetricTSP.java",
		"startLine": 88,
		"endLine": 171,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getTour(graph Graph<V,E>) : GraphPath<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/ChristofidesThreeHalvesApproxMetricTSP.java",
		"startLine": 151,
		"endLine": 151,
		"startColumn": 26,
		"endColumn": 70,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashSetWithExpectedSize(n)"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable n : int to expectedSize : int in method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/ChristofidesThreeHalvesApproxMetricTSP.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "n : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/ChristofidesThreeHalvesApproxMetricTSP.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 9,
		"endColumn": 43,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 61,
		"endColumn": 77,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable n : int to expectedSize : int in method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoApproxMetricTSP.java",
		"startLine": 108,
		"endLine": 108,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "n : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoApproxMetricTSP.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 9,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 61,
		"endColumn": 77,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> extracted from public getTour(graph Graph<V,E>) : GraphPath<V,E> in class org.jgrapht.alg.tour.TwoApproxMetricTSP & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoApproxMetricTSP.java",
		"startLine": 63,
		"endLine": 137,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getTour(graph Graph<V,E>) : GraphPath<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoApproxMetricTSP.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 9,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 76,
		"endLine": 93,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashSetWithExpectedSize(expectedSize int) : HashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoApproxMetricTSP.java",
		"startLine": 64,
		"endLine": 138,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getTour(graph Graph<V,E>) : GraphPath<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoApproxMetricTSP.java",
		"startLine": 110,
		"endLine": 110,
		"startColumn": 24,
		"endColumn": 68,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashSetWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newHashSetWithExpectedSize(expectedSize int) : HashSet<E> extracted from private init(g Graph<V,E>, vertexSet Set<V>, edgeSet Set<E>) : void in class org.jgrapht.generate.GnmRandomGraphGeneratorTest.VertexOrdering & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/GnmRandomGraphGeneratorTest.java",
		"startLine": 511,
		"endLine": 544,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private init(g Graph<V,E>, vertexSet Set<V>, edgeSet Set<E>) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/GnmRandomGraphGeneratorTest.java",
		"startLine": 530,
		"endLine": 530,
		"startColumn": 13,
		"endColumn": 65,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 76,
		"endLine": 93,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newHashSetWithExpectedSize(expectedSize int) : HashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 61,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/GnmRandomGraphGeneratorTest.java",
		"startLine": 511,
		"endLine": 544,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private init(g Graph<V,E>, vertexSet Set<V>, edgeSet Set<E>) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/GnmRandomGraphGeneratorTest.java",
		"startLine": 530,
		"endLine": 530,
		"startColumn": 35,
		"endColumn": 92,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newHashSetWithExpectedSize(edgeSet.size())"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> extracted from private calculateColorDegrees(refiningColor int, rep ColoringRepresentation) : Set<Integer> in class org.jgrapht.alg.color.ColorRefinementAlgorithm & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 110,
		"endLine": 160,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private calculateColorDegrees(refiningColor int, rep ColoringRepresentation) : Set<Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 95,
		"endLine": 112,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 111,
		"endLine": 161,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private calculateColorDegrees(refiningColor int, rep ColoringRepresentation) : Set<Integer>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 39,
		"endColumn": 89,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(n)"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable n : int to expectedSize : int in method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 120,
		"endLine": 120,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "n : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/color/ColorRefinementAlgorithm.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 9,
		"endColumn": 62,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 73,
		"endColumn": 89,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> extracted from public CompleteBipartiteGraphGenerator(partitionA int, partitionB int) in class org.jgrapht.generate.CompleteBipartiteGraphGenerator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 41,
		"endLine": 56,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public CompleteBipartiteGraphGenerator(partitionA int, partitionB int)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 55,
		"endLine": 55,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 95,
		"endLine": 112,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 42,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public CompleteBipartiteGraphGenerator(partitionA int, partitionB int)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 56,
		"endLine": 56,
		"startColumn": 27,
		"endColumn": 81,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(sizeB)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 55,
		"endLine": 55,
		"startColumn": 27,
		"endColumn": 81,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(sizeA)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> extracted from public CompleteBipartiteGraphGenerator(partitionA int, partitionB int) in class org.jgrapht.generate.CompleteBipartiteGraphGenerator & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 41,
		"endLine": 56,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public CompleteBipartiteGraphGenerator(partitionA int, partitionB int)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 54,
		"endLine": 54,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 95,
		"endLine": 112,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 42,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public CompleteBipartiteGraphGenerator(partitionA int, partitionB int)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 56,
		"endLine": 56,
		"startColumn": 27,
		"endColumn": 81,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(sizeB)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/CompleteBipartiteGraphGenerator.java",
		"startLine": 55,
		"endLine": 55,
		"startColumn": 27,
		"endColumn": 81,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(sizeA)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> extracted from public testGetCommunities() : void in class org.jgrapht.generate.PlantedPartitionGraphGeneratorTest & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/PlantedPartitionGraphGeneratorTest.java",
		"startLine": 304,
		"endLine": 326,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testGetCommunities() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/PlantedPartitionGraphGeneratorTest.java",
		"startLine": 314,
		"endLine": 314,
		"startColumn": 13,
		"endColumn": 64,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 95,
		"endLine": 112,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/PlantedPartitionGraphGeneratorTest.java",
		"startLine": 304,
		"endLine": 326,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testGetCommunities() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/PlantedPartitionGraphGeneratorTest.java",
		"startLine": 314,
		"endLine": 314,
		"startColumn": 40,
		"endColumn": 90,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(k)"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable k : int to expectedSize : int in method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/PlantedPartitionGraphGeneratorTest.java",
		"startLine": 308,
		"endLine": 308,
		"startColumn": 13,
		"endColumn": 19,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "k : int"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/generate/PlantedPartitionGraphGeneratorTest.java",
		"startLine": 314,
		"endLine": 314,
		"startColumn": 13,
		"endColumn": 64,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 73,
		"endColumn": 89,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> extracted from public testRandomGraphs() : void in class org.jgrapht.alg.flow.PadbergRaoOddMinimumCutsetTest & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/PadbergRaoOddMinimumCutsetTest.java",
		"startLine": 185,
		"endLine": 228,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public testRandomGraphs() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/PadbergRaoOddMinimumCutsetTest.java",
		"startLine": 219,
		"endLine": 219,
		"startColumn": 17,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 95,
		"endLine": 112,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/PadbergRaoOddMinimumCutsetTest.java",
		"startLine": 185,
		"endLine": 229,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public testRandomGraphs() : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/PadbergRaoOddMinimumCutsetTest.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 21,
		"endColumn": 85,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(nrOfOddVertices)"
}]
},
{
	"type": "Parameterize Variable",
	"description": "Parameterize Variable nrOfOddVertices : int to expectedSize : int in method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> from class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/PadbergRaoOddMinimumCutsetTest.java",
		"startLine": 212,
		"endLine": 212,
		"startColumn": 21,
		"endColumn": 98,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "nrOfOddVertices : int"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/flow/PadbergRaoOddMinimumCutsetTest.java",
		"startLine": 219,
		"endLine": 219,
		"startColumn": 17,
		"endColumn": 81,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 73,
		"endColumn": 89,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "expectedSize : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> extracted from private testRandomInstance(rng Random, n int, p double, repeat int) : void in class org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 169,
		"endLine": 254,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private testRandomInstance(rng Random, n int, p double, repeat int) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 176,
		"endLine": 176,
		"startColumn": 13,
		"endColumn": 62,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 95,
		"endLine": 112,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 170,
		"endLine": 255,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private testRandomInstance(rng Random, n int, p double, repeat int) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 183,
		"endLine": 183,
		"startColumn": 39,
		"endColumn": 89,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 177,
		"endLine": 177,
		"startColumn": 39,
		"endColumn": 89,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(n)"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E> extracted from private testRandomInstance(rng Random, n int, p double, repeat int) : void in class org.jgrapht.alg.matching.MaximumWeightBipartiteMatchingTest & moved to class org.jgrapht.util.CollectionUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 169,
		"endLine": 254,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "private testRandomInstance(rng Random, n int, p double, repeat int) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 176,
		"endLine": 176,
		"startColumn": 13,
		"endColumn": 62,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 95,
		"endLine": 112,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public newLinkedHashSetWithExpectedSize(expectedSize int) : LinkedHashSet<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/CollectionUtil.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 67,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 170,
		"endLine": 255,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "private testRandomInstance(rng Random, n int, p double, repeat int) : void"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 183,
		"endLine": 183,
		"startColumn": 39,
		"endColumn": 89,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(n)"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/matching/MaximumWeightBipartiteMatchingTest.java",
		"startLine": 177,
		"endLine": 177,
		"startColumn": 39,
		"endColumn": 89,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "CollectionUtil.newLinkedHashSetWithExpectedSize(n)"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "f3ce3d8fdd04a5425a4270e0d9c249c5c1084f0e",
	"url": "https://github.com/jgrapht/jgrapht/commit/f3ce3d8fdd04a5425a4270e0d9c249c5c1084f0e",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "2870fd415c62db9a25a25a0f280f90744a20c336",
	"url": "https://github.com/jgrapht/jgrapht/commit/2870fd415c62db9a25a25a0f280f90744a20c336",
	"refactorings": [{
	"type": "Add Parameter",
	"description": "Add Parameter contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>> in method package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 337,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 329,
		"endLine": 329,
		"startColumn": 39,
		"endColumn": 103,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 338,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to package in method package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 337,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 338,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Add Method Modifier",
	"description": "Add Method Modifier static in method package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 337,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 338,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added modifier",
		"codeElement": "package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Add Parameter",
	"description": "Add Parameter contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>> in method package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 339,
		"endLine": 354,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 347,
		"endLine": 347,
		"startColumn": 38,
		"endColumn": 102,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 340,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier private to package in method package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 339,
		"endLine": 354,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 340,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Add Method Modifier",
	"description": "Add Method Modifier static in method package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 339,
		"endLine": 354,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 340,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added modifier",
		"codeElement": "package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "cb27b454d0980f49dffd1df1ccafdeecff6e2f34",
	"url": "https://github.com/jgrapht/jgrapht/commit/cb27b454d0980f49dffd1df1ccafdeecff6e2f34",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "532f76c36f4e17784493efbaabba55e62f61dd4e",
	"url": "https://github.com/jgrapht/jgrapht/commit/532f76c36f4e17784493efbaabba55e62f61dd4e",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "4eb6aea5862374e850415cd304de07339cbc925a",
	"url": "https://github.com/jgrapht/jgrapht/commit/4eb6aea5862374e850415cd304de07339cbc925a",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "ae0a81cb528492c7bb5297aa5f198a3b949906b6",
	"url": "https://github.com/jgrapht/jgrapht/commit/ae0a81cb528492c7bb5297aa5f198a3b949906b6",
	"refactorings": [{
	"type": "Rename Variable",
	"description": "Rename Variable nominator : float to numerator : float in method private pickAVertex(target Graph<V,E>, allNewNodes Set<V>, allNewEdgesSet Set<E>, direction Direction, bias float) : V from class org.jgrapht.generate.DirectedScaleFreeGraphGenerator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/DirectedScaleFreeGraphGenerator.java",
		"startLine": 417,
		"endLine": 417,
		"startColumn": 15,
		"endColumn": 24,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "nominator : float"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/DirectedScaleFreeGraphGenerator.java",
		"startLine": 417,
		"endLine": 417,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/DirectedScaleFreeGraphGenerator.java",
		"startLine": 425,
		"endLine": 426,
		"startColumn": 13,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/DirectedScaleFreeGraphGenerator.java",
		"startLine": 427,
		"endLine": 427,
		"startColumn": 13,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/DirectedScaleFreeGraphGenerator.java",
		"startLine": 417,
		"endLine": 417,
		"startColumn": 15,
		"endColumn": 24,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "numerator : float"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/DirectedScaleFreeGraphGenerator.java",
		"startLine": 417,
		"endLine": 417,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/DirectedScaleFreeGraphGenerator.java",
		"startLine": 425,
		"endLine": 426,
		"startColumn": 13,
		"endColumn": 52,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/generate/DirectedScaleFreeGraphGenerator.java",
		"startLine": 427,
		"endLine": 427,
		"startColumn": 13,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "97d5beb77c803c3db81c40829d344d321311b1ae",
	"url": "https://github.com/jgrapht/jgrapht/commit/97d5beb77c803c3db81c40829d344d321311b1ae",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c999d4d635b89601413e2ec6a4ee0c3dd24c29bb",
	"url": "https://github.com/jgrapht/jgrapht/commit/c999d4d635b89601413e2ec6a4ee0c3dd24c29bb",
	"refactorings": [{
	"type": "Add Attribute Modifier",
	"description": "Add Attribute Modifier final in attribute private k : int from class org.jgrapht.alg.tour.TwoOptHeuristicTSP",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 57,
		"endLine": 57,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private k : int"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 23,
		"endColumn": 24,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with added modifier",
		"codeElement": "private k : int"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public TwoOptHeuristicTSP(k int, initializer HamiltonianCycleAlgorithm<V,E>, minCostImprovement double) extracted from public TwoOptHeuristicTSP(k int, rng Random) in class org.jgrapht.alg.tour.TwoOptHeuristicTSP",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 95,
		"endLine": 108,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public TwoOptHeuristicTSP(k int, rng Random)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 104,
		"endLine": 104,
		"startColumn": 13,
		"endColumn": 74,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 106,
		"endLine": 106,
		"startColumn": 9,
		"endColumn": 20,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 107,
		"endLine": 107,
		"startColumn": 9,
		"endColumn": 90,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 103,
		"endLine": 105,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 103,
		"endLine": 105,
		"startColumn": 20,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 143,
		"endLine": 157,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public TwoOptHeuristicTSP(k int, initializer HamiltonianCycleAlgorithm<V,E>, minCostImprovement double)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 13,
		"endColumn": 74,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 9,
		"endColumn": 20,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 155,
		"endLine": 155,
		"startColumn": 9,
		"endColumn": 107,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 151,
		"endLine": 153,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 151,
		"endLine": 153,
		"startColumn": 20,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 133,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public TwoOptHeuristicTSP(k int, initializer HamiltonianCycleAlgorithm<V,E>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 9,
		"endColumn": 36,
		"codeElementType": "CONSTRUCTOR_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "this(k,initializer,1e-8)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 156,
		"endLine": 156,
		"startColumn": 9,
		"endColumn": 64,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public improveTour(tour GraphPath<V,E>) : GraphPath<V,E> from class org.jgrapht.alg.tour.TwoOptHeuristicTSP",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 149,
		"endLine": 159,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public improveTour(tour GraphPath<V,E>) : GraphPath<V,E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 204,
		"endLine": 204,
		"startColumn": 5,
		"endColumn": 14,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 198,
		"endLine": 209,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public improveTour(tour GraphPath<V,E>) : GraphPath<V,E>"
}]
},
{
	"type": "Replace Generic With Diamond",
	"description": "Replace Generic With Diamond ArrayList<E> with ArrayList<> in method private tourToPath(tour int[]) : GraphPath<V,E> from class org.jgrapht.alg.tour.TwoOptHeuristicTSP",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 283,
		"endLine": 283,
		"startColumn": 29,
		"endColumn": 48,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "original creation",
		"codeElement": "ArrayList<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 275,
		"endLine": 299,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private tourToPath(tour int[]) : GraphPath<V,E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 325,
		"endLine": 325,
		"startColumn": 29,
		"endColumn": 47,
		"codeElementType": "CLASS_INSTANCE_CREATION",
		"description": "creation with diamond operator",
		"codeElement": "ArrayList<>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 317,
		"endLine": 341,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with diamond operator",
		"codeElement": "private tourToPath(tour int[]) : GraphPath<V,E>"
}]
},
{
	"type": "Rename Attribute",
	"description": "Rename Attribute rng : Random to initializer : HamiltonianCycleAlgorithm<V,E> in class org.jgrapht.alg.tour.TwoOptHeuristicTSP",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 58,
		"endLine": 58,
		"startColumn": 20,
		"endColumn": 23,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "rng : Random"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 51,
		"endColumn": 62,
		"codeElementType": "FIELD_DECLARATION",
		"description": "renamed attribute declaration",
		"codeElement": "initializer : HamiltonianCycleAlgorithm<V,E>"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type rng : Random to initializer : HamiltonianCycleAlgorithm<V,E> in class org.jgrapht.alg.tour.TwoOptHeuristicTSP",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 58,
		"endLine": 58,
		"startColumn": 20,
		"endColumn": 23,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "rng : Random"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 51,
		"endColumn": 62,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "initializer : HamiltonianCycleAlgorithm<V,E>"
}]
},
{
	"type": "Add Attribute Modifier",
	"description": "Add Attribute Modifier final in attribute private initializer : HamiltonianCycleAlgorithm<V,E> from class org.jgrapht.alg.tour.TwoOptHeuristicTSP",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 58,
		"endLine": 58,
		"startColumn": 20,
		"endColumn": 23,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private rng : Random"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 51,
		"endColumn": 62,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with added modifier",
		"codeElement": "private initializer : HamiltonianCycleAlgorithm<V,E>"
}]
},
{
	"type": "Extract Interface",
	"description": "Extract Interface org.jgrapht.alg.interfaces.HamiltonianCycleImprovementAlgorithm from classes [org.jgrapht.alg.tour.TwoOptHeuristicTSP]",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 26,
		"endLine": 327,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original sub-type declaration",
		"codeElement": "org.jgrapht.alg.tour.TwoOptHeuristicTSP"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 26,
		"endLine": 369,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "sub-type declaration after extraction",
		"codeElement": "org.jgrapht.alg.tour.TwoOptHeuristicTSP"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/interfaces/HamiltonianCycleImprovementAlgorithm.java",
		"startLine": 22,
		"endLine": 51,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "extracted super-type declaration",
		"codeElement": "org.jgrapht.alg.interfaces.HamiltonianCycleImprovementAlgorithm"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method private createRandomTour() : int[] renamed to private createInitialTour() : int[] in class org.jgrapht.alg.tour.TwoOptHeuristicTSP",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 199,
		"endLine": 218,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private createRandomTour() : int[]"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/tour/TwoOptHeuristicTSP.java",
		"startLine": 249,
		"endLine": 257,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "private createInitialTour() : int[]"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "bcdcff9006bad26a0964adcf75bc9435f4deded4",
	"url": "https://github.com/jgrapht/jgrapht/commit/bcdcff9006bad26a0964adcf75bc9435f4deded4",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "5462ee0943f573d9e15df423ef87dfc8f97e3cbc",
	"url": "https://github.com/jgrapht/jgrapht/commit/5462ee0943f573d9e15df423ef87dfc8f97e3cbc",
	"refactorings": [{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.util.DoublyLinkedList.ListIterator renamed to org.jgrapht.util.DoublyLinkedList.NodeIterator",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 349,
		"endLine": 369,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListIterator"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1065,
		"endLine": 1092,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.NodeIterator"
}]
},
{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.util.DoublyLinkedList.ListIteratorImpl renamed to org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 371,
		"endLine": 446,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListIteratorImpl"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1134,
		"endLine": 1316,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method public add(value E) : ListNode<E> renamed to public addNodeFirst(node ListNode<E>) : void in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 108,
		"endLine": 117,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public add(value E) : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 297,
		"endLine": 311,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "public addNodeFirst(node ListNode<E>) : void"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method public remove(node ListNode<E>) : void renamed to private unlink(node ListNodeImpl<E>) : boolean in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 215,
		"endLine": 232,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public remove(node ListNode<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 240,
		"endLine": 259,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "private unlink(node ListNodeImpl<E>) : boolean"
}]
},
{
	"type": "Split Method",
	"description": "Split Method public getFirstElement() : E to [public removeFirst() : E, public removeLast() : E] in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 234,
		"endLine": 244,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getFirstElement() : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 695,
		"endLine": 708,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "split method declaration",
		"codeElement": "public removeFirst() : E"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 710,
		"endLine": 723,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "split method declaration",
		"codeElement": "public removeLast() : E"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method public getLastElement() : E renamed to public getLastNode() : ListNode<E> in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 246,
		"endLine": 256,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getLastElement() : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 373,
		"endLine": 388,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "public getLastNode() : ListNode<E>"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method public getNode(element E) : ListNode<E> renamed to public get(index int) : E in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 258,
		"endLine": 277,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getNode(element E) : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 635,
		"endLine": 642,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "public get(index int) : E"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method private unlink(target ListNode<E>) : void renamed to private removeListNode(node ListNodeImpl<E>) : boolean in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 279,
		"endLine": 290,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unlink(target ListNode<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 156,
		"endLine": 181,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "private removeListNode(node ListNodeImpl<E>) : boolean"
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method private linkBefore(node ListNode<E>, target ListNode<E>) : void renamed to private link(predecessor ListNodeImpl<E>, successor ListNodeImpl<E>) : void in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 292,
		"endLine": 303,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private linkBefore(node ListNode<E>, target ListNode<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 183,
		"endLine": 194,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "private link(predecessor ListNodeImpl<E>, successor ListNodeImpl<E>) : void"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type head : ListNode<E> to head : ListNodeImpl<E> in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 40,
		"endLine": 40,
		"startColumn": 25,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "head : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 66,
		"endLine": 66,
		"startColumn": 29,
		"endColumn": 40,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "head : ListNodeImpl<E>"
}]
},
{
	"type": "Encapsulate Attribute",
	"description": "Encapsulate Attribute private head : ListNodeImpl<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 40,
		"endLine": 40,
		"startColumn": 25,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private head : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 66,
		"endLine": 66,
		"startColumn": 29,
		"endColumn": 40,
		"codeElementType": "FIELD_DECLARATION",
		"description": "encapsulated attribute declaration",
		"codeElement": "private head : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 69,
		"endLine": 72,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "added getter method",
		"codeElement": "private tail() : ListNodeImpl<E>"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private tail() : ListNodeImpl<E> extracted from public invert() : void in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 119,
		"endLine": 139,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public invert() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 129,
		"endLine": 129,
		"startColumn": 9,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 69,
		"endLine": 72,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private tail() : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 886,
		"endLine": 909,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public invert() : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 897,
		"endLine": 897,
		"startColumn": 35,
		"endColumn": 41,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "tail()"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private linkListIntoThisBefore(index int, list DoublyLinkedList<E>) : void extracted from public append(list DoublyLinkedList<E>) : void in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 141,
		"endLine": 160,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public append(list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 17,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 156,
		"endLine": 156,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 149,
		"endLine": 151,
		"startColumn": 28,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 216,
		"endLine": 238,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private linkListIntoThisBefore(index int, list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 233,
		"endLine": 233,
		"startColumn": 17,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 237,
		"endLine": 237,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 232,
		"endLine": 234,
		"startColumn": 29,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 911,
		"endLine": 925,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public moveFrom(index int, movedList DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 924,
		"endLine": 924,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "linkListIntoThisBefore(index,movedList)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 219,
		"endLine": 219,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 226,
		"endLine": 226,
		"startColumn": 13,
		"endColumn": 89,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 13,
		"endColumn": 52,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 229,
		"endLine": 229,
		"startColumn": 13,
		"endColumn": 43,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 230,
		"endLine": 230,
		"startColumn": 13,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 224,
		"endLine": 224,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 223,
		"endLine": 225,
		"startColumn": 32,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 232,
		"endLine": 234,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 225,
		"endLine": 235,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 223,
		"endLine": 235,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private tail() : ListNodeImpl<E> extracted from public append(list DoublyLinkedList<E>) : void in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 141,
		"endLine": 160,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public append(list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 157,
		"endLine": 157,
		"startColumn": 13,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 69,
		"endLine": 72,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private tail() : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 911,
		"endLine": 925,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public moveFrom(index int, movedList DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 40,
		"endColumn": 51,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "list.tail()"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private moveAllListNodes(list DoublyLinkedList<E>) : void extracted from public append(list DoublyLinkedList<E>) : void in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 141,
		"endLine": 160,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public append(list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 154,
		"endLine": 154,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 155,
		"endLine": 155,
		"startColumn": 13,
		"endColumn": 27,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 137,
		"endLine": 154,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private moveAllListNodes(list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 9,
		"endColumn": 27,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 151,
		"endLine": 151,
		"startColumn": 9,
		"endColumn": 23,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 911,
		"endLine": 925,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public moveFrom(index int, movedList DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "moveAllListNodes(list)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 147,
		"endLine": 147,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "ASSERT_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 9,
		"endColumn": 20,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 145,
		"endLine": 149,
		"startColumn": 89,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 145,
		"endLine": 149,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private linkListIntoThisBefore(index int, list DoublyLinkedList<E>) : void extracted from public prepend(list DoublyLinkedList<E>) : void in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 162,
		"endLine": 180,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public prepend(list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 173,
		"endLine": 173,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 177,
		"endLine": 177,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 169,
		"endLine": 179,
		"startColumn": 30,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 216,
		"endLine": 238,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private linkListIntoThisBefore(index int, list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 224,
		"endLine": 224,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 237,
		"endLine": 237,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 223,
		"endLine": 225,
		"startColumn": 32,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 911,
		"endLine": 925,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public moveFrom(index int, movedList DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 924,
		"endLine": 924,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "linkListIntoThisBefore(index,movedList)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 219,
		"endLine": 219,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 9,
		"endColumn": 32,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 226,
		"endLine": 226,
		"startColumn": 13,
		"endColumn": 89,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 13,
		"endColumn": 52,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 229,
		"endLine": 229,
		"startColumn": 13,
		"endColumn": 43,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 230,
		"endLine": 230,
		"startColumn": 13,
		"endColumn": 37,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 233,
		"endLine": 233,
		"startColumn": 17,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 232,
		"endLine": 234,
		"startColumn": 29,
		"endColumn": 14,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 232,
		"endLine": 234,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 225,
		"endLine": 235,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 223,
		"endLine": 235,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private tail() : ListNodeImpl<E> extracted from public prepend(list DoublyLinkedList<E>) : void in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 162,
		"endLine": 180,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public prepend(list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 178,
		"endLine": 178,
		"startColumn": 13,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 69,
		"endLine": 72,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private tail() : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 911,
		"endLine": 925,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public moveFrom(index int, movedList DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 40,
		"endColumn": 51,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "list.tail()"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private moveAllListNodes(list DoublyLinkedList<E>) : void extracted from public prepend(list DoublyLinkedList<E>) : void in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 162,
		"endLine": 180,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public prepend(list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 174,
		"endLine": 174,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 176,
		"endLine": 176,
		"startColumn": 13,
		"endColumn": 27,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 137,
		"endLine": 154,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private moveAllListNodes(list DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 9,
		"endColumn": 27,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 151,
		"endLine": 151,
		"startColumn": 9,
		"endColumn": 23,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 911,
		"endLine": 925,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public moveFrom(index int, movedList DoublyLinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 220,
		"endLine": 220,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "moveAllListNodes(list)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 147,
		"endLine": 147,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "ASSERT_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 9,
		"endColumn": 20,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 145,
		"endLine": 149,
		"startColumn": 89,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 145,
		"endLine": 149,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private linkLast(node ListNodeImpl<E>) : void extracted from public addLast(value E) : ListNode<E> in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 182,
		"endLine": 199,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public addLast(value E) : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 194,
		"endLine": 194,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 191,
		"endLine": 195,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 191,
		"endLine": 193,
		"startColumn": 24,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 193,
		"endLine": 195,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 204,
		"endLine": 214,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private linkLast(node ListNodeImpl<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 212,
		"endLine": 212,
		"startColumn": 13,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 207,
		"endLine": 213,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 207,
		"endLine": 211,
		"startColumn": 24,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 211,
		"endLine": 213,
		"startColumn": 16,
		"endColumn": 10,
		"codeElementType": "BLOCK",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 585,
		"endLine": 601,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public addElementLast(element E) : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 287,
		"endLine": 287,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "linkLast(nodeImpl)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 208,
		"endLine": 208,
		"startColumn": 13,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 209,
		"endLine": 209,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 210,
		"endLine": 210,
		"startColumn": 13,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method private tail() : ListNodeImpl<E> extracted from public addLast(value E) : ListNode<E> in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 182,
		"endLine": 199,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public addLast(value E) : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 196,
		"endLine": 196,
		"startColumn": 9,
		"endColumn": 16,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 69,
		"endLine": 72,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private tail() : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 71,
		"endLine": 71,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 585,
		"endLine": 601,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public addElementLast(element E) : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 426,
		"endLine": 426,
		"startColumn": 20,
		"endColumn": 26,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "tail()"
}]
},
{
	"type": "Extract Method",
	"description": "Extract Method public addElementLast(element E) : ListNode<E> extracted from public addLast(value E) : ListNode<E> in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 182,
		"endLine": 199,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public addLast(value E) : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 198,
		"endLine": 198,
		"startColumn": 9,
		"endColumn": 23,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 585,
		"endLine": 601,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public addElementLast(element E) : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 598,
		"endLine": 598,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 600,
		"endLine": 600,
		"startColumn": 9,
		"endColumn": 21,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 666,
		"endLine": 673,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public addLast(e E) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 672,
		"endLine": 672,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "addElementLast(e)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 599,
		"endLine": 599,
		"startColumn": 9,
		"endColumn": 29,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 210,
		"endLine": 210,
		"startColumn": 13,
		"endColumn": 25,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "added statement in extracted method declaration",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable result : ListNode<E> to node : ListNode<E> in method public addElementLast(element E) : ListNode<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 21,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "result : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 9,
		"endColumn": 52,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 198,
		"endLine": 198,
		"startColumn": 9,
		"endColumn": 23,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 598,
		"endLine": 598,
		"startColumn": 21,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "node : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 598,
		"endLine": 598,
		"startColumn": 9,
		"endColumn": 56,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 600,
		"endLine": 600,
		"startColumn": 9,
		"endColumn": 21,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter value : E to e : E in method public addLast(e E) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 32,
		"endColumn": 39,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "value : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 670,
		"endLine": 670,
		"startColumn": 25,
		"endColumn": 28,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "e : E"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public isEmpty() : boolean from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 90,
		"endLine": 97,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public isEmpty() : boolean"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 77,
		"endLine": 77,
		"startColumn": 5,
		"endColumn": 14,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 74,
		"endLine": 81,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public isEmpty() : boolean"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public size() : int from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 99,
		"endLine": 106,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public size() : int"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 86,
		"endLine": 86,
		"startColumn": 5,
		"endColumn": 14,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 83,
		"endLine": 90,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public size() : int"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type t : ListNode<E> to next : ListNodeImpl<E> in method public invert() : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 25,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "t : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 13,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 900,
		"endLine": 900,
		"startColumn": 29,
		"endColumn": 48,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "next : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 900,
		"endLine": 900,
		"startColumn": 13,
		"endColumn": 49,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 903,
		"endLine": 903,
		"startColumn": 13,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type current : ListNode<E> to current : ListNodeImpl<E> in method public invert() : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 130,
		"endLine": 130,
		"startColumn": 21,
		"endColumn": 35,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "current : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 133,
		"endLine": 133,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 13,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 13,
		"endColumn": 36,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 131,
		"endLine": 136,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "DO_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 898,
		"endLine": 898,
		"startColumn": 25,
		"endColumn": 39,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "current : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 902,
		"endLine": 902,
		"startColumn": 13,
		"endColumn": 41,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 900,
		"endLine": 900,
		"startColumn": 13,
		"endColumn": 49,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 903,
		"endLine": 903,
		"startColumn": 13,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 905,
		"endLine": 905,
		"startColumn": 13,
		"endColumn": 28,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 899,
		"endLine": 906,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "DO_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type newHead : ListNode<E> to newHead : ListNodeImpl<E> in method public invert() : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 129,
		"endLine": 129,
		"startColumn": 21,
		"endColumn": 40,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "newHead : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 897,
		"endLine": 897,
		"startColumn": 25,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "newHead : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 907,
		"endLine": 907,
		"startColumn": 9,
		"endColumn": 24,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable t : ListNode<E> to next : ListNodeImpl<E> in method public invert() : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 25,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "t : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 132,
		"endLine": 132,
		"startColumn": 13,
		"endColumn": 42,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 900,
		"endLine": 900,
		"startColumn": 29,
		"endColumn": 48,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "next : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 900,
		"endLine": 900,
		"startColumn": 13,
		"endColumn": 49,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 903,
		"endLine": 903,
		"startColumn": 13,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter list : DoublyLinkedList<E> to movedList : DoublyLinkedList<E> in method public append(movedList DoublyLinkedList<E>) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 147,
		"endLine": 147,
		"startColumn": 24,
		"endColumn": 48,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "list : DoublyLinkedList<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 935,
		"endLine": 935,
		"startColumn": 24,
		"endColumn": 53,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "movedList : DoublyLinkedList<E>"
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter list : DoublyLinkedList<E> to movedList : DoublyLinkedList<E> in method public prepend(movedList DoublyLinkedList<E>) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 25,
		"endColumn": 49,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "list : DoublyLinkedList<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 948,
		"endLine": 948,
		"startColumn": 25,
		"endColumn": 54,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "movedList : DoublyLinkedList<E>"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type Iterator<E> to NodeIterator<E> in method public iterator() : NodeIterator<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 55,
		"endLine": 55,
		"startColumn": 12,
		"endColumn": 23,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "Iterator<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 51,
		"endLine": 57,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public iterator() : Iterator<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1021,
		"endLine": 1021,
		"startColumn": 12,
		"endColumn": 27,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "NodeIterator<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1017,
		"endLine": 1024,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public iterator() : NodeIterator<E>"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type ListIterator<E> to ListNodeIterator<E> in method public listIterator() : ListNodeIterator<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 64,
		"endLine": 64,
		"startColumn": 12,
		"endColumn": 27,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "ListIterator<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 59,
		"endLine": 66,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public listIterator() : ListIterator<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1030,
		"endLine": 1030,
		"startColumn": 12,
		"endColumn": 31,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "ListNodeIterator<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1026,
		"endLine": 1033,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public listIterator() : ListNodeIterator<E>"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public listIterator() : ListNodeIterator<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 59,
		"endLine": 66,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public listIterator() : ListIterator<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1029,
		"endLine": 1029,
		"startColumn": 5,
		"endColumn": 14,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1026,
		"endLine": 1033,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public listIterator() : ListNodeIterator<E>"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type ListNode<E> to void in method public addLast(e E) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 12,
		"endColumn": 23,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 182,
		"endLine": 199,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addLast(value E) : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 670,
		"endLine": 670,
		"startColumn": 12,
		"endColumn": 16,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 666,
		"endLine": 673,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public addLast(e E) : void"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public addLast(e E) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 182,
		"endLine": 199,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addLast(value E) : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 669,
		"endLine": 669,
		"startColumn": 5,
		"endColumn": 14,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 666,
		"endLine": 673,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public addLast(e E) : void"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type ListNode<E> to void in method public addFirst(e E) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 208,
		"endLine": 208,
		"startColumn": 12,
		"endColumn": 23,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 201,
		"endLine": 213,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addFirst(value E) : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 661,
		"endLine": 661,
		"startColumn": 12,
		"endColumn": 16,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 657,
		"endLine": 664,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public addFirst(e E) : void"
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter value : E to e : E in method public addFirst(e E) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 208,
		"endLine": 208,
		"startColumn": 33,
		"endColumn": 40,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "value : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 661,
		"endLine": 661,
		"startColumn": 26,
		"endColumn": 29,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "e : E"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public addFirst(e E) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 201,
		"endLine": 213,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public addFirst(value E) : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 660,
		"endLine": 660,
		"startColumn": 5,
		"endColumn": 14,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 657,
		"endLine": 664,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public addFirst(e E) : void"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type ListNode<E> to void in method public addNodeFirst(node ListNode<E>) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 12,
		"endColumn": 23,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 108,
		"endLine": 117,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public add(value E) : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 308,
		"endLine": 308,
		"startColumn": 12,
		"endColumn": 16,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 297,
		"endLine": 311,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public addNodeFirst(node ListNode<E>) : void"
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter value : E to node : ListNode<E> in method public addNodeFirst(node ListNode<E>) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 28,
		"endColumn": 35,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "value : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 308,
		"endLine": 308,
		"startColumn": 30,
		"endColumn": 46,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "node : ListNode<E>"
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type value : E to node : ListNode<E> in method public addNodeFirst(node ListNode<E>) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 28,
		"endColumn": 35,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "value : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 308,
		"endLine": 308,
		"startColumn": 30,
		"endColumn": 46,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "node : ListNode<E>"
}]
},
{
	"type": "Extract Variable",
	"description": "Extract Variable next : ListNodeImpl<E> in method private unlink(node ListNodeImpl<E>) : boolean from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 226,
		"endLine": 226,
		"startColumn": 17,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the initializer of the extracted variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 244,
		"endLine": 244,
		"startColumn": 25,
		"endColumn": 41,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted variable declaration",
		"codeElement": "next : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 253,
		"endLine": 253,
		"startColumn": 21,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement with the name of the extracted variable",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type node : ListNode<E> to node : ListNodeImpl<E> in method private unlink(node ListNodeImpl<E>) : boolean from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 221,
		"endLine": 221,
		"startColumn": 24,
		"endColumn": 40,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "node : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 225,
		"endLine": 227,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 241,
		"endLine": 241,
		"startColumn": 28,
		"endColumn": 48,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "node : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 252,
		"endLine": 254,
		"startColumn": 17,
		"endColumn": 18,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type void to boolean in method private unlink(node ListNodeImpl<E>) : boolean from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 221,
		"endLine": 221,
		"startColumn": 12,
		"endColumn": 16,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 215,
		"endLine": 232,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public remove(node ListNode<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 241,
		"endLine": 241,
		"startColumn": 13,
		"endColumn": 20,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "boolean"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 240,
		"endLine": 259,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "private unlink(node ListNodeImpl<E>) : boolean"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier public to private in method private unlink(node ListNodeImpl<E>) : boolean from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 215,
		"endLine": 232,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public remove(node ListNode<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 240,
		"endLine": 259,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "private unlink(node ListNodeImpl<E>) : boolean"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type E to ListNode<E> in method public getLastNode() : ListNode<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 251,
		"endLine": 251,
		"startColumn": 12,
		"endColumn": 13,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "E"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 246,
		"endLine": 256,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getLastElement() : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 382,
		"endLine": 382,
		"startColumn": 12,
		"endColumn": 23,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 373,
		"endLine": 388,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public getLastNode() : ListNode<E>"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type ListNode<E> to E in method public get(index int) : E from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 269,
		"endLine": 269,
		"startColumn": 12,
		"endColumn": 23,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 258,
		"endLine": 277,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getNode(element E) : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 639,
		"endLine": 639,
		"startColumn": 12,
		"endColumn": 13,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "E"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 635,
		"endLine": 642,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public get(index int) : E"
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter element : E to index : int in method public get(index int) : E from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 269,
		"endLine": 269,
		"startColumn": 32,
		"endColumn": 41,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "element : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 639,
		"endLine": 639,
		"startColumn": 18,
		"endColumn": 27,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "index : int"
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type element : E to index : int in method public get(index int) : E from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 269,
		"endLine": 269,
		"startColumn": 32,
		"endColumn": 41,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "element : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 639,
		"endLine": 639,
		"startColumn": 18,
		"endColumn": 27,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "index : int"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public get(index int) : E from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 258,
		"endLine": 277,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getNode(element E) : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 638,
		"endLine": 638,
		"startColumn": 5,
		"endColumn": 14,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 635,
		"endLine": 642,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public get(index int) : E"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type void to boolean in method private removeListNode(node ListNodeImpl<E>) : boolean from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 284,
		"endLine": 284,
		"startColumn": 13,
		"endColumn": 17,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 279,
		"endLine": 290,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private unlink(target ListNode<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 13,
		"endColumn": 20,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "boolean"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 156,
		"endLine": 181,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "private removeListNode(node ListNodeImpl<E>) : boolean"
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter target : ListNode<E> to node : ListNodeImpl<E> in method private removeListNode(node ListNodeImpl<E>) : boolean from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 284,
		"endLine": 284,
		"startColumn": 25,
		"endColumn": 43,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "target : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 286,
		"endLine": 286,
		"startColumn": 9,
		"endColumn": 40,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 287,
		"endLine": 287,
		"startColumn": 9,
		"endColumn": 40,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 289,
		"endLine": 289,
		"startColumn": 9,
		"endColumn": 42,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 36,
		"endColumn": 56,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "node : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 173,
		"endLine": 173,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 174,
		"endLine": 174,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type target : ListNode<E> to node : ListNodeImpl<E> in method private removeListNode(node ListNodeImpl<E>) : boolean from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 284,
		"endLine": 284,
		"startColumn": 25,
		"endColumn": 43,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "target : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 286,
		"endLine": 286,
		"startColumn": 9,
		"endColumn": 40,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 287,
		"endLine": 287,
		"startColumn": 9,
		"endColumn": 40,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 289,
		"endLine": 289,
		"startColumn": 9,
		"endColumn": 42,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 36,
		"endColumn": 56,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "node : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 173,
		"endLine": 173,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 174,
		"endLine": 174,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 13,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type target : ListNode<E> to successor : ListNodeImpl<E> in method private link(predecessor ListNodeImpl<E>, successor ListNodeImpl<E>) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 298,
		"endLine": 298,
		"startColumn": 47,
		"endColumn": 65,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "target : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 301,
		"endLine": 301,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 300,
		"endLine": 300,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 52,
		"endColumn": 77,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "successor : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 193,
		"endLine": 193,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter target : ListNode<E> to successor : ListNodeImpl<E> in method private link(predecessor ListNodeImpl<E>, successor ListNodeImpl<E>) : void from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 298,
		"endLine": 298,
		"startColumn": 47,
		"endColumn": 65,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "target : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 301,
		"endLine": 301,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 300,
		"endLine": 300,
		"startColumn": 9,
		"endColumn": 33,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 190,
		"endLine": 190,
		"startColumn": 52,
		"endColumn": 77,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "successor : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 193,
		"endLine": 193,
		"startColumn": 9,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Remove Class Modifier",
	"description": "Remove Class Modifier static in class org.jgrapht.util.DoublyLinkedList.ListNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 448,
		"endLine": 484,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1355,
		"endLine": 1372,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with removed modifier",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListNode"
}]
},
{
	"type": "Change Type Declaration Kind",
	"description": "Change Type Declaration Kind class to interface in type org.jgrapht.util.DoublyLinkedList.ListNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 448,
		"endLine": 484,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListNode"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1355,
		"endLine": 1372,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with changed type declaration kind",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListNode"
}]
},
{
	"type": "Change Class Access Modifier",
	"description": "Change Class Access Modifier public to private in class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 371,
		"endLine": 446,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListIteratorImpl"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1134,
		"endLine": 1316,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with changed access modifier",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to private in attribute private expectedModCount : int from class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 391,
		"endLine": 391,
		"startColumn": 13,
		"endColumn": 29,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package expectedModCount : int"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1152,
		"endLine": 1152,
		"startColumn": 21,
		"endColumn": 48,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "private expectedModCount : int"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier package to private in method private ListNodeIteratorImpl(startIndex int, startNode ListNodeImpl<E>) from class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 402,
		"endLine": 407,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package ListIteratorImpl(start ListNode<E>, reversed boolean)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1164,
		"endLine": 1168,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "private ListNodeIteratorImpl(startIndex int, startNode ListNodeImpl<E>)"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type ListNode<E> to ListNodeImpl<E> in method public nextNode() : ListNodeImpl<E> from class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 421,
		"endLine": 421,
		"startColumn": 16,
		"endColumn": 27,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 417,
		"endLine": 436,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public nextNode() : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1210,
		"endLine": 1210,
		"startColumn": 16,
		"endColumn": 31,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1206,
		"endLine": 1221,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public nextNode() : ListNodeImpl<E>"
}]
},
{
	"type": "Add Parameter",
	"description": "Add Parameter startIndex : int in method private ListNodeIteratorImpl(startIndex int, startNode ListNodeImpl<E>) from class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 402,
		"endLine": 407,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package ListIteratorImpl(start ListNode<E>, reversed boolean)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1164,
		"endLine": 1164,
		"startColumn": 38,
		"endColumn": 52,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "startIndex : int"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1164,
		"endLine": 1168,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "private ListNodeIteratorImpl(startIndex int, startNode ListNodeImpl<E>)"
}]
},
{
	"type": "Add Parameter",
	"description": "Add Parameter startNode : ListNodeImpl<E> in method private ListNodeIteratorImpl(startIndex int, startNode ListNodeImpl<E>) from class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 402,
		"endLine": 407,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package ListIteratorImpl(start ListNode<E>, reversed boolean)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1164,
		"endLine": 1164,
		"startColumn": 54,
		"endColumn": 79,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "startNode : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1164,
		"endLine": 1168,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "private ListNodeIteratorImpl(startIndex int, startNode ListNodeImpl<E>)"
}]
},
{
	"type": "Remove Parameter",
	"description": "Remove Parameter start : ListNode<E> in method package ListIteratorImpl(start ListNode<E>, reversed boolean) from class org.jgrapht.util.DoublyLinkedList.ListIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 402,
		"endLine": 402,
		"startColumn": 26,
		"endColumn": 43,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "removed parameter",
		"codeElement": "start : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 402,
		"endLine": 407,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package ListIteratorImpl(start ListNode<E>, reversed boolean)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1164,
		"endLine": 1168,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed parameter",
		"codeElement": "private ListNodeIteratorImpl(startIndex int, startNode ListNodeImpl<E>)"
}]
},
{
	"type": "Remove Parameter",
	"description": "Remove Parameter reversed : boolean in method package ListIteratorImpl(start ListNode<E>, reversed boolean) from class org.jgrapht.util.DoublyLinkedList.ListIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 402,
		"endLine": 402,
		"startColumn": 45,
		"endColumn": 61,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "removed parameter",
		"codeElement": "reversed : boolean"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 402,
		"endLine": 407,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package ListIteratorImpl(start ListNode<E>, reversed boolean)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1164,
		"endLine": 1168,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed parameter",
		"codeElement": "private ListNodeIteratorImpl(startIndex int, startNode ListNodeImpl<E>)"
}]
},
{
	"type": "Rename Attribute",
	"description": "Rename Attribute start : ListNode<E> to nextIndex : int in class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 378,
		"endLine": 378,
		"startColumn": 21,
		"endColumn": 26,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "start : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1142,
		"endLine": 1142,
		"startColumn": 21,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "renamed attribute declaration",
		"codeElement": "nextIndex : int"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type start : ListNode<E> to nextIndex : int in class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 378,
		"endLine": 378,
		"startColumn": 21,
		"endColumn": 26,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "start : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1142,
		"endLine": 1142,
		"startColumn": 21,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "nextIndex : int"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to private in attribute private nextIndex : int from class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 378,
		"endLine": 378,
		"startColumn": 21,
		"endColumn": 26,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package start : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1142,
		"endLine": 1142,
		"startColumn": 21,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "private nextIndex : int"
}]
},
{
	"type": "Rename Attribute",
	"description": "Rename Attribute current : ListNode<E> to next : ListNodeImpl<E> in class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 383,
		"endLine": 383,
		"startColumn": 21,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "current : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1144,
		"endLine": 1144,
		"startColumn": 33,
		"endColumn": 37,
		"codeElementType": "FIELD_DECLARATION",
		"description": "renamed attribute declaration",
		"codeElement": "next : ListNodeImpl<E>"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type current : ListNode<E> to next : ListNodeImpl<E> in class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 383,
		"endLine": 383,
		"startColumn": 21,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "current : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1144,
		"endLine": 1144,
		"startColumn": 33,
		"endColumn": 37,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "next : ListNodeImpl<E>"
}]
},
{
	"type": "Change Attribute Access Modifier",
	"description": "Change Attribute Access Modifier package to private in attribute private next : ListNodeImpl<E> from class org.jgrapht.util.DoublyLinkedList.ListNodeIteratorImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 383,
		"endLine": 383,
		"startColumn": 21,
		"endColumn": 28,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "package current : ListNode<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1144,
		"endLine": 1144,
		"startColumn": 33,
		"endColumn": 37,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with changed access modifier",
		"codeElement": "private next : ListNodeImpl<E>"
}]
},
{
	"type": "Push Down Method",
	"description": "Push Down Method public toString() : String from class org.jgrapht.util.DoublyLinkedList.ListNode to public toString() : String from class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 468,
		"endLine": 474,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public toString() : String"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1397,
		"endLine": 1408,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "pushed down method declaration",
		"codeElement": "public toString() : String"
}]
},
{
	"type": "Push Down Method",
	"description": "Push Down Method public getValue() : V from class org.jgrapht.util.DoublyLinkedList.ListNode to public getValue() : V from class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 476,
		"endLine": 483,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getValue() : V"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1410,
		"endLine": 1417,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "pushed down method declaration",
		"codeElement": "public getValue() : V"
}]
},
{
	"type": "Add Method Annotation",
	"description": "Add Method Annotation @Override in method public getValue() : V from class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 476,
		"endLine": 483,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getValue() : V"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1413,
		"endLine": 1413,
		"startColumn": 9,
		"endColumn": 18,
		"codeElementType": "ANNOTATION",
		"description": "added annotation",
		"codeElement": "@Override"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1410,
		"endLine": 1417,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added annotation",
		"codeElement": "public getValue() : V"
}]
},
{
	"type": "Push Down Attribute",
	"description": "Push Down Attribute private value : V from class org.jgrapht.util.DoublyLinkedList.ListNode to private value : V from class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 455,
		"endLine": 455,
		"startColumn": 19,
		"endColumn": 24,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private value : V"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1382,
		"endLine": 1382,
		"startColumn": 25,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "pushed down attribute declaration",
		"codeElement": "private value : V"
}]
},
{
	"type": "Add Attribute Modifier",
	"description": "Add Attribute Modifier final in attribute private value : V from class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 455,
		"endLine": 455,
		"startColumn": 19,
		"endColumn": 24,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private value : V"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1382,
		"endLine": 1382,
		"startColumn": 25,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "attribute declaration with added modifier",
		"codeElement": "private value : V"
}]
},
{
	"type": "Push Down Attribute",
	"description": "Push Down Attribute private next : ListNode<V> from class org.jgrapht.util.DoublyLinkedList.ListNode to private next : ListNodeImpl<V> from class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 456,
		"endLine": 456,
		"startColumn": 29,
		"endColumn": 33,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private next : ListNode<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1384,
		"endLine": 1384,
		"startColumn": 33,
		"endColumn": 44,
		"codeElementType": "FIELD_DECLARATION",
		"description": "pushed down attribute declaration",
		"codeElement": "private next : ListNodeImpl<V>"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type next : ListNode<V> to next : ListNodeImpl<V> in class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 456,
		"endLine": 456,
		"startColumn": 29,
		"endColumn": 33,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "next : ListNode<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1384,
		"endLine": 1384,
		"startColumn": 33,
		"endColumn": 44,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "next : ListNodeImpl<V>"
}]
},
{
	"type": "Push Down Attribute",
	"description": "Push Down Attribute private prev : ListNode<V> from class org.jgrapht.util.DoublyLinkedList.ListNode to private prev : ListNodeImpl<V> from class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 457,
		"endLine": 457,
		"startColumn": 29,
		"endColumn": 33,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private prev : ListNode<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1385,
		"endLine": 1385,
		"startColumn": 33,
		"endColumn": 44,
		"codeElementType": "FIELD_DECLARATION",
		"description": "pushed down attribute declaration",
		"codeElement": "private prev : ListNodeImpl<V>"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type prev : ListNode<V> to prev : ListNodeImpl<V> in class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 457,
		"endLine": 457,
		"startColumn": 29,
		"endColumn": 33,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "prev : ListNode<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1385,
		"endLine": 1385,
		"startColumn": 33,
		"endColumn": 44,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "prev : ListNodeImpl<V>"
}]
},
{
	"type": "Extract Subclass",
	"description": "Extract Subclass org.jgrapht.util.DoublyLinkedList.ListNodeImpl from class org.jgrapht.util.DoublyLinkedList.ListNode",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 448,
		"endLine": 484,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListNode"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 476,
		"endLine": 483,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getValue() : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 455,
		"endLine": 455,
		"startColumn": 19,
		"endColumn": 24,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private value : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 456,
		"endLine": 456,
		"startColumn": 29,
		"endColumn": 33,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private next : ListNode<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 457,
		"endLine": 457,
		"startColumn": 29,
		"endColumn": 33,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "private prev : ListNode<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1355,
		"endLine": 1372,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "type declaration after extraction",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListNode"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1374,
		"endLine": 1418,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "extracted type declaration",
		"codeElement": "org.jgrapht.util.DoublyLinkedList.ListNodeImpl"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1410,
		"endLine": 1417,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public getValue() : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1382,
		"endLine": 1382,
		"startColumn": 25,
		"endColumn": 30,
		"codeElementType": "FIELD_DECLARATION",
		"description": "extracted attribute declaration",
		"codeElement": "private value : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1384,
		"endLine": 1384,
		"startColumn": 33,
		"endColumn": 44,
		"codeElementType": "FIELD_DECLARATION",
		"description": "extracted attribute declaration",
		"codeElement": "private next : ListNodeImpl<V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1385,
		"endLine": 1385,
		"startColumn": 33,
		"endColumn": 44,
		"codeElementType": "FIELD_DECLARATION",
		"description": "extracted attribute declaration",
		"codeElement": "private prev : ListNodeImpl<V>"
}]
},
{
	"type": "Push Down Method",
	"description": "Push Down Method package ListNode(value V) from class org.jgrapht.util.DoublyLinkedList.ListNode to package ListNodeImpl(value V) from class org.jgrapht.util.DoublyLinkedList.ListNodeImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 459,
		"endLine": 466,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package ListNode(value V)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1387,
		"endLine": 1395,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "pushed down method declaration",
		"codeElement": "package ListNodeImpl(value V)"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type start : ListNode<E> to startNode : ListNodeImpl<E> in method public reverseCircularIterator(firstElement E) : NodeIterator<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 83,
		"endLine": 83,
		"startColumn": 21,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "start : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 84,
		"endLine": 86,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1001,
		"endLine": 1001,
		"startColumn": 25,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "startNode : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1002,
		"endLine": 1004,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable start : ListNode<E> to startNode : ListNodeImpl<E> in method public reverseCircularIterator(firstElement E) : NodeIterator<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 83,
		"endLine": 83,
		"startColumn": 21,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "start : ListNode<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 84,
		"endLine": 86,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1001,
		"endLine": 1001,
		"startColumn": 25,
		"endColumn": 75,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "startNode : ListNodeImpl<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 1002,
		"endLine": 1004,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Rename Method",
	"description": "Rename Method public reverseIteratorFrom(element E) : Iterator<E> renamed to public reverseCircularIterator(firstElement E) : NodeIterator<E> in class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 68,
		"endLine": 88,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public reverseIteratorFrom(element E) : Iterator<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 982,
		"endLine": 1006,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "renamed method declaration",
		"codeElement": "public reverseCircularIterator(firstElement E) : NodeIterator<E>"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type Iterator<E> to NodeIterator<E> in method public reverseCircularIterator(firstElement E) : NodeIterator<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 82,
		"endLine": 82,
		"startColumn": 12,
		"endColumn": 23,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "Iterator<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 68,
		"endLine": 88,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public reverseIteratorFrom(element E) : Iterator<E>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 999,
		"endLine": 999,
		"startColumn": 12,
		"endColumn": 27,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "NodeIterator<E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 982,
		"endLine": 1006,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public reverseCircularIterator(firstElement E) : NodeIterator<E>"
}]
},
{
	"type": "Rename Parameter",
	"description": "Rename Parameter element : E to firstElement : E in method public reverseCircularIterator(firstElement E) : NodeIterator<E> from class org.jgrapht.util.DoublyLinkedList",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 82,
		"endLine": 82,
		"startColumn": 44,
		"endColumn": 53,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "element : E"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/DoublyLinkedList.java",
		"startLine": 999,
		"endLine": 999,
		"startColumn": 52,
		"endColumn": 66,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "firstElement : E"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "c4c8fd620173c3478693cdccea7dffdc6c95e4db",
	"url": "https://github.com/jgrapht/jgrapht/commit/c4c8fd620173c3478693cdccea7dffdc6c95e4db",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "0331649b9da60d0ae66c1ee3879899d94e1a6172",
	"url": "https://github.com/jgrapht/jgrapht/commit/0331649b9da60d0ae66c1ee3879899d94e1a6172",
	"refactorings": [{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.alg.shortestpath.ContractionHierarchy renamed to org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchy.java",
		"startLine": 47,
		"endLine": 1125,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.ContractionHierarchy"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 48,
		"endLine": 1227,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation"
}]
},
{
	"type": "Rename Class",
	"description": "Rename Class org.jgrapht.alg.shortestpath.ContractionHierarchyTest renamed to org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 48,
		"endLine": 552,
		"startColumn": 0,
		"endColumn": 0,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.ContractionHierarchyTest"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 49,
		"endLine": 546,
		"startColumn": 0,
		"endColumn": 0,
		"codeElementType": "TYPE_DECLARATION",
		"description": "renamed type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contraction : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testMoreSourcesThanTargets1() : void from class org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 88,
		"endLine": 89,
		"startColumn": 59,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contraction : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 87,
		"endLine": 89,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 92,
		"endLine": 97,
		"startColumn": 9,
		"endColumn": 19,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 84,
		"endLine": 85,
		"startColumn": 60,
		"endColumn": 118,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 84,
		"endLine": 85,
		"startColumn": 9,
		"endColumn": 119,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 88,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 11,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable contraction : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testMoreSourcesThanTargets1() : void from class org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 88,
		"endLine": 89,
		"startColumn": 59,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contraction : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 87,
		"endLine": 89,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 92,
		"endLine": 97,
		"startColumn": 9,
		"endColumn": 19,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 84,
		"endLine": 85,
		"startColumn": 60,
		"endColumn": 118,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 84,
		"endLine": 85,
		"startColumn": 9,
		"endColumn": 119,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 88,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 11,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contraction : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testMoreSourcesThanTargets2() : void from class org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 117,
		"endLine": 118,
		"startColumn": 59,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contraction : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 116,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 120,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 19,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 111,
		"endLine": 112,
		"startColumn": 60,
		"endColumn": 118,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 111,
		"endLine": 112,
		"startColumn": 9,
		"endColumn": 119,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 114,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 11,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable contraction : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testMoreSourcesThanTargets2() : void from class org.jgrapht.alg.shortestpath.CHManyToManyShortestPathsTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 117,
		"endLine": 118,
		"startColumn": 59,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contraction : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 116,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 120,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 19,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 111,
		"endLine": 112,
		"startColumn": 60,
		"endColumn": 118,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 111,
		"endLine": 112,
		"startColumn": 9,
		"endColumn": 119,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPathsTest.java",
		"startLine": 114,
		"endLine": 118,
		"startColumn": 9,
		"endColumn": 11,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Merge Parameter",
	"description": "Merge Parameter [contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping : Map<V,ContractionVertex<V>>] to hierarchy : ContractionHierarchy<V,E> in method public CHManyToManyShortestPathsImpl(graph Graph<V,E>, hierarchy ContractionHierarchy<V,E>, sources Set<V>, targets Set<V>, forwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, backwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, distanceAndMiddleVertexMap Map<Pair<ContractionVertex<V>,ContractionVertex<V>>,Pair<Double,ContractionVertex<V>>>) from class org.jgrapht.alg.shortestpath.CHManyToManyShortestPaths.CHManyToManyShortestPathsImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 384,
		"endLine": 384,
		"startColumn": 46,
		"endColumn": 110,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 385,
		"endLine": 385,
		"startColumn": 46,
		"endColumn": 93,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractionMapping : Map<V,ContractionVertex<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 371,
		"endLine": 401,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public CHManyToManyShortestPathsImpl(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, sources Set<V>, targets Set<V>, forwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, backwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, distanceAndMiddleVertexMap Map<Pair<ContractionVertex<V>,ContractionVertex<V>>,Pair<Double,ContractionVertex<V>>>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 378,
		"endLine": 378,
		"startColumn": 46,
		"endColumn": 82,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "new variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 366,
		"endLine": 394,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with merged variables",
		"codeElement": "public CHManyToManyShortestPathsImpl(graph Graph<V,E>, hierarchy ContractionHierarchy<V,E>, sources Set<V>, targets Set<V>, forwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, backwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, distanceAndMiddleVertexMap Map<Pair<ContractionVertex<V>,ContractionVertex<V>>,Pair<Double,ContractionVertex<V>>>)"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionHierarchy.ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to data : ContractionHierarchy<Integer,DefaultWeightedEdge> in method private test(graph Graph<Integer,DefaultWeightedEdge>, source Integer) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 177,
		"endLine": 178,
		"startColumn": 59,
		"endColumn": 106,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionHierarchy.ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 176,
		"endLine": 178,
		"startColumn": 9,
		"endColumn": 107,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 180,
		"endLine": 181,
		"startColumn": 9,
		"endColumn": 118,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 174,
		"endLine": 175,
		"startColumn": 60,
		"endColumn": 120,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "data : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 174,
		"endLine": 175,
		"startColumn": 9,
		"endColumn": 121,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 177,
		"endLine": 178,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionHierarchy.ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to data : ContractionHierarchy<Integer,DefaultWeightedEdge> in method private test(graph Graph<Integer,DefaultWeightedEdge>, source Integer) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstraTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 177,
		"endLine": 178,
		"startColumn": 59,
		"endColumn": 106,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionHierarchy.ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 176,
		"endLine": 178,
		"startColumn": 9,
		"endColumn": 107,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 180,
		"endLine": 181,
		"startColumn": 9,
		"endColumn": 118,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 174,
		"endLine": 175,
		"startColumn": 60,
		"endColumn": 120,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "data : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 174,
		"endLine": 175,
		"startColumn": 9,
		"endColumn": 121,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstraTest.java",
		"startLine": 177,
		"endLine": 178,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Inline Method",
	"description": "Inline Method private init(contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) : void inlined to public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) in class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 148,
		"endLine": 164,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "inlined method declaration",
		"codeElement": "private init(contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 162,
		"endLine": 162,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "inlined code from inlined method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 163,
		"endLine": 163,
		"startColumn": 9,
		"endColumn": 42,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "inlined code from inlined method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 160,
		"endLine": 160,
		"startColumn": 9,
		"endColumn": 49,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "inlined code from inlined method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 161,
		"endLine": 161,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "inlined code from inlined method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 127,
		"endLine": 146,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "target method declaration before inline",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 145,
		"endLine": 145,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "METHOD_INVOCATION",
		"description": "inlined method invocation",
		"codeElement": "init(contractedGraph,contractionMapping,radius,heapSupplier)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 123,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "target method declaration after inline",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 139,
		"endLine": 139,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "inlined code in target method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 9,
		"endColumn": 42,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "inlined code in target method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 9,
		"endColumn": 65,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "inlined code in target method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 9,
		"endColumn": 69,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "inlined code in target method declaration",
		"codeElement": null
}]
},
{
	"type": "Merge Parameter",
	"description": "Merge Parameter [contractedGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping : Map<V,ContractionVertex<V>>] to hierarchy : ContractionHierarchy<V,E> in method public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 156,
		"endLine": 156,
		"startColumn": 23,
		"endColumn": 86,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractedGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 157,
		"endLine": 157,
		"startColumn": 23,
		"endColumn": 70,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractionMapping : Map<V,ContractionVertex<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 148,
		"endLine": 164,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private init(contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 131,
		"endLine": 131,
		"startColumn": 54,
		"endColumn": 90,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "new variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 123,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with merged variables",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}]
},
{
	"type": "Merge Parameter",
	"description": "Merge Parameter [graph : Graph<V,E>, contractedGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping : Map<V,ContractionVertex<V>>] to hierarchy : ContractionHierarchy<V,E> in method public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>) from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 54,
		"endColumn": 71,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "graph : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 54,
		"endColumn": 117,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractedGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 123,
		"endLine": 123,
		"startColumn": 54,
		"endColumn": 101,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractionMapping : Map<V,ContractionVertex<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 112,
		"endLine": 125,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 119,
		"endLine": 119,
		"startColumn": 54,
		"endColumn": 90,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "new variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 114,
		"endLine": 121,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with merged variables",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>)"
}]
},
{
	"type": "Add Parameter",
	"description": "Add Parameter hierarchy : ContractionHierarchy<V,E> in method public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 127,
		"endLine": 146,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 131,
		"endLine": 131,
		"startColumn": 54,
		"endColumn": 90,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "added parameter",
		"codeElement": "hierarchy : ContractionHierarchy<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 123,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with added parameter",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}]
},
{
	"type": "Remove Parameter",
	"description": "Remove Parameter graph : Graph<V,E> in method public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 138,
		"endLine": 138,
		"startColumn": 54,
		"endColumn": 71,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "removed parameter",
		"codeElement": "graph : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 127,
		"endLine": 146,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 123,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed parameter",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}]
},
{
	"type": "Remove Parameter",
	"description": "Remove Parameter contractedGraph : Graph<ContractionVertex<V>,ContractionEdge<E>> in method public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 139,
		"endLine": 139,
		"startColumn": 54,
		"endColumn": 117,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "removed parameter",
		"codeElement": "contractedGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 127,
		"endLine": 146,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 123,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed parameter",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}]
},
{
	"type": "Remove Parameter",
	"description": "Remove Parameter contractionMapping : Map<V,ContractionVertex<V>> in method public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 54,
		"endColumn": 101,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "removed parameter",
		"codeElement": "contractionMapping : Map<V,ContractionVertex<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 127,
		"endLine": 146,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 123,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed parameter",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type pathMap : Map<Pair<V,V>,GraphPath<V,E>> to pathMap : Map<V,Map<V,GraphPath<V,E>>> in method public getManyToManyPaths(sources Set<V>, targets Set<V>) : ManyToManyShortestPaths<V,E> from class org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 81,
		"endLine": 81,
		"startColumn": 42,
		"endColumn": 67,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "pathMap : Map<Pair<V,V>,GraphPath<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 85,
		"endLine": 85,
		"startColumn": 17,
		"endColumn": 89,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 89,
		"endLine": 89,
		"startColumn": 9,
		"endColumn": 82,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 80,
		"endLine": 80,
		"startColumn": 41,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "pathMap : Map<V,Map<V,GraphPath<V,E>>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 83,
		"endLine": 83,
		"startColumn": 13,
		"endColumn": 50,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 84,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Class Access Modifier",
	"description": "Change Class Access Modifier private to package in class org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths.DefaultManyToManyShortestPathsImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 92,
		"endLine": 142,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths.DefaultManyToManyShortestPathsImpl"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 95,
		"endLine": 143,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with changed access modifier",
		"codeElement": "org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths.DefaultManyToManyShortestPathsImpl"
}]
},
{
	"type": "Add Class Modifier",
	"description": "Add Class Modifier static in class org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths.DefaultManyToManyShortestPathsImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 92,
		"endLine": 142,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original class declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths.DefaultManyToManyShortestPathsImpl"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 95,
		"endLine": 143,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "class declaration with added modifier",
		"codeElement": "org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths.DefaultManyToManyShortestPathsImpl"
}]
},
{
	"type": "Change Attribute Type",
	"description": "Change Attribute Type pathsMap : Map<Pair<V,V>,GraphPath<V,E>> to pathsMap : Map<V,Map<V,GraphPath<V,E>>> in class org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths.DefaultManyToManyShortestPathsImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 102,
		"endLine": 102,
		"startColumn": 56,
		"endColumn": 64,
		"codeElementType": "FIELD_DECLARATION",
		"description": "original attribute declaration",
		"codeElement": "pathsMap : Map<Pair<V,V>,GraphPath<V,E>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 105,
		"endLine": 105,
		"startColumn": 55,
		"endColumn": 63,
		"codeElementType": "FIELD_DECLARATION",
		"description": "changed-type attribute declaration",
		"codeElement": "pathsMap : Map<V,Map<V,GraphPath<V,E>>>"
}]
},
{
	"type": "Inline Variable",
	"description": "Inline Variable sourceTargetPair : Pair<V,V> in method public getPath(source V, target V) : GraphPath<V,E> from class org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths.DefaultManyToManyShortestPathsImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 124,
		"endLine": 124,
		"startColumn": 24,
		"endColumn": 66,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "inlined variable declaration",
		"codeElement": "sourceTargetPair : Pair<V,V>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 13,
		"endColumn": 51,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement with the name of the inlined variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 13,
		"endColumn": 53,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement with the initializer of the inlined variable",
		"codeElement": null
}]
},
{
	"type": "Change Parameter Type",
	"description": "Change Parameter Type pathsMap : Map<Pair<V,V>,GraphPath<V,E>> to pathsMap : Map<V,Map<V,GraphPath<V,E>>> in method package DefaultManyToManyShortestPathsImpl(sources Set<V>, targets Set<V>, pathsMap Map<V,Map<V,GraphPath<V,E>>>) from class org.jgrapht.alg.shortestpath.DefaultManyToManyShortestPaths.DefaultManyToManyShortestPathsImpl",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 113,
		"endLine": 113,
		"startColumn": 44,
		"endColumn": 85,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "pathsMap : Map<Pair<V,V>,GraphPath<V,E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 115,
		"endLine": 115,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 116,
		"endLine": 116,
		"startColumn": 44,
		"endColumn": 84,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "pathsMap : Map<V,Map<V,GraphPath<V,E>>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/DefaultManyToManyShortestPaths.java",
		"startLine": 118,
		"endLine": 118,
		"startColumn": 13,
		"endColumn": 38,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Merge Parameter",
	"description": "Merge Parameter [graph : Graph<V,E>, contractionMapping : Map<V,ContractionVertex<V>>] to contractionHierarchy : ContractionHierarchy<V,E> in method public CHManyToManyShortestPaths(contractionHierarchy ContractionHierarchy<V,E>) from class org.jgrapht.alg.shortestpath.CHManyToManyShortestPaths",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 104,
		"endLine": 104,
		"startColumn": 38,
		"endColumn": 55,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "graph : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 106,
		"endLine": 106,
		"startColumn": 38,
		"endColumn": 85,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractionMapping : Map<V,ContractionVertex<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 96,
		"endLine": 110,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public CHManyToManyShortestPaths(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 102,
		"endLine": 102,
		"startColumn": 38,
		"endColumn": 85,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "new variable declaration",
		"codeElement": "contractionHierarchy : ContractionHierarchy<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 97,
		"endLine": 107,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with merged variables",
		"codeElement": "public CHManyToManyShortestPaths(contractionHierarchy ContractionHierarchy<V,E>)"
}]
},
{
	"type": "Remove Parameter",
	"description": "Remove Parameter contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>> in method public CHManyToManyShortestPaths(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>) from class org.jgrapht.alg.shortestpath.CHManyToManyShortestPaths",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 105,
		"endLine": 105,
		"startColumn": 38,
		"endColumn": 102,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "removed parameter",
		"codeElement": "contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 96,
		"endLine": 110,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public CHManyToManyShortestPaths(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>)"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 97,
		"endLine": 107,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed parameter",
		"codeElement": "public CHManyToManyShortestPaths(contractionHierarchy ContractionHierarchy<V,E>)"
}]
},
{
	"type": "Merge Attribute",
	"description": "Merge Attribute [contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping : Map<V,ContractionVertex<V>>] to contractionHierarchy : ContractionHierarchy<V,E> in class org.jgrapht.alg.shortestpath.CHManyToManyShortestPaths",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 75,
		"endLine": 75,
		"startColumn": 61,
		"endColumn": 77,
		"codeElementType": "FIELD_DECLARATION",
		"description": "merged attribute declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 80,
		"endLine": 80,
		"startColumn": 42,
		"endColumn": 60,
		"codeElementType": "FIELD_DECLARATION",
		"description": "merged attribute declaration",
		"codeElement": "contractionMapping : Map<V,ContractionVertex<V>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 76,
		"endLine": 76,
		"startColumn": 40,
		"endColumn": 60,
		"codeElementType": "FIELD_DECLARATION",
		"description": "new attribute declaration",
		"codeElement": "contractionHierarchy : ContractionHierarchy<V,E>"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type Pair<Graph<ContractionVertex<V>,ContractionEdge<E>>,Map<V,ContractionVertex<V>>> to ContractionHierarchy<V,E> in method public computeContractionHierarchy() : ContractionHierarchy<V,E> from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchy.java",
		"startLine": 281,
		"endLine": 281,
		"startColumn": 12,
		"endColumn": 95,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "Pair<Graph<ContractionVertex<V>,ContractionEdge<E>>,Map<V,ContractionVertex<V>>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchy.java",
		"startLine": 276,
		"endLine": 294,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public computeContractionHierarchy() : Pair<Graph<ContractionVertex<V>,ContractionEdge<E>>,Map<V,ContractionVertex<V>>>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 282,
		"endLine": 282,
		"startColumn": 12,
		"endColumn": 38,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "ContractionHierarchy<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 277,
		"endLine": 294,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "public computeContractionHierarchy() : ContractionHierarchy<V,E>"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testEmptyGraph() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 62,
		"endLine": 63,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 65,
		"endLine": 65,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 65,
		"endLine": 65,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 68,
		"endLine": 69,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contractor : ContractionHierarchy<Integer,DefaultWeightedEdge> to contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge> in method public testEmptyGraph() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 60,
		"endLine": 61,
		"startColumn": 60,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contractor : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 62,
		"endLine": 63,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 61,
		"endLine": 62,
		"startColumn": 74,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testEmptyGraph() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 62,
		"endLine": 63,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 65,
		"endLine": 65,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 65,
		"endLine": 65,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 68,
		"endLine": 69,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 70,
		"endLine": 70,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testDirectedGraph1() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 91,
		"endLine": 91,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 90,
		"endLine": 91,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 93,
		"endLine": 93,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 95,
		"endLine": 95,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 94,
		"endLine": 95,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contractor : ContractionHierarchy<Integer,DefaultWeightedEdge> to contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge> in method public testDirectedGraph1() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 88,
		"endLine": 89,
		"startColumn": 60,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contractor : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 90,
		"endLine": 91,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 88,
		"endLine": 89,
		"startColumn": 74,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testDirectedGraph1() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 91,
		"endLine": 91,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 90,
		"endLine": 91,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 93,
		"endLine": 93,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 95,
		"endLine": 95,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 90,
		"endLine": 90,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 92,
		"endLine": 92,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 94,
		"endLine": 95,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 96,
		"endLine": 96,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testDirectedGraph2() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 121,
		"endLine": 122,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 124,
		"endLine": 124,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 123,
		"endLine": 123,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contractor : ContractionHierarchy<Integer,DefaultWeightedEdge> to contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge> in method public testDirectedGraph2() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 119,
		"endLine": 120,
		"startColumn": 60,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contractor : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 121,
		"endLine": 122,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 119,
		"endLine": 120,
		"startColumn": 74,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testDirectedGraph2() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 122,
		"endLine": 122,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 121,
		"endLine": 122,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 124,
		"endLine": 124,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 126,
		"endLine": 126,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 121,
		"endLine": 121,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 123,
		"endLine": 123,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 125,
		"endLine": 125,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testDirectedGraph3() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 147,
		"endLine": 148,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 151,
		"endLine": 151,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contractor : ContractionHierarchy<Integer,DefaultWeightedEdge> to contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge> in method public testDirectedGraph3() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 145,
		"endLine": 146,
		"startColumn": 60,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contractor : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 147,
		"endLine": 148,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 144,
		"endLine": 145,
		"startColumn": 74,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testDirectedGraph3() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 147,
		"endLine": 148,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 152,
		"endLine": 152,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 153,
		"endLine": 153,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 146,
		"endLine": 146,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 148,
		"endLine": 148,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 150,
		"endLine": 150,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 151,
		"endLine": 151,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testUndirectedGraph1() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 186,
		"endLine": 187,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 191,
		"endLine": 191,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 186,
		"endLine": 186,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 188,
		"endLine": 188,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contractor : ContractionHierarchy<Integer,DefaultWeightedEdge> to contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge> in method public testUndirectedGraph1() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 184,
		"endLine": 185,
		"startColumn": 60,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contractor : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 186,
		"endLine": 187,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 182,
		"endLine": 183,
		"startColumn": 74,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testUndirectedGraph1() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 186,
		"endLine": 187,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 191,
		"endLine": 191,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 192,
		"endLine": 192,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 186,
		"endLine": 186,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 188,
		"endLine": 188,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 189,
		"endLine": 189,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testUndirectedGraph2() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 226,
		"endLine": 226,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 225,
		"endLine": 226,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 230,
		"endLine": 230,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 222,
		"endLine": 222,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 222,
		"endLine": 222,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 224,
		"endLine": 224,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 226,
		"endLine": 226,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contractor : ContractionHierarchy<Integer,DefaultWeightedEdge> to contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge> in method public testUndirectedGraph2() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 223,
		"endLine": 224,
		"startColumn": 60,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contractor : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 225,
		"endLine": 226,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 220,
		"endLine": 221,
		"startColumn": 74,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 222,
		"endLine": 222,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testUndirectedGraph2() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 226,
		"endLine": 226,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 225,
		"endLine": 226,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 228,
		"endLine": 228,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 230,
		"endLine": 230,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 222,
		"endLine": 222,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 222,
		"endLine": 222,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 224,
		"endLine": 224,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 226,
		"endLine": 226,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testUndirectedGraph3() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 254,
		"endLine": 254,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 253,
		"endLine": 254,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 256,
		"endLine": 256,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 258,
		"endLine": 258,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 259,
		"endLine": 259,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 251,
		"endLine": 251,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 253,
		"endLine": 253,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 254,
		"endLine": 254,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contractor : ContractionHierarchy<Integer,DefaultWeightedEdge> to contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge> in method public testUndirectedGraph3() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 251,
		"endLine": 252,
		"startColumn": 60,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contractor : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 253,
		"endLine": 254,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 247,
		"endLine": 248,
		"startColumn": 74,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testUndirectedGraph3() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 254,
		"endLine": 254,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 253,
		"endLine": 254,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 256,
		"endLine": 256,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 258,
		"endLine": 258,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 259,
		"endLine": 259,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 249,
		"endLine": 249,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 251,
		"endLine": 251,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 253,
		"endLine": 253,
		"startColumn": 9,
		"endColumn": 132,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 254,
		"endLine": 254,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testUndirectedGraph4() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 312,
		"endLine": 312,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 311,
		"endLine": 312,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 314,
		"endLine": 314,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 316,
		"endLine": 316,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 317,
		"endLine": 317,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 306,
		"endLine": 306,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 306,
		"endLine": 306,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 308,
		"endLine": 308,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 310,
		"endLine": 311,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 312,
		"endLine": 312,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contractor : ContractionHierarchy<Integer,DefaultWeightedEdge> to contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge> in method public testUndirectedGraph4() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 309,
		"endLine": 310,
		"startColumn": 60,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contractor : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 311,
		"endLine": 312,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 304,
		"endLine": 305,
		"startColumn": 74,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 306,
		"endLine": 306,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testUndirectedGraph4() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 312,
		"endLine": 312,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 311,
		"endLine": 312,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 314,
		"endLine": 314,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 316,
		"endLine": 316,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 317,
		"endLine": 317,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 306,
		"endLine": 306,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 306,
		"endLine": 306,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 308,
		"endLine": 308,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 310,
		"endLine": 311,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 312,
		"endLine": 312,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testPseudograph() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 380,
		"endLine": 380,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 379,
		"endLine": 380,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 382,
		"endLine": 382,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 384,
		"endLine": 384,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 385,
		"endLine": 385,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 374,
		"endLine": 374,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 374,
		"endLine": 374,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 376,
		"endLine": 376,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 378,
		"endLine": 379,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 380,
		"endLine": 380,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type contractor : ContractionHierarchy<Integer,DefaultWeightedEdge> to contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge> in method public testPseudograph() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 377,
		"endLine": 378,
		"startColumn": 60,
		"endColumn": 76,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "contractor : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 379,
		"endLine": 380,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 372,
		"endLine": 373,
		"startColumn": 74,
		"endColumn": 90,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "contractor : ContractionHierarchyPrecomputation<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 374,
		"endLine": 374,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>> to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method public testPseudograph() : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 380,
		"endLine": 380,
		"startColumn": 59,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "p : Pair<Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>,Map<Integer,ContractionVertex<Integer>>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 379,
		"endLine": 380,
		"startColumn": 9,
		"endColumn": 104,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 382,
		"endLine": 382,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 384,
		"endLine": 384,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 385,
		"endLine": 385,
		"startColumn": 9,
		"endColumn": 85,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 374,
		"endLine": 374,
		"startColumn": 60,
		"endColumn": 112,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 374,
		"endLine": 374,
		"startColumn": 9,
		"endColumn": 113,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 376,
		"endLine": 376,
		"startColumn": 9,
		"endColumn": 34,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 378,
		"endLine": 379,
		"startColumn": 9,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 380,
		"endLine": 380,
		"startColumn": 9,
		"endColumn": 105,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Localize Parameter",
	"description": "Localize Parameter contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>> to contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>> in method private assertCorrectMapping(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 440,
		"endLine": 441,
		"startColumn": 39,
		"endColumn": 101,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 446,
		"endLine": 446,
		"startColumn": 9,
		"endColumn": 66,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 434,
		"endLine": 434,
		"startColumn": 81,
		"endColumn": 131,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 440,
		"endLine": 440,
		"startColumn": 9,
		"endColumn": 66,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Localize Parameter",
	"description": "Localize Parameter mapping : Map<Integer,ContractionVertex<Integer>> to mapping : Map<Integer,ContractionVertex<Integer>> in method private assertCorrectMapping(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 442,
		"endLine": 442,
		"startColumn": 39,
		"endColumn": 87,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 443,
		"endLine": 443,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 444,
		"endLine": 444,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 435,
		"endLine": 435,
		"startColumn": 50,
		"endColumn": 93,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 437,
		"endLine": 437,
		"startColumn": 9,
		"endColumn": 59,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 438,
		"endLine": 438,
		"startColumn": 9,
		"endColumn": 88,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Merge Parameter",
	"description": "Merge Parameter [contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>, mapping : Map<Integer,ContractionVertex<Integer>>] to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method private assertCorrectMapping(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 440,
		"endLine": 441,
		"startColumn": 39,
		"endColumn": 101,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 442,
		"endLine": 442,
		"startColumn": 39,
		"endColumn": 87,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 430,
		"endLine": 447,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private assertCorrectMapping(graph Graph<Integer,DefaultWeightedEdge>, contractionGraph Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>, mapping Map<Integer,ContractionVertex<Integer>>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 433,
		"endLine": 433,
		"startColumn": 39,
		"endColumn": 99,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "new variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 424,
		"endLine": 441,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with merged variables",
		"codeElement": "private assertCorrectMapping(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void"
}]
},
{
	"type": "Localize Parameter",
	"description": "Localize Parameter contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>> to contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>> in method private assertNoEdgesRemoved(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 458,
		"endLine": 459,
		"startColumn": 39,
		"endColumn": 101,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 465,
		"endLine": 465,
		"startColumn": 13,
		"endColumn": 97,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 452,
		"endLine": 452,
		"startColumn": 81,
		"endColumn": 131,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 459,
		"endLine": 459,
		"startColumn": 13,
		"endColumn": 97,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Localize Parameter",
	"description": "Localize Parameter mapping : Map<Integer,ContractionVertex<Integer>> to mapping : Map<Integer,ContractionVertex<Integer>> in method private assertNoEdgesRemoved(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 460,
		"endLine": 460,
		"startColumn": 39,
		"endColumn": 87,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 465,
		"endLine": 465,
		"startColumn": 13,
		"endColumn": 97,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 453,
		"endLine": 453,
		"startColumn": 50,
		"endColumn": 93,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 459,
		"endLine": 459,
		"startColumn": 13,
		"endColumn": 97,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Merge Parameter",
	"description": "Merge Parameter [contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>, mapping : Map<Integer,ContractionVertex<Integer>>] to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method private assertNoEdgesRemoved(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 458,
		"endLine": 459,
		"startColumn": 39,
		"endColumn": 101,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 460,
		"endLine": 460,
		"startColumn": 39,
		"endColumn": 87,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 449,
		"endLine": 467,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private assertNoEdgesRemoved(graph Graph<Integer,DefaultWeightedEdge>, contractionGraph Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>, mapping Map<Integer,ContractionVertex<Integer>>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 451,
		"endLine": 451,
		"startColumn": 39,
		"endColumn": 99,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "new variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 443,
		"endLine": 461,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with merged variables",
		"codeElement": "private assertNoEdgesRemoved(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void"
}]
},
{
	"type": "Localize Parameter",
	"description": "Localize Parameter contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>> to contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>> in method private assertCorrectEdgeWeights(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 478,
		"endLine": 479,
		"startColumn": 43,
		"endColumn": 105,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 488,
		"endLine": 489,
		"startColumn": 13,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 472,
		"endLine": 472,
		"startColumn": 81,
		"endColumn": 131,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 482,
		"endLine": 483,
		"startColumn": 13,
		"endColumn": 83,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Localize Parameter",
	"description": "Localize Parameter mapping : Map<Integer,ContractionVertex<Integer>> to mapping : Map<Integer,ContractionVertex<Integer>> in method private assertCorrectEdgeWeights(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 480,
		"endLine": 480,
		"startColumn": 43,
		"endColumn": 91,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 484,
		"endLine": 484,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 485,
		"endLine": 485,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 473,
		"endLine": 473,
		"startColumn": 50,
		"endColumn": 93,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 478,
		"endLine": 478,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 479,
		"endLine": 479,
		"startColumn": 13,
		"endColumn": 79,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Merge Parameter",
	"description": "Merge Parameter [contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>, mapping : Map<Integer,ContractionVertex<Integer>>] to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method private assertCorrectEdgeWeights(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 478,
		"endLine": 479,
		"startColumn": 43,
		"endColumn": 105,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 480,
		"endLine": 480,
		"startColumn": 43,
		"endColumn": 91,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 469,
		"endLine": 492,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private assertCorrectEdgeWeights(graph Graph<Integer,DefaultWeightedEdge>, contractionGraph Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>, mapping Map<Integer,ContractionVertex<Integer>>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 471,
		"endLine": 471,
		"startColumn": 43,
		"endColumn": 103,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "new variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 463,
		"endLine": 486,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with merged variables",
		"codeElement": "private assertCorrectEdgeWeights(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void"
}]
},
{
	"type": "Localize Parameter",
	"description": "Localize Parameter contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>> to contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>> in method private assertCorrectContractionEdges(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 505,
		"endLine": 506,
		"startColumn": 48,
		"endColumn": 110,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 516,
		"endLine": 516,
		"startColumn": 17,
		"endColumn": 97,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 518,
		"endLine": 518,
		"startColumn": 17,
		"endColumn": 111,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 519,
		"endLine": 519,
		"startColumn": 17,
		"endColumn": 111,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 513,
		"endLine": 533,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 499,
		"endLine": 499,
		"startColumn": 81,
		"endColumn": 131,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 510,
		"endLine": 510,
		"startColumn": 17,
		"endColumn": 97,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 512,
		"endLine": 512,
		"startColumn": 17,
		"endColumn": 111,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 513,
		"endLine": 513,
		"startColumn": 17,
		"endColumn": 111,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 507,
		"endLine": 527,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Localize Parameter",
	"description": "Localize Parameter mapping : Map<Integer,ContractionVertex<Integer>> to mapping : Map<Integer,ContractionVertex<Integer>> in method private assertCorrectContractionEdges(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 507,
		"endLine": 507,
		"startColumn": 48,
		"endColumn": 96,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 509,
		"endLine": 511,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 500,
		"endLine": 500,
		"startColumn": 50,
		"endColumn": 93,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 503,
		"endLine": 505,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "ENHANCED_FOR_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Merge Parameter",
	"description": "Merge Parameter [contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>, mapping : Map<Integer,ContractionVertex<Integer>>] to hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge> in method private assertCorrectContractionEdges(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputationTest",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 505,
		"endLine": 506,
		"startColumn": 48,
		"endColumn": 110,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "contractionGraph : Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 507,
		"endLine": 507,
		"startColumn": 48,
		"endColumn": 96,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "merged variable declaration",
		"codeElement": "mapping : Map<Integer,ContractionVertex<Integer>>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyTest.java",
		"startLine": 494,
		"endLine": 534,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private assertCorrectContractionEdges(graph Graph<Integer,DefaultWeightedEdge>, contractionGraph Graph<ContractionVertex<Integer>,ContractionEdge<DefaultWeightedEdge>>, mapping Map<Integer,ContractionVertex<Integer>>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 498,
		"endLine": 498,
		"startColumn": 48,
		"endColumn": 108,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "new variable declaration",
		"codeElement": "hierarchy : ContractionHierarchy<Integer,DefaultWeightedEdge>"
}, {
		"filePath": "jgrapht-core/src/test/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputationTest.java",
		"startLine": 488,
		"endLine": 528,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with merged variables",
		"codeElement": "private assertCorrectContractionEdges(graph Graph<Integer,DefaultWeightedEdge>, hierarchy ContractionHierarchy<Integer,DefaultWeightedEdge>) : void"
}]
},
{
	"type": "Move Method",
	"description": "Move Method package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra to public unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 338,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 916,
		"endLine": 931,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "moved method declaration",
		"codeElement": "public unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Remove Parameter",
	"description": "Remove Parameter contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>> in method package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 329,
		"endLine": 329,
		"startColumn": 39,
		"endColumn": 103,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "removed parameter",
		"codeElement": "contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 338,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 916,
		"endLine": 931,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed parameter",
		"codeElement": "public unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier package to public in method public unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 338,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 916,
		"endLine": 931,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "public unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Remove Method Modifier",
	"description": "Remove Method Modifier static in method package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 338,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 916,
		"endLine": 931,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed modifier",
		"codeElement": "public unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Move Method",
	"description": "Move Method package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra to public unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 340,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 933,
		"endLine": 948,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "moved method declaration",
		"codeElement": "public unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Remove Parameter",
	"description": "Remove Parameter contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>> in method package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 347,
		"endLine": 347,
		"startColumn": 38,
		"endColumn": 102,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "removed parameter",
		"codeElement": "contractionGraph : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 340,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 933,
		"endLine": 948,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed parameter",
		"codeElement": "public unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Change Method Access Modifier",
	"description": "Change Method Access Modifier package to public in method public unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 340,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 933,
		"endLine": 948,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed access modifier",
		"codeElement": "public unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Remove Method Modifier",
	"description": "Remove Method Modifier static in method package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 340,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 933,
		"endLine": 948,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed modifier",
		"codeElement": "public unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Extract Class",
	"description": "Extract Class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy from class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 37,
		"endLine": 380,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "original type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 322,
		"endLine": 338,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackBackward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 340,
		"endLine": 356,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "package unpackForward(contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 38,
		"endLine": 321,
		"startColumn": 0,
		"endColumn": 2,
		"codeElementType": "TYPE_DECLARATION",
		"description": "type declaration after extraction",
		"codeElement": "org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 851,
		"endLine": 950,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "TYPE_DECLARATION",
		"description": "extracted type declaration",
		"codeElement": "org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 916,
		"endLine": 931,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public unpackBackward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 933,
		"endLine": 948,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public unpackForward(edge ContractionEdge<E>, vertexList LinkedList<V>, edgeList LinkedList<E>) : void"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public getGraph() : Graph<V,E> extracted from public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>) in class org.jgrapht.alg.shortestpath.ContractionHierarchyBidirectionalDijkstra & moved to class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 127,
		"endLine": 146,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(graph Graph<V,E>, contractedGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 144,
		"endLine": 144,
		"startColumn": 9,
		"endColumn": 22,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 872,
		"endLine": 879,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public getGraph() : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 878,
		"endLine": 878,
		"startColumn": 13,
		"endColumn": 26,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 123,
		"endLine": 141,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public ContractionHierarchyBidirectionalDijkstra(hierarchy ContractionHierarchy<V,E>, radius double, heapSupplier Supplier<AddressableHeap<Double,Pair<ContractionVertex<V>,ContractionEdge<E>>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyBidirectionalDijkstra.java",
		"startLine": 135,
		"endLine": 135,
		"startColumn": 15,
		"endColumn": 35,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "hierarchy.getGraph()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public getGraph() : Graph<V,E> extracted from public CHManyToManyShortestPaths(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>) in class org.jgrapht.alg.shortestpath.CHManyToManyShortestPaths & moved to class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 96,
		"endLine": 110,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public CHManyToManyShortestPaths(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 107,
		"endLine": 107,
		"startColumn": 9,
		"endColumn": 22,
		"codeElementType": "SUPER_CONSTRUCTOR_INVOCATION",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 872,
		"endLine": 879,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public getGraph() : Graph<V,E>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 878,
		"endLine": 878,
		"startColumn": 13,
		"endColumn": 26,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 97,
		"endLine": 107,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public CHManyToManyShortestPaths(contractionHierarchy ContractionHierarchy<V,E>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 103,
		"endLine": 103,
		"startColumn": 15,
		"endColumn": 46,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "contractionHierarchy.getGraph()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public getContractionGraph() : Graph<ContractionVertex<V>,ContractionEdge<E>> extracted from public CHManyToManyShortestPathsImpl(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, sources Set<V>, targets Set<V>, forwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, backwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, distanceAndMiddleVertexMap Map<Pair<ContractionVertex<V>,ContractionVertex<V>>,Pair<Double,ContractionVertex<V>>>) in class org.jgrapht.alg.shortestpath.CHManyToManyShortestPaths.CHManyToManyShortestPathsImpl & moved to class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 371,
		"endLine": 401,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public CHManyToManyShortestPathsImpl(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, sources Set<V>, targets Set<V>, forwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, backwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, distanceAndMiddleVertexMap Map<Pair<ContractionVertex<V>,ContractionVertex<V>>,Pair<Double,ContractionVertex<V>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 396,
		"endLine": 396,
		"startColumn": 13,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 881,
		"endLine": 888,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public getContractionGraph() : Graph<ContractionVertex<V>,ContractionEdge<E>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 887,
		"endLine": 887,
		"startColumn": 13,
		"endColumn": 37,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 366,
		"endLine": 394,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public CHManyToManyShortestPathsImpl(graph Graph<V,E>, hierarchy ContractionHierarchy<V,E>, sources Set<V>, targets Set<V>, forwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, backwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, distanceAndMiddleVertexMap Map<Pair<ContractionVertex<V>,ContractionVertex<V>>,Pair<Double,ContractionVertex<V>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 389,
		"endLine": 389,
		"startColumn": 37,
		"endColumn": 68,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "hierarchy.getContractionGraph()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public getContractionMapping() : Map<V,ContractionVertex<V>> extracted from public CHManyToManyShortestPathsImpl(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, sources Set<V>, targets Set<V>, forwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, backwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, distanceAndMiddleVertexMap Map<Pair<ContractionVertex<V>,ContractionVertex<V>>,Pair<Double,ContractionVertex<V>>>) in class org.jgrapht.alg.shortestpath.CHManyToManyShortestPaths.CHManyToManyShortestPathsImpl & moved to class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 371,
		"endLine": 401,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public CHManyToManyShortestPathsImpl(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>, sources Set<V>, targets Set<V>, forwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, backwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, distanceAndMiddleVertexMap Map<Pair<ContractionVertex<V>,ContractionVertex<V>>,Pair<Double,ContractionVertex<V>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 397,
		"endLine": 397,
		"startColumn": 13,
		"endColumn": 58,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 890,
		"endLine": 898,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public getContractionMapping() : Map<V,ContractionVertex<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 897,
		"endLine": 897,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 366,
		"endLine": 394,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public CHManyToManyShortestPathsImpl(graph Graph<V,E>, hierarchy ContractionHierarchy<V,E>, sources Set<V>, targets Set<V>, forwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, backwardSearchSpaces Map<ContractionVertex<V>,Map<ContractionVertex<V>,Pair<Double,ContractionEdge<E>>>>, distanceAndMiddleVertexMap Map<Pair<ContractionVertex<V>,ContractionVertex<V>>,Pair<Double,ContractionVertex<V>>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 390,
		"endLine": 390,
		"startColumn": 39,
		"endColumn": 72,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "hierarchy.getContractionMapping()"
}]
},
{
	"type": "Extract And Move Method",
	"description": "Extract And Move Method public getContractionMapping() : Map<V,ContractionVertex<V>> extracted from public CHManyToManyShortestPaths(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>) in class org.jgrapht.alg.shortestpath.CHManyToManyShortestPaths & moved to class org.jgrapht.alg.shortestpath.ContractionHierarchyPrecomputation.ContractionHierarchy",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 96,
		"endLine": 110,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public CHManyToManyShortestPaths(graph Graph<V,E>, contractionGraph Graph<ContractionVertex<V>,ContractionEdge<E>>, contractionMapping Map<V,ContractionVertex<V>>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 109,
		"endLine": 109,
		"startColumn": 9,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 890,
		"endLine": 898,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "public getContractionMapping() : Map<V,ContractionVertex<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/ContractionHierarchyPrecomputation.java",
		"startLine": 897,
		"endLine": 897,
		"startColumn": 13,
		"endColumn": 39,
		"codeElementType": "RETURN_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 97,
		"endLine": 107,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public CHManyToManyShortestPaths(contractionHierarchy ContractionHierarchy<V,E>)"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/shortestpath/CHManyToManyShortestPaths.java",
		"startLine": 106,
		"endLine": 106,
		"startColumn": 35,
		"endColumn": 79,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "contractionHierarchy.getContractionMapping()"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "dd217494c97de3f03c6edacba38a8295a2bb77bb",
	"url": "https://github.com/jgrapht/jgrapht/commit/dd217494c97de3f03c6edacba38a8295a2bb77bb",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "506417583f555e5e87203ede1d4fe0c0d5eeb729",
	"url": "https://github.com/jgrapht/jgrapht/commit/506417583f555e5e87203ede1d4fe0c0d5eeb729",
	"refactorings": [{
	"type": "Try With Resources",
	"description": "Try With Resources try(FileWriter writer=new FileWriter(file)) in method public exportGraph(g Graph<V,E>, file File) : void from class org.jgrapht.nio.GraphExporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/nio/GraphExporter.java",
		"startLine": 69,
		"endLine": 73,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "TRY_STATEMENT",
		"description": "original try block",
		"codeElement": "try"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/nio/GraphExporter.java",
		"startLine": 60,
		"endLine": 74,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public exportGraph(g Graph<V,E>, file File) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/nio/GraphExporter.java",
		"startLine": 77,
		"endLine": 81,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "TRY_STATEMENT",
		"description": "try-with-resources block",
		"codeElement": "try(FileWriter writer=new FileWriter(file))"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/nio/GraphExporter.java",
		"startLine": 68,
		"endLine": 82,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with try-with-resources",
		"codeElement": "public exportGraph(g Graph<V,E>, file File) : void"
}]
},
{
	"type": "Try With Resources",
	"description": "Try With Resources try(InputStreamReader reader=new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8)) in method public importGraph(g Graph<V,E>, file File) : void from class org.jgrapht.nio.GraphImporter",
	"leftSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/nio/GraphImporter.java",
		"startLine": 64,
		"endLine": 69,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "TRY_STATEMENT",
		"description": "original try block",
		"codeElement": "try"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/nio/GraphImporter.java",
		"startLine": 55,
		"endLine": 70,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public importGraph(g Graph<V,E>, file File) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/nio/GraphImporter.java",
		"startLine": 72,
		"endLine": 79,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "TRY_STATEMENT",
		"description": "try-with-resources block",
		"codeElement": "try(InputStreamReader reader=new InputStreamReader(new FileInputStream(file),StandardCharsets.UTF_8))"
}, {
		"filePath": "jgrapht-io/src/main/java/org/jgrapht/nio/GraphImporter.java",
		"startLine": 63,
		"endLine": 80,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with try-with-resources",
		"codeElement": "public importGraph(g Graph<V,E>, file File) : void"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "7d613a9aaa187c7ef5dad24691d6492c566e9cac",
	"url": "https://github.com/jgrapht/jgrapht/commit/7d613a9aaa187c7ef5dad24691d6492c566e9cac",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "3ce95cf84e630fbb3aaf3dfd63fe4ae584496024",
	"url": "https://github.com/jgrapht/jgrapht/commit/3ce95cf84e630fbb3aaf3dfd63fe4ae584496024",
	"refactorings": [{
	"type": "Extract Method",
	"description": "Extract Method private checkNodes(a V, b V) : void extracted from public getLCA(a V, b V) : V in class org.jgrapht.alg.lca.NaiveLCAFinder",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 104,
		"endLine": 119,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration before extraction",
		"codeElement": "public getLCA(a V, b V) : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 111,
		"endLine": 111,
		"startColumn": 13,
		"endColumn": 72,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 114,
		"endLine": 114,
		"startColumn": 13,
		"endColumn": 72,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 110,
		"endLine": 111,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 113,
		"endLine": 114,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code from source method declaration",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 197,
		"endLine": 209,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "extracted method declaration",
		"codeElement": "private checkNodes(a V, b V) : void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 205,
		"endLine": 205,
		"startColumn": 13,
		"endColumn": 72,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 208,
		"endLine": 208,
		"startColumn": 13,
		"endColumn": 72,
		"codeElementType": "THROW_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 204,
		"endLine": 205,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 207,
		"endLine": 208,
		"startColumn": 9,
		"endColumn": 72,
		"codeElementType": "IF_STATEMENT",
		"description": "extracted code to extracted method declaration",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 104,
		"endLine": 117,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "source method declaration after extraction",
		"codeElement": "public getLCA(a V, b V) : V"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 110,
		"endLine": 110,
		"startColumn": 9,
		"endColumn": 25,
		"codeElementType": "METHOD_INVOCATION",
		"description": "extracted method invocation",
		"codeElement": "checkNodes(a,b)"
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type visitedSets : Set<V>[] to visitedSets : List<Set<V>> in method public getLCASet(a V, b V) : Set<V> from class org.jgrapht.alg.lca.NaiveLCAFinder",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 127,
		"endLine": 128,
		"startColumn": 49,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "visitedSets : Set<V>[]"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 140,
		"endLine": 140,
		"startColumn": 13,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 141,
		"endLine": 141,
		"startColumn": 13,
		"endColumn": 43,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 143,
		"endLine": 143,
		"startColumn": 13,
		"endColumn": 54,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 144,
		"endLine": 144,
		"startColumn": 13,
		"endColumn": 43,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 139,
		"endLine": 145,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 22,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "visitedSets : List<Set<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 133,
		"endLine": 133,
		"startColumn": 13,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 134,
		"endLine": 134,
		"startColumn": 13,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 136,
		"endLine": 136,
		"startColumn": 13,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 137,
		"endLine": 137,
		"startColumn": 13,
		"endColumn": 47,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 132,
		"endLine": 138,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Remove Variable Annotation",
	"description": "Remove Variable Annotation @SuppressWarnings(\"unchecked\") in variable visitedSets : Set<V>[] in method public getLCASet(a V, b V) : Set<V> from class org.jgrapht.alg.lca.NaiveLCAFinder",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 127,
		"endLine": 128,
		"startColumn": 49,
		"endColumn": 55,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "visitedSets : Set<V>[]"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 121,
		"endLine": 166,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "public getLCASet(a V, b V) : Set<V>"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 127,
		"endLine": 127,
		"startColumn": 22,
		"endColumn": 51,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "variable declaration with removed annotation",
		"codeElement": "visitedSets : List<Set<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 119,
		"endLine": 159,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed variable annotation",
		"codeElement": "public getLCASet(a V, b V) : Set<V>"
}]
},
{
	"type": "Localize Parameter",
	"description": "Localize Parameter visitedSets : Set<V>[] to visitedSets : List<Set<V>> in method private doubleBfs(a V, b V) : List<Set<V>> from class org.jgrapht.alg.lca.NaiveLCAFinder",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 173,
		"endLine": 173,
		"startColumn": 38,
		"endColumn": 58,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "visitedSets : Set<V>[]"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 183,
		"endLine": 183,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 197,
		"endLine": 197,
		"startColumn": 33,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 195,
		"endLine": 198,
		"startColumn": 29,
		"endColumn": 30,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 190,
		"endLine": 200,
		"startColumn": 17,
		"endColumn": 22,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 169,
		"endLine": 169,
		"startColumn": 22,
		"endColumn": 100,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "renamed variable declaration",
		"codeElement": "visitedSets : List<Set<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 174,
		"endLine": 174,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 175,
		"endLine": 175,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 188,
		"endLine": 188,
		"startColumn": 33,
		"endColumn": 66,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 186,
		"endLine": 189,
		"startColumn": 29,
		"endColumn": 30,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 181,
		"endLine": 191,
		"startColumn": 17,
		"endColumn": 22,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type visitedSets : Set<V>[] to visitedSets : List<Set<V>> in method private doubleBfs(a V, b V) : List<Set<V>> from class org.jgrapht.alg.lca.NaiveLCAFinder",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 173,
		"endLine": 173,
		"startColumn": 38,
		"endColumn": 58,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "visitedSets : Set<V>[]"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 183,
		"endLine": 183,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 184,
		"endLine": 184,
		"startColumn": 9,
		"endColumn": 31,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 197,
		"endLine": 197,
		"startColumn": 33,
		"endColumn": 62,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 195,
		"endLine": 198,
		"startColumn": 29,
		"endColumn": 30,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 190,
		"endLine": 200,
		"startColumn": 17,
		"endColumn": 22,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 169,
		"endLine": 169,
		"startColumn": 22,
		"endColumn": 100,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "visitedSets : List<Set<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 174,
		"endLine": 174,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 175,
		"endLine": 175,
		"startColumn": 9,
		"endColumn": 35,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 188,
		"endLine": 188,
		"startColumn": 33,
		"endColumn": 66,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 186,
		"endLine": 189,
		"startColumn": 29,
		"endColumn": 30,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 181,
		"endLine": 191,
		"startColumn": 17,
		"endColumn": 22,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type queues : Queue<V>[] to queues : List<Queue<V>> in method private doubleBfs(a V, b V) : List<Set<V>> from class org.jgrapht.alg.lca.NaiveLCAFinder",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 175,
		"endLine": 176,
		"startColumn": 51,
		"endColumn": 59,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "queues : Queue<V>[]"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 180,
		"endLine": 180,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 181,
		"endLine": 181,
		"startColumn": 9,
		"endColumn": 26,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 188,
		"endLine": 188,
		"startColumn": 17,
		"endColumn": 45,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 196,
		"endLine": 196,
		"startColumn": 33,
		"endColumn": 57,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 187,
		"endLine": 201,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 186,
		"endLine": 202,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 24,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "changed-type variable declaration",
		"codeElement": "queues : List<Queue<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 171,
		"endLine": 171,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 172,
		"endLine": 172,
		"startColumn": 9,
		"endColumn": 30,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 179,
		"endLine": 179,
		"startColumn": 17,
		"endColumn": 49,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 187,
		"endLine": 187,
		"startColumn": 33,
		"endColumn": 61,
		"codeElementType": "EXPRESSION_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 178,
		"endLine": 192,
		"startColumn": 13,
		"endColumn": 14,
		"codeElementType": "IF_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 177,
		"endLine": 193,
		"startColumn": 9,
		"endColumn": 10,
		"codeElementType": "FOR_STATEMENT",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Remove Variable Annotation",
	"description": "Remove Variable Annotation @SuppressWarnings(\"unchecked\") in variable queues : Queue<V>[] in method private doubleBfs(a V, b V, visitedSets Set<V>[]) : void from class org.jgrapht.alg.lca.NaiveLCAFinder",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 175,
		"endLine": 175,
		"startColumn": 9,
		"endColumn": 39,
		"codeElementType": "ANNOTATION",
		"description": "removed annotation",
		"codeElement": "@SuppressWarnings(\"unchecked\")"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 175,
		"endLine": 176,
		"startColumn": 51,
		"endColumn": 59,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "original variable declaration",
		"codeElement": "queues : Queue<V>[]"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 168,
		"endLine": 203,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private doubleBfs(a V, b V, visitedSets Set<V>[]) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 168,
		"endLine": 168,
		"startColumn": 24,
		"endColumn": 103,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "variable declaration with removed annotation",
		"codeElement": "queues : List<Queue<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 161,
		"endLine": 195,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with removed variable annotation",
		"codeElement": "private doubleBfs(a V, b V) : List<Set<V>>"
}]
},
{
	"type": "Change Return Type",
	"description": "Change Return Type void to List<Set<V>> in method private doubleBfs(a V, b V) : List<Set<V>> from class org.jgrapht.alg.lca.NaiveLCAFinder",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 173,
		"endLine": 173,
		"startColumn": 13,
		"endColumn": 17,
		"codeElementType": "TYPE",
		"description": "original return type",
		"codeElement": "void"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 168,
		"endLine": 203,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "original method declaration",
		"codeElement": "private doubleBfs(a V, b V, visitedSets Set<V>[]) : void"
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 166,
		"endLine": 166,
		"startColumn": 13,
		"endColumn": 25,
		"codeElementType": "TYPE",
		"description": "changed return type",
		"codeElement": "List<Set<V>>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/alg/lca/NaiveLCAFinder.java",
		"startLine": 161,
		"endLine": 195,
		"startColumn": 5,
		"endColumn": 6,
		"codeElementType": "METHOD_DECLARATION",
		"description": "method declaration with changed return type",
		"codeElement": "private doubleBfs(a V, b V) : List<Set<V>>"
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "442b690ffa7b97d5a89a71a73626aee3893c48e9",
	"url": "https://github.com/jgrapht/jgrapht/commit/442b690ffa7b97d5a89a71a73626aee3893c48e9",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "ed313dcfd1e98cfba1a15469989215136566784a",
	"url": "https://github.com/jgrapht/jgrapht/commit/ed313dcfd1e98cfba1a15469989215136566784a",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "0ddbfe50e3e3bee3ab986a8dae3036f7204fbeff",
	"url": "https://github.com/jgrapht/jgrapht/commit/0ddbfe50e3e3bee3ab986a8dae3036f7204fbeff",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "f0a3f3d772bcd2841850329d8336679b8127cff0",
	"url": "https://github.com/jgrapht/jgrapht/commit/f0a3f3d772bcd2841850329d8336679b8127cff0",
	"refactorings": [{
	"type": "Extract Variable",
	"description": "Extract Variable constructor : Constructor<? extends T> in method public createSupplier(clazz Class<? extends T>) : Supplier<T> from class org.jgrapht.util.SupplierUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 62,
		"endLine": 62,
		"startColumn": 17,
		"endColumn": 69,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement with the initializer of the extracted variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 44,
		"endColumn": 88,
		"codeElementType": "VARIABLE_DECLARATION_STATEMENT",
		"description": "extracted variable declaration",
		"codeElement": "constructor : Constructor<? extends T>"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 68,
		"endLine": 68,
		"startColumn": 13,
		"endColumn": 59,
		"codeElementType": "RETURN_STATEMENT",
		"description": "statement with the name of the extracted variable",
		"codeElement": null
}]
},
{
	"type": "Change Variable Type",
	"description": "Change Variable Type ex : Exception to e : ReflectiveOperationException in method public createSupplier(clazz Class<? extends T>) : Supplier<T> from class org.jgrapht.util.SupplierUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 22,
		"endColumn": 34,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "ex : Exception"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 63,
		"endLine": 65,
		"startColumn": 15,
		"endColumn": 14,
		"codeElementType": "CATCH_CLAUSE",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 18,
		"endColumn": 48,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "changed-type variable declaration",
		"codeElement": "e : ReflectiveOperationException"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 69,
		"endLine": 72,
		"startColumn": 11,
		"endColumn": 10,
		"codeElementType": "CATCH_CLAUSE",
		"description": "statement referencing the variable with changed type",
		"codeElement": null
}]
},
{
	"type": "Rename Variable",
	"description": "Rename Variable ex : Exception to e : ReflectiveOperationException in method public createSupplier(clazz Class<? extends T>) : Supplier<T> from class org.jgrapht.util.SupplierUtil",
	"leftSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 63,
		"endLine": 63,
		"startColumn": 22,
		"endColumn": 34,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "original variable declaration",
		"codeElement": "ex : Exception"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 63,
		"endLine": 65,
		"startColumn": 15,
		"endColumn": 14,
		"codeElementType": "CATCH_CLAUSE",
		"description": "statement referencing the original variable",
		"codeElement": null
}],
	"rightSideLocations": [{
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 69,
		"endLine": 69,
		"startColumn": 18,
		"endColumn": 48,
		"codeElementType": "SINGLE_VARIABLE_DECLARATION",
		"description": "renamed variable declaration",
		"codeElement": "e : ReflectiveOperationException"
}, {
		"filePath": "jgrapht-core/src/main/java/org/jgrapht/util/SupplierUtil.java",
		"startLine": 69,
		"endLine": 72,
		"startColumn": 11,
		"endColumn": 10,
		"codeElementType": "CATCH_CLAUSE",
		"description": "statement referencing the renamed variable",
		"codeElement": null
}]
}
]
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "5af866c43bb537125e84702c1e8210ac518f5fd8",
	"url": "https://github.com/jgrapht/jgrapht/commit/5af866c43bb537125e84702c1e8210ac518f5fd8",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "08c03597b5d4e58edc79d68aa2e72e0c72bd4e49",
	"url": "https://github.com/jgrapht/jgrapht/commit/08c03597b5d4e58edc79d68aa2e72e0c72bd4e49",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "ad265569a9fee4261693e80556e4faeea0882e4b",
	"url": "https://github.com/jgrapht/jgrapht/commit/ad265569a9fee4261693e80556e4faeea0882e4b",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "ebe0c8872762ecfc759b5c20beee4e4dfffbb613",
	"url": "https://github.com/jgrapht/jgrapht/commit/ebe0c8872762ecfc759b5c20beee4e4dfffbb613",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "5a1c6344ffb60d1c59d3f49abdc981604b1c391d",
	"url": "https://github.com/jgrapht/jgrapht/commit/5a1c6344ffb60d1c59d3f49abdc981604b1c391d",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "ac67e55b5c12696ea9a745f8f1fbe5285eb6224b",
	"url": "https://github.com/jgrapht/jgrapht/commit/ac67e55b5c12696ea9a745f8f1fbe5285eb6224b",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "5a9339202a2131f90c4ac9df58df20592ca5cb7e",
	"url": "https://github.com/jgrapht/jgrapht/commit/5a9339202a2131f90c4ac9df58df20592ca5cb7e",
	"refactorings": []
},
{
	"repository": "https://github.com/jgrapht/jgrapht.git",
	"sha1": "22fd061572ab22cf8ac6a4b34cf644acfc857dca",
	"url": "https://github.com/jgrapht/jgrapht/commit/22fd061572ab22cf8ac6a4b34cf644acfc857dca",
	"refactorings": []
}]
}